ARM GAS  /tmp/cc74qjbb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"assembly_test.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.data
  19              		.align	2
  22              	iap_entry:
  23 0000 F11FFF1F 		.word	536813553
  24              		.comm	clkn_high,1,1
  25              		.comm	rxbuf1,50,4
  26              		.comm	rxbuf2,50,4
  27              		.global	active_rxbuf
  28              		.align	2
  31              	active_rxbuf:
  32 0004 00000000 		.word	rxbuf1
  33              		.global	idle_rxbuf
  34              		.align	2
  37              	idle_rxbuf:
  38 0008 00000000 		.word	rxbuf2
  39              		.comm	rr,5,4
  40              		.global	mode
  41              		.bss
  42              		.align	2
  45              	mode:
  46 0000 00000000 		.space	4
  47              		.global	requested_mode
  48              		.align	2
  51              	requested_mode:
  52 0004 00000000 		.space	4
  53              		.global	modulation
  54              		.align	2
  57              	modulation:
  58 0008 00000000 		.space	4
  59              		.global	channel
  60              		.data
  61              		.align	1
  64              	channel:
  65 000c 8909     		.short	2441
  66              		.global	low_freq
  67              		.align	1
  70              	low_freq:
  71 000e 6009     		.short	2400
  72              		.global	high_freq
  73              		.align	1
ARM GAS  /tmp/cc74qjbb.s 			page 2


  76              	high_freq:
  77 0010 B309     		.short	2483
  78              		.comm	rx_dma_lli1,16,4
  79              		.comm	rx_dma_lli2,16,4
  80              		.comm	rx_tc,4,4
  81              		.comm	rx_err,4,4
  82              		.global	rx_pkts
  83              		.bss
  84              		.align	2
  87              	rx_pkts:
  88 000c 00000000 		.space	4
  89              		.global	status
  92              	status:
  93 0010 00       		.space	1
  94              		.comm	fifo,8192,4
  95              		.global	head
  96 0011 000000   		.align	2
  99              	head:
 100 0014 00000000 		.space	4
 101              		.global	tail
 102              		.align	2
 105              	tail:
 106 0018 00000000 		.space	4
 107              		.section	.text.queue_init,"ax",%progbits
 108              		.align	2
 109              		.global	queue_init
 110              		.thumb
 111              		.thumb_func
 113              	queue_init:
 114              	.LFB0:
 115              		.file 1 "assembly_test.c"
   1:assembly_test.c **** /*
   2:assembly_test.c ****  * Copyright 2010 Michael Ossmann
   3:assembly_test.c ****  *
   4:assembly_test.c ****  * This file is part of Project Ubertooth.
   5:assembly_test.c ****  *
   6:assembly_test.c ****  * This program is free software; you can redistribute it and/or modify
   7:assembly_test.c ****  * it under the terms of the GNU General Public License as published by
   8:assembly_test.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:assembly_test.c ****  * any later version.
  10:assembly_test.c ****  *
  11:assembly_test.c ****  * This program is distributed in the hope that it will be useful,
  12:assembly_test.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:assembly_test.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:assembly_test.c ****  * GNU General Public License for more details.
  15:assembly_test.c ****  *
  16:assembly_test.c ****  * You should have received a copy of the GNU General Public License
  17:assembly_test.c ****  * along with this program; see the file COPYING.  If not, write to
  18:assembly_test.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:assembly_test.c ****  * Boston, MA 02110-1301, USA.
  20:assembly_test.c ****  */
  21:assembly_test.c **** 
  22:assembly_test.c **** /*
  23:assembly_test.c **** 	LPCUSB, an USB device driver for LPC microcontrollers	
  24:assembly_test.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
  25:assembly_test.c **** 
  26:assembly_test.c **** 	Redistribution and use in source and binary forms, with or without
ARM GAS  /tmp/cc74qjbb.s 			page 3


  27:assembly_test.c **** 	modification, are permitted provided that the following conditions are met:
  28:assembly_test.c **** 
  29:assembly_test.c **** 	1. Redistributions of source code must retain the above copyright
  30:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer.
  31:assembly_test.c **** 	2. Redistributions in binary form must reproduce the above copyright
  32:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer in the
  33:assembly_test.c **** 	   documentation and/or other materials provided with the distribution.
  34:assembly_test.c **** 	3. The name of the author may not be used to endorse or promote products
  35:assembly_test.c **** 	   derived from this software without specific prior written permission.
  36:assembly_test.c **** 
  37:assembly_test.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  38:assembly_test.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  39:assembly_test.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  40:assembly_test.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
  41:assembly_test.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  42:assembly_test.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  43:assembly_test.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  44:assembly_test.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  45:assembly_test.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  46:assembly_test.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:assembly_test.c **** */
  48:assembly_test.c **** /* For git version strings */
  49:assembly_test.c **** #include <string.h>
  50:assembly_test.c **** 
  51:assembly_test.c **** #include "ubertooth.h"
  52:assembly_test.c **** #include "usbapi.h"
  53:assembly_test.c **** #include "usbhw_lpc.h"
  54:assembly_test.c **** 
  55:assembly_test.c **** /*
  56:assembly_test.c ****  * CLK100NS is a free-running clock with a period of 100ns.  It resets every
  57:assembly_test.c ****  * 2^15 * 10^5 cycles (about 5.5 minutes) and is used to compute CLKN.
  58:assembly_test.c ****  *
  59:assembly_test.c ****  * CLKN is the native (local) clock as defined in the Bluetooth specification.
  60:assembly_test.c ****  * It advances 3200 times per second.  Two CLKN periods make a Bluetooth time
  61:assembly_test.c ****  * slot.
  62:assembly_test.c ****  */
  63:assembly_test.c **** 
  64:assembly_test.c **** #define CLK100NS T0TC
  65:assembly_test.c **** volatile u8 clkn_high;
  66:assembly_test.c **** #define CLKN ((clkn_high << 20) | (CLK100NS / 3125))
  67:assembly_test.c **** 
  68:assembly_test.c **** #define BULK_IN_EP		0x82
  69:assembly_test.c **** #define BULK_OUT_EP		0x05
  70:assembly_test.c **** 
  71:assembly_test.c **** #define MAX_PACKET_SIZE	64
  72:assembly_test.c **** 
  73:assembly_test.c **** #define LE_WORD(x)		((x)&0xFF),((x)>>8)
  74:assembly_test.c **** 
  75:assembly_test.c **** /* DMA buffers */
  76:assembly_test.c **** #define DMA_SIZE 50
  77:assembly_test.c **** u8 rxbuf1[DMA_SIZE];
  78:assembly_test.c **** u8 rxbuf2[DMA_SIZE];
  79:assembly_test.c **** 
  80:assembly_test.c **** /*
  81:assembly_test.c ****  * The active buffer is the one with an active DMA transfer.
  82:assembly_test.c ****  * The idle buffer is the one we can read/write between transfers.
  83:assembly_test.c ****  */
ARM GAS  /tmp/cc74qjbb.s 			page 4


  84:assembly_test.c **** u8 *active_rxbuf = &rxbuf1[0];
  85:assembly_test.c **** u8 *idle_rxbuf = &rxbuf2[0];
  86:assembly_test.c **** 
  87:assembly_test.c **** rangetest_result rr;
  88:assembly_test.c **** 
  89:assembly_test.c **** volatile u32 mode = MODE_IDLE;
  90:assembly_test.c **** volatile u32 requested_mode = MODE_IDLE;
  91:assembly_test.c **** volatile u32 modulation = MOD_BT_BASIC_RATE;
  92:assembly_test.c **** volatile u16 channel = 2441;
  93:assembly_test.c **** volatile u16 low_freq = 2400;
  94:assembly_test.c **** volatile u16 high_freq = 2483;
  95:assembly_test.c **** 
  96:assembly_test.c **** /* DMA linked list items */
  97:assembly_test.c **** typedef struct {
  98:assembly_test.c **** 	u32 src;
  99:assembly_test.c **** 	u32 dest;
 100:assembly_test.c **** 	u32 next_lli;
 101:assembly_test.c **** 	u32 control;
 102:assembly_test.c **** } dma_lli;
 103:assembly_test.c **** 
 104:assembly_test.c **** dma_lli rx_dma_lli1;
 105:assembly_test.c **** dma_lli rx_dma_lli2;
 106:assembly_test.c **** 
 107:assembly_test.c **** /* rx terminal count and error interrupt counters */
 108:assembly_test.c **** volatile u32 rx_tc;
 109:assembly_test.c **** volatile u32 rx_err;
 110:assembly_test.c **** 
 111:assembly_test.c **** /* number of rx USB packets to send */
 112:assembly_test.c **** volatile u32 rx_pkts = 0;
 113:assembly_test.c **** 
 114:assembly_test.c **** /* status information byte */
 115:assembly_test.c **** volatile u8 status = 0;
 116:assembly_test.c **** 
 117:assembly_test.c **** #define DMA_OVERFLOW  0x01
 118:assembly_test.c **** #define DMA_ERROR     0x02
 119:assembly_test.c **** #define FIFO_OVERFLOW 0x04
 120:assembly_test.c **** 
 121:assembly_test.c **** /*
 122:assembly_test.c ****  * This is supposed to be a lock-free ring buffer, but I haven't verified
 123:assembly_test.c ****  * atomicity of the operations on head and tail.
 124:assembly_test.c ****  */
 125:assembly_test.c **** 
 126:assembly_test.c **** usb_pkt_rx fifo[128];
 127:assembly_test.c **** 
 128:assembly_test.c **** volatile u32 head = 0;
 129:assembly_test.c **** volatile u32 tail = 0;
 130:assembly_test.c **** 
 131:assembly_test.c **** void queue_init()
 132:assembly_test.c **** {
 116              		.loc 1 132 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
ARM GAS  /tmp/cc74qjbb.s 			page 5


 124 0002 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 133:assembly_test.c **** 	head = 0;
 126              		.loc 1 133 0
 127 0004 044B     		ldr	r3, .L2
 128 0006 0022     		movs	r2, #0
 129 0008 1A60     		str	r2, [r3]
 134:assembly_test.c **** 	tail = 0;
 130              		.loc 1 134 0
 131 000a 044B     		ldr	r3, .L2+4
 132 000c 0022     		movs	r2, #0
 133 000e 1A60     		str	r2, [r3]
 135:assembly_test.c **** }
 134              		.loc 1 135 0
 135 0010 BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 0012 5DF8047B 		ldr	r7, [sp], #4
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 0016 7047     		bx	lr
 142              	.L3:
 143              		.align	2
 144              	.L2:
 145 0018 00000000 		.word	head
 146 001c 00000000 		.word	tail
 147              		.cfi_endproc
 148              	.LFE0:
 150              		.section	.text.enqueue,"ax",%progbits
 151              		.align	2
 152              		.global	enqueue
 153              		.thumb
 154              		.thumb_func
 156              	enqueue:
 157              	.LFB1:
 136:assembly_test.c **** 
 137:assembly_test.c **** int enqueue(u8 *buf)
 138:assembly_test.c **** {
 158              		.loc 1 138 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 16
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 0000 80B4     		push	{r7}
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 7, -4
 166 0002 85B0     		sub	sp, sp, #20
 167              		.cfi_def_cfa_offset 24
 168 0004 00AF     		add	r7, sp, #0
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 139:assembly_test.c **** 	int i;
 140:assembly_test.c **** 	u8 h = head & 0x7F;
 171              		.loc 1 140 0
 172 0008 2C4B     		ldr	r3, .L9
 173 000a 1B68     		ldr	r3, [r3]
 174 000c DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc74qjbb.s 			page 6


 175 000e 03F07F03 		and	r3, r3, #127
 176 0012 FB72     		strb	r3, [r7, #11]
 141:assembly_test.c **** 	u8 t = tail & 0x7F;
 177              		.loc 1 141 0
 178 0014 2A4B     		ldr	r3, .L9+4
 179 0016 1B68     		ldr	r3, [r3]
 180 0018 DBB2     		uxtb	r3, r3
 181 001a 03F07F03 		and	r3, r3, #127
 182 001e BB72     		strb	r3, [r7, #10]
 142:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 183              		.loc 1 142 0
 184 0020 BB7A     		ldrb	r3, [r7, #10]
 185 0022 0133     		adds	r3, r3, #1
 186 0024 DBB2     		uxtb	r3, r3
 187 0026 03F07F03 		and	r3, r3, #127
 188 002a 7B72     		strb	r3, [r7, #9]
 143:assembly_test.c **** 
 144:assembly_test.c **** 	/* fail if queue is full */
 145:assembly_test.c **** 	if (h == n)
 189              		.loc 1 145 0
 190 002c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 191 002e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 192 0030 9A42     		cmp	r2, r3
 193 0032 01D1     		bne	.L5
 146:assembly_test.c **** 		return 0;
 194              		.loc 1 146 0
 195 0034 0023     		movs	r3, #0
 196 0036 3AE0     		b	.L6
 197              	.L5:
 147:assembly_test.c **** 
 148:assembly_test.c **** 	fifo[t].clkn_high = clkn_high;
 198              		.loc 1 148 0
 199 0038 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 200 003a 224A     		ldr	r2, .L9+8
 201 003c 1278     		ldrb	r2, [r2]
 202 003e D1B2     		uxtb	r1, r2
 203 0040 214A     		ldr	r2, .L9+12
 204 0042 9B01     		lsls	r3, r3, #6
 205 0044 1344     		add	r3, r3, r2
 206 0046 0A46     		mov	r2, r1
 207 0048 DA70     		strb	r2, [r3, #3]
 149:assembly_test.c **** 	fifo[t].clk100ns = CLK100NS;
 208              		.loc 1 149 0
 209 004a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 210 004c 1F4A     		ldr	r2, .L9+16
 211 004e 1268     		ldr	r2, [r2]
 212 0050 1D49     		ldr	r1, .L9+12
 213 0052 9B01     		lsls	r3, r3, #6
 214 0054 0B44     		add	r3, r3, r1
 215 0056 5A60     		str	r2, [r3, #4]
 150:assembly_test.c **** 
 151:assembly_test.c **** 	USRLED_SET;
 216              		.loc 1 151 0
 217 0058 1D4B     		ldr	r3, .L9+20
 218 005a 0222     		movs	r2, #2
 219 005c 1A60     		str	r2, [r3]
 152:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
ARM GAS  /tmp/cc74qjbb.s 			page 7


 220              		.loc 1 152 0
 221 005e 0023     		movs	r3, #0
 222 0060 FB60     		str	r3, [r7, #12]
 223 0062 0FE0     		b	.L7
 224              	.L8:
 153:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 225              		.loc 1 153 0 discriminator 3
 226 0064 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 227 0066 FA68     		ldr	r2, [r7, #12]
 228 0068 7968     		ldr	r1, [r7, #4]
 229 006a 0A44     		add	r2, r2, r1
 230 006c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 231 006e 164A     		ldr	r2, .L9+12
 232 0070 9B01     		lsls	r3, r3, #6
 233 0072 1A44     		add	r2, r2, r3
 234 0074 FB68     		ldr	r3, [r7, #12]
 235 0076 1344     		add	r3, r3, r2
 236 0078 0833     		adds	r3, r3, #8
 237 007a 0A46     		mov	r2, r1
 238 007c 9A71     		strb	r2, [r3, #6]
 152:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 239              		.loc 1 152 0 discriminator 3
 240 007e FB68     		ldr	r3, [r7, #12]
 241 0080 0133     		adds	r3, r3, #1
 242 0082 FB60     		str	r3, [r7, #12]
 243              	.L7:
 152:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 244              		.loc 1 152 0 is_stmt 0 discriminator 1
 245 0084 FB68     		ldr	r3, [r7, #12]
 246 0086 312B     		cmp	r3, #49
 247 0088 ECDD     		ble	.L8
 154:assembly_test.c **** 	fifo[t].status = status;
 248              		.loc 1 154 0 is_stmt 1
 249 008a BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 250 008c 114A     		ldr	r2, .L9+24
 251 008e 1278     		ldrb	r2, [r2]
 252 0090 D1B2     		uxtb	r1, r2
 253 0092 0D4A     		ldr	r2, .L9+12
 254 0094 9B01     		lsls	r3, r3, #6
 255 0096 1344     		add	r3, r3, r2
 256 0098 0A46     		mov	r2, r1
 257 009a 5A70     		strb	r2, [r3, #1]
 155:assembly_test.c **** 	status = 0;
 258              		.loc 1 155 0
 259 009c 0D4B     		ldr	r3, .L9+24
 260 009e 0022     		movs	r2, #0
 261 00a0 1A70     		strb	r2, [r3]
 156:assembly_test.c **** 	++tail;
 262              		.loc 1 156 0
 263 00a2 074B     		ldr	r3, .L9+4
 264 00a4 1B68     		ldr	r3, [r3]
 265 00a6 0133     		adds	r3, r3, #1
 266 00a8 054A     		ldr	r2, .L9+4
 267 00aa 1360     		str	r3, [r2]
 157:assembly_test.c **** 
 158:assembly_test.c **** 	return 1;
 268              		.loc 1 158 0
ARM GAS  /tmp/cc74qjbb.s 			page 8


 269 00ac 0123     		movs	r3, #1
 270              	.L6:
 159:assembly_test.c **** }
 271              		.loc 1 159 0
 272 00ae 1846     		mov	r0, r3
 273 00b0 1437     		adds	r7, r7, #20
 274              		.cfi_def_cfa_offset 4
 275 00b2 BD46     		mov	sp, r7
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 00b4 5DF8047B 		ldr	r7, [sp], #4
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 00b8 7047     		bx	lr
 282              	.L10:
 283 00ba 00BF     		.align	2
 284              	.L9:
 285 00bc 00000000 		.word	head
 286 00c0 00000000 		.word	tail
 287 00c4 00000000 		.word	clkn_high
 288 00c8 00000000 		.word	fifo
 289 00cc 08400040 		.word	1073758216
 290 00d0 38C00920 		.word	537509944
 291 00d4 00000000 		.word	status
 292              		.cfi_endproc
 293              	.LFE1:
 295              		.section	.text.dequeue,"ax",%progbits
 296              		.align	2
 297              		.global	dequeue
 298              		.thumb
 299              		.thumb_func
 301              	dequeue:
 302              	.LFB2:
 160:assembly_test.c **** 
 161:assembly_test.c **** int dequeue()
 162:assembly_test.c **** {
 303              		.loc 1 162 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 163:assembly_test.c **** 	u8 h = head & 0x7F;
 315              		.loc 1 163 0
 316 0006 144B     		ldr	r3, .L14
 317 0008 1B68     		ldr	r3, [r3]
 318 000a DBB2     		uxtb	r3, r3
 319 000c 03F07F03 		and	r3, r3, #127
 320 0010 FB71     		strb	r3, [r7, #7]
 164:assembly_test.c **** 	u8 t = tail & 0x7F;
 321              		.loc 1 164 0
ARM GAS  /tmp/cc74qjbb.s 			page 9


 322 0012 124B     		ldr	r3, .L14+4
 323 0014 1B68     		ldr	r3, [r3]
 324 0016 DBB2     		uxtb	r3, r3
 325 0018 03F07F03 		and	r3, r3, #127
 326 001c BB71     		strb	r3, [r7, #6]
 165:assembly_test.c **** 
 166:assembly_test.c **** 	/* fail if queue is empty */
 167:assembly_test.c **** 	if (h == t) {
 327              		.loc 1 167 0
 328 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 329 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 330 0022 9A42     		cmp	r2, r3
 331 0024 04D1     		bne	.L12
 168:assembly_test.c **** 		USRLED_CLR;
 332              		.loc 1 168 0
 333 0026 0E4B     		ldr	r3, .L14+8
 334 0028 0222     		movs	r2, #2
 335 002a 1A60     		str	r2, [r3]
 169:assembly_test.c **** 		return 0;
 336              		.loc 1 169 0
 337 002c 0023     		movs	r3, #0
 338 002e 0EE0     		b	.L13
 339              	.L12:
 170:assembly_test.c **** 	}
 171:assembly_test.c **** 
 172:assembly_test.c **** 	USBHwEPWrite(BULK_IN_EP, (u8 *)&fifo[h], sizeof(usb_pkt_rx));
 340              		.loc 1 172 0
 341 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 342 0032 9B01     		lsls	r3, r3, #6
 343 0034 0B4A     		ldr	r2, .L14+12
 344 0036 1344     		add	r3, r3, r2
 345 0038 8220     		movs	r0, #130
 346 003a 1946     		mov	r1, r3
 347 003c 4022     		movs	r2, #64
 348 003e FFF7FEFF 		bl	USBHwEPWrite
 173:assembly_test.c **** 	++head;
 349              		.loc 1 173 0
 350 0042 054B     		ldr	r3, .L14
 351 0044 1B68     		ldr	r3, [r3]
 352 0046 0133     		adds	r3, r3, #1
 353 0048 034A     		ldr	r2, .L14
 354 004a 1360     		str	r3, [r2]
 174:assembly_test.c **** 
 175:assembly_test.c **** 	return 1;
 355              		.loc 1 175 0
 356 004c 0123     		movs	r3, #1
 357              	.L13:
 176:assembly_test.c **** }
 358              		.loc 1 176 0
 359 004e 1846     		mov	r0, r3
 360 0050 0837     		adds	r7, r7, #8
 361              		.cfi_def_cfa_offset 8
 362 0052 BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 0054 80BD     		pop	{r7, pc}
 366              	.L15:
ARM GAS  /tmp/cc74qjbb.s 			page 10


 367 0056 00BF     		.align	2
 368              	.L14:
 369 0058 00000000 		.word	head
 370 005c 00000000 		.word	tail
 371 0060 3CC00920 		.word	537509948
 372 0064 00000000 		.word	fifo
 373              		.cfi_endproc
 374              	.LFE2:
 376              		.section	.rodata
 377              		.align	2
 380              	abDescriptors:
 381 0000 12       		.byte	18
 382 0001 01       		.byte	1
 383 0002 00       		.byte	0
 384 0003 02       		.byte	2
 385 0004 FF       		.byte	-1
 386 0005 00       		.byte	0
 387 0006 00       		.byte	0
 388 0007 40       		.byte	64
 389 0008 FF       		.byte	-1
 390 0009 FF       		.byte	-1
 391 000a 04       		.byte	4
 392 000b 00       		.byte	0
 393 000c 00       		.byte	0
 394 000d 01       		.byte	1
 395 000e 01       		.byte	1
 396 000f 02       		.byte	2
 397 0010 03       		.byte	3
 398 0011 01       		.byte	1
 399 0012 09       		.byte	9
 400 0013 02       		.byte	2
 401 0014 20       		.byte	32
 402 0015 00       		.byte	0
 403 0016 01       		.byte	1
 404 0017 01       		.byte	1
 405 0018 00       		.byte	0
 406 0019 80       		.byte	-128
 407 001a 32       		.byte	50
 408 001b 09       		.byte	9
 409 001c 04       		.byte	4
 410 001d 00       		.byte	0
 411 001e 00       		.byte	0
 412 001f 02       		.byte	2
 413 0020 FF       		.byte	-1
 414 0021 00       		.byte	0
 415 0022 00       		.byte	0
 416 0023 00       		.byte	0
 417 0024 07       		.byte	7
 418 0025 05       		.byte	5
 419 0026 82       		.byte	-126
 420 0027 02       		.byte	2
 421 0028 40       		.byte	64
 422 0029 00       		.byte	0
 423 002a 00       		.byte	0
 424 002b 07       		.byte	7
 425 002c 05       		.byte	5
 426 002d 05       		.byte	5
ARM GAS  /tmp/cc74qjbb.s 			page 11


 427 002e 02       		.byte	2
 428 002f 40       		.byte	64
 429 0030 00       		.byte	0
 430 0031 00       		.byte	0
 431 0032 04       		.byte	4
 432 0033 03       		.byte	3
 433 0034 09       		.byte	9
 434 0035 04       		.byte	4
 435 0036 44       		.byte	68
 436 0037 03       		.byte	3
 437 0038 68       		.byte	104
 438 0039 00       		.byte	0
 439 003a 74       		.byte	116
 440 003b 00       		.byte	0
 441 003c 74       		.byte	116
 442 003d 00       		.byte	0
 443 003e 70       		.byte	112
 444 003f 00       		.byte	0
 445 0040 3A       		.byte	58
 446 0041 00       		.byte	0
 447 0042 2F       		.byte	47
 448 0043 00       		.byte	0
 449 0044 2F       		.byte	47
 450 0045 00       		.byte	0
 451 0046 75       		.byte	117
 452 0047 00       		.byte	0
 453 0048 62       		.byte	98
 454 0049 00       		.byte	0
 455 004a 65       		.byte	101
 456 004b 00       		.byte	0
 457 004c 72       		.byte	114
 458 004d 00       		.byte	0
 459 004e 74       		.byte	116
 460 004f 00       		.byte	0
 461 0050 6F       		.byte	111
 462 0051 00       		.byte	0
 463 0052 6F       		.byte	111
 464 0053 00       		.byte	0
 465 0054 74       		.byte	116
 466 0055 00       		.byte	0
 467 0056 68       		.byte	104
 468 0057 00       		.byte	0
 469 0058 2E       		.byte	46
 470 0059 00       		.byte	0
 471 005a 73       		.byte	115
 472 005b 00       		.byte	0
 473 005c 6F       		.byte	111
 474 005d 00       		.byte	0
 475 005e 75       		.byte	117
 476 005f 00       		.byte	0
 477 0060 72       		.byte	114
 478 0061 00       		.byte	0
 479 0062 63       		.byte	99
 480 0063 00       		.byte	0
 481 0064 65       		.byte	101
 482 0065 00       		.byte	0
 483 0066 66       		.byte	102
ARM GAS  /tmp/cc74qjbb.s 			page 12


 484 0067 00       		.byte	0
 485 0068 6F       		.byte	111
 486 0069 00       		.byte	0
 487 006a 72       		.byte	114
 488 006b 00       		.byte	0
 489 006c 67       		.byte	103
 490 006d 00       		.byte	0
 491 006e 65       		.byte	101
 492 006f 00       		.byte	0
 493 0070 2E       		.byte	46
 494 0071 00       		.byte	0
 495 0072 6E       		.byte	110
 496 0073 00       		.byte	0
 497 0074 65       		.byte	101
 498 0075 00       		.byte	0
 499 0076 74       		.byte	116
 500 0077 00       		.byte	0
 501 0078 2F       		.byte	47
 502 0079 00       		.byte	0
 503 007a 30       		.byte	48
 504 007b 03       		.byte	3
 505 007c 75       		.byte	117
 506 007d 00       		.byte	0
 507 007e 62       		.byte	98
 508 007f 00       		.byte	0
 509 0080 65       		.byte	101
 510 0081 00       		.byte	0
 511 0082 72       		.byte	114
 512 0083 00       		.byte	0
 513 0084 74       		.byte	116
 514 0085 00       		.byte	0
 515 0086 6F       		.byte	111
 516 0087 00       		.byte	0
 517 0088 6F       		.byte	111
 518 0089 00       		.byte	0
 519 008a 74       		.byte	116
 520 008b 00       		.byte	0
 521 008c 68       		.byte	104
 522 008d 00       		.byte	0
 523 008e 20       		.byte	32
 524 008f 00       		.byte	0
 525 0090 61       		.byte	97
 526 0091 00       		.byte	0
 527 0092 73       		.byte	115
 528 0093 00       		.byte	0
 529 0094 73       		.byte	115
 530 0095 00       		.byte	0
 531 0096 65       		.byte	101
 532 0097 00       		.byte	0
 533 0098 6D       		.byte	109
 534 0099 00       		.byte	0
 535 009a 62       		.byte	98
 536 009b 00       		.byte	0
 537 009c 6C       		.byte	108
 538 009d 00       		.byte	0
 539 009e 79       		.byte	121
 540 009f 00       		.byte	0
ARM GAS  /tmp/cc74qjbb.s 			page 13


 541 00a0 5F       		.byte	95
 542 00a1 00       		.byte	0
 543 00a2 74       		.byte	116
 544 00a3 00       		.byte	0
 545 00a4 65       		.byte	101
 546 00a5 00       		.byte	0
 547 00a6 73       		.byte	115
 548 00a7 00       		.byte	0
 549 00a8 74       		.byte	116
 550 00a9 00       		.byte	0
 551 00aa 12       		.byte	18
 552 00ab 03       		.byte	3
 553 00ac 30       		.byte	48
 554 00ad 00       		.byte	0
 555 00ae 30       		.byte	48
 556 00af 00       		.byte	0
 557 00b0 30       		.byte	48
 558 00b1 00       		.byte	0
 559 00b2 30       		.byte	48
 560 00b3 00       		.byte	0
 561 00b4 30       		.byte	48
 562 00b5 00       		.byte	0
 563 00b6 30       		.byte	48
 564 00b7 00       		.byte	0
 565 00b8 30       		.byte	48
 566 00b9 00       		.byte	0
 567 00ba 31       		.byte	49
 568 00bb 00       		.byte	0
 569 00bc 00       		.byte	0
 570              		.bss
 571              		.align	2
 572              	abVendorReqData:
 573 001c 00000000 		.space	17
 573      00000000 
 573      00000000 
 573      00000000 
 573      00
 574              		.section	.text.usb_bulk_in_handler,"ax",%progbits
 575              		.align	2
 576              		.thumb
 577              		.thumb_func
 579              	usb_bulk_in_handler:
 580              	.LFB3:
 177:assembly_test.c **** 
 178:assembly_test.c **** static const u8 abDescriptors[] = {
 179:assembly_test.c **** 
 180:assembly_test.c **** /* Device descriptor */
 181:assembly_test.c **** 	0x12,              		
 182:assembly_test.c **** 	DESC_DEVICE,       		
 183:assembly_test.c **** 	LE_WORD(0x0200),		// bcdUSB	
 184:assembly_test.c **** 	0xFF,              		// bDeviceClass
 185:assembly_test.c **** 	0x00,              		// bDeviceSubClass
 186:assembly_test.c **** 	0x00,              		// bDeviceProtocol
 187:assembly_test.c **** 	MAX_PACKET_SIZE0,  		// bMaxPacketSize
 188:assembly_test.c **** 	LE_WORD(0xFFFF),		// idVendor
 189:assembly_test.c **** 	LE_WORD(0x0004),		// idProduct
 190:assembly_test.c **** 	LE_WORD(0x0100),		// bcdDevice
ARM GAS  /tmp/cc74qjbb.s 			page 14


 191:assembly_test.c **** 	0x01,              		// iManufacturer
 192:assembly_test.c **** 	0x02,              		// iProduct
 193:assembly_test.c **** 	0x03,              		// iSerialNumber
 194:assembly_test.c **** 	0x01,              		// bNumConfigurations
 195:assembly_test.c **** 
 196:assembly_test.c **** // configuration
 197:assembly_test.c **** 	0x09,
 198:assembly_test.c **** 	DESC_CONFIGURATION,
 199:assembly_test.c **** 	LE_WORD(0x20),  		// wTotalLength
 200:assembly_test.c **** 	0x01,  					// bNumInterfaces
 201:assembly_test.c **** 	0x01,  					// bConfigurationValue
 202:assembly_test.c **** 	0x00,  					// iConfiguration
 203:assembly_test.c **** 	0x80,  					// bmAttributes
 204:assembly_test.c **** 	0x32,  					// bMaxPower
 205:assembly_test.c **** 
 206:assembly_test.c **** // interface
 207:assembly_test.c **** 	0x09,   				
 208:assembly_test.c **** 	DESC_INTERFACE, 
 209:assembly_test.c **** 	0x00,  		 			// bInterfaceNumber
 210:assembly_test.c **** 	0x00,   				// bAlternateSetting
 211:assembly_test.c **** 	0x02,   				// bNumEndPoints
 212:assembly_test.c **** 	0xFF,   				// bInterfaceClass
 213:assembly_test.c **** 	0x00,   				// bInterfaceSubClass
 214:assembly_test.c **** 	0x00,   				// bInterfaceProtocol
 215:assembly_test.c **** 	0x00,   				// iInterface
 216:assembly_test.c **** 
 217:assembly_test.c **** // bulk in
 218:assembly_test.c **** 	0x07,   		
 219:assembly_test.c **** 	DESC_ENDPOINT,   		
 220:assembly_test.c **** 	BULK_IN_EP,				// bEndpointAddress
 221:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 222:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 223:assembly_test.c **** 	0,						// bInterval   		
 224:assembly_test.c **** 
 225:assembly_test.c **** // bulk out
 226:assembly_test.c **** 	0x07,   		
 227:assembly_test.c **** 	DESC_ENDPOINT,   		
 228:assembly_test.c **** 	BULK_OUT_EP,			// bEndpointAddress
 229:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 230:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 231:assembly_test.c **** 	0,						// bInterval 
 232:assembly_test.c **** 
 233:assembly_test.c **** // string descriptors
 234:assembly_test.c **** 	0x04,
 235:assembly_test.c **** 	DESC_STRING,
 236:assembly_test.c **** 	LE_WORD(0x0409),
 237:assembly_test.c **** 
 238:assembly_test.c **** 	// manufacturer string
 239:assembly_test.c **** 	0x44,
 240:assembly_test.c **** 	DESC_STRING,
 241:assembly_test.c **** 	'h', 0, 't', 0, 't', 0, 'p', 0, ':', 0, '/', 0, '/', 0, 'u', 0,
 242:assembly_test.c **** 	'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0, 'h', 0,
 243:assembly_test.c **** 	'.', 0, 's', 0, 'o', 0, 'u', 0, 'r', 0, 'c', 0, 'e', 0, 'f', 0,
 244:assembly_test.c **** 	'o', 0, 'r', 0, 'g', 0, 'e', 0, '.', 0, 'n', 0, 'e', 0, 't', 0,
 245:assembly_test.c **** 	'/', 0,
 246:assembly_test.c **** 
 247:assembly_test.c **** 	// product string
ARM GAS  /tmp/cc74qjbb.s 			page 15


 248:assembly_test.c **** 	0x30,
 249:assembly_test.c **** 	DESC_STRING,
 250:assembly_test.c **** 	'u', 0, 'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0,
 251:assembly_test.c **** 	'h', 0, ' ', 0, 'a', 0, 's', 0, 's', 0, 'e', 0, 'm', 0, 'b', 0,
 252:assembly_test.c **** 	'l', 0, 'y', 0, '_', 0, 't', 0, 'e', 0, 's', 0, 't', 0,
 253:assembly_test.c **** 
 254:assembly_test.c **** 	// serial number string
 255:assembly_test.c **** 	0x12,
 256:assembly_test.c **** 	DESC_STRING,
 257:assembly_test.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '1', 0,
 258:assembly_test.c **** 
 259:assembly_test.c **** 	// terminator
 260:assembly_test.c **** 	0
 261:assembly_test.c **** };
 262:assembly_test.c **** 
 263:assembly_test.c **** static u8 abVendorReqData[17];
 264:assembly_test.c **** 
 265:assembly_test.c **** static void usb_bulk_in_handler(u8 bEP, u8 bEPStatus)
 266:assembly_test.c **** {
 581              		.loc 1 266 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 82B0     		sub	sp, sp, #8
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 593 0006 0346     		mov	r3, r0
 594 0008 0A46     		mov	r2, r1
 595 000a FB71     		strb	r3, [r7, #7]
 596 000c 1346     		mov	r3, r2
 597 000e BB71     		strb	r3, [r7, #6]
 267:assembly_test.c **** 	if (!(bEPStatus & EP_STATUS_DATA))
 598              		.loc 1 267 0
 599 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 600 0012 03F00103 		and	r3, r3, #1
 601 0016 002B     		cmp	r3, #0
 602 0018 01D1     		bne	.L16
 268:assembly_test.c **** 		dequeue();
 603              		.loc 1 268 0
 604 001a FFF7FEFF 		bl	dequeue
 605              	.L16:
 269:assembly_test.c **** }
 606              		.loc 1 269 0
 607 001e 0837     		adds	r7, r7, #8
 608              		.cfi_def_cfa_offset 8
 609 0020 BD46     		mov	sp, r7
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0022 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE3:
 616              		.section	.text.usb_bulk_out_handler,"ax",%progbits
ARM GAS  /tmp/cc74qjbb.s 			page 16


 617              		.align	2
 618              		.thumb
 619              		.thumb_func
 621              	usb_bulk_out_handler:
 622              	.LFB4:
 270:assembly_test.c **** 
 271:assembly_test.c **** static void usb_bulk_out_handler(u8 bEP, u8 bEPStatus)
 272:assembly_test.c **** {
 623              		.loc 1 272 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 83B0     		sub	sp, sp, #12
 632              		.cfi_def_cfa_offset 16
 633 0004 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 635 0006 0346     		mov	r3, r0
 636 0008 0A46     		mov	r2, r1
 637 000a FB71     		strb	r3, [r7, #7]
 638 000c 1346     		mov	r3, r2
 639 000e BB71     		strb	r3, [r7, #6]
 273:assembly_test.c **** }
 640              		.loc 1 273 0
 641 0010 0C37     		adds	r7, r7, #12
 642              		.cfi_def_cfa_offset 4
 643 0012 BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 0014 5DF8047B 		ldr	r7, [sp], #4
 647              		.cfi_restore 7
 648              		.cfi_def_cfa_offset 0
 649 0018 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE4:
 653 001a 00BF     		.section	.rodata
 654 00bd 000000   		.align	2
 655              	.LC1:
 656 00c0 32303135 		.ascii	"2015-10-R1\000"
 656      2D31302D 
 656      523100
 657              		.section	.text.usb_vendor_request_handler,"ax",%progbits
 658              		.align	2
 659              		.thumb
 660              		.thumb_func
 662              	usb_vendor_request_handler:
 663              	.LFB5:
 274:assembly_test.c **** 
 275:assembly_test.c **** static BOOL usb_vendor_request_handler(TSetupPacket *pSetup, int *piLen, u8 **ppbData)
 276:assembly_test.c **** {
 664              		.loc 1 276 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 64
 667              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc74qjbb.s 			page 17


 668 0000 80B5     		push	{r7, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 90B0     		sub	sp, sp, #64
 673              		.cfi_def_cfa_offset 72
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 F860     		str	r0, [r7, #12]
 677 0008 B960     		str	r1, [r7, #8]
 678 000a 7A60     		str	r2, [r7, #4]
 277:assembly_test.c **** 	u8 *pbData = *ppbData;
 679              		.loc 1 277 0
 680 000c 7B68     		ldr	r3, [r7, #4]
 681 000e 1B68     		ldr	r3, [r3]
 682 0010 FB63     		str	r3, [r7, #60]
 278:assembly_test.c **** 	u32 command[5];
 279:assembly_test.c **** 	u32 result[5];
 280:assembly_test.c **** 	u8 length; // string length
 281:assembly_test.c **** 
 282:assembly_test.c **** 	switch (pSetup->bRequest) {
 683              		.loc 1 282 0
 684 0012 FB68     		ldr	r3, [r7, #12]
 685 0014 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 686 0016 212B     		cmp	r3, #33
 687 0018 00F2AA82 		bhi	.L20
 688 001c 01A2     		adr	r2, .L22
 689 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 690 0022 00BF     		.p2align 2
 691              	.L22:
 692 0024 AD000000 		.word	.L21+1
 693 0028 B5000000 		.word	.L23+1
 694 002c 71050000 		.word	.L20+1
 695 0030 DD000000 		.word	.L24+1
 696 0034 FD000000 		.word	.L25+1
 697 0038 15010000 		.word	.L26+1
 698 003c 35010000 		.word	.L27+1
 699 0040 4D010000 		.word	.L28+1
 700 0044 6D010000 		.word	.L29+1
 701 0048 89010000 		.word	.L30+1
 702 004c A9010000 		.word	.L31+1
 703 0050 43040000 		.word	.L32+1
 704 0054 69040000 		.word	.L33+1
 705 0058 19020000 		.word	.L34+1
 706 005c 1F020000 		.word	.L35+1
 707 0060 C5010000 		.word	.L36+1
 708 0064 FD020000 		.word	.L37+1
 709 0068 1D030000 		.word	.L38+1
 710 006c 55030000 		.word	.L39+1
 711 0070 75030000 		.word	.L40+1
 712 0074 91030000 		.word	.L41+1
 713 0078 1D040000 		.word	.L42+1
 714 007c 25040000 		.word	.L43+1
 715 0080 37040000 		.word	.L44+1
 716 0084 AF040000 		.word	.L45+1
 717 0088 CD040000 		.word	.L46+1
 718 008c 71050000 		.word	.L20+1
ARM GAS  /tmp/cc74qjbb.s 			page 18


 719 0090 D9040000 		.word	.L47+1
 720 0094 99030000 		.word	.L48+1
 721 0098 B5030000 		.word	.L49+1
 722 009c DD030000 		.word	.L50+1
 723 00a0 D5030000 		.word	.L51+1
 724 00a4 E5030000 		.word	.L52+1
 725 00a8 2F050000 		.word	.L53+1
 726              		.p2align 1
 727              	.L21:
 283:assembly_test.c **** 
 284:assembly_test.c **** 	case UBERTOOTH_PING:
 285:assembly_test.c **** 		*piLen = 0;
 728              		.loc 1 285 0
 729 00ac BB68     		ldr	r3, [r7, #8]
 730 00ae 0022     		movs	r2, #0
 731 00b0 1A60     		str	r2, [r3]
 286:assembly_test.c **** 		break;
 732              		.loc 1 286 0
 733 00b2 5FE2     		b	.L54
 734              	.L23:
 287:assembly_test.c **** 
 288:assembly_test.c **** 	case UBERTOOTH_RX_SYMBOLS:
 289:assembly_test.c **** 		rx_pkts += pSetup->wValue;
 735              		.loc 1 289 0
 736 00b4 FB68     		ldr	r3, [r7, #12]
 737 00b6 5B88     		ldrh	r3, [r3, #2]
 738 00b8 1A46     		mov	r2, r3
 739 00ba 9E4B     		ldr	r3, .L78
 740 00bc 1B68     		ldr	r3, [r3]
 741 00be 1344     		add	r3, r3, r2
 742 00c0 9C4A     		ldr	r2, .L78
 743 00c2 1360     		str	r3, [r2]
 290:assembly_test.c **** 		if (rx_pkts == 0)
 744              		.loc 1 290 0
 745 00c4 9B4B     		ldr	r3, .L78
 746 00c6 1B68     		ldr	r3, [r3]
 747 00c8 002B     		cmp	r3, #0
 748 00ca 03D1     		bne	.L55
 291:assembly_test.c **** 			rx_pkts = 0xFFFFFFFF;
 749              		.loc 1 291 0
 750 00cc 994B     		ldr	r3, .L78
 751 00ce 4FF0FF32 		mov	r2, #-1
 752 00d2 1A60     		str	r2, [r3]
 753              	.L55:
 292:assembly_test.c **** 		*piLen = 0;
 754              		.loc 1 292 0
 755 00d4 BB68     		ldr	r3, [r7, #8]
 756 00d6 0022     		movs	r2, #0
 757 00d8 1A60     		str	r2, [r3]
 293:assembly_test.c **** 		break;
 758              		.loc 1 293 0
 759 00da 4BE2     		b	.L54
 760              	.L24:
 294:assembly_test.c **** 
 295:assembly_test.c **** 	case UBERTOOTH_GET_USRLED:
 296:assembly_test.c **** 		pbData[0] = (USRLED) ? 1 : 0;
 761              		.loc 1 296 0
ARM GAS  /tmp/cc74qjbb.s 			page 19


 762 00dc 964B     		ldr	r3, .L78+4
 763 00de 1B68     		ldr	r3, [r3]
 764 00e0 03F00203 		and	r3, r3, #2
 765 00e4 002B     		cmp	r3, #0
 766 00e6 14BF     		ite	ne
 767 00e8 0123     		movne	r3, #1
 768 00ea 0023     		moveq	r3, #0
 769 00ec DBB2     		uxtb	r3, r3
 770 00ee 1A46     		mov	r2, r3
 771 00f0 FB6B     		ldr	r3, [r7, #60]
 772 00f2 1A70     		strb	r2, [r3]
 297:assembly_test.c **** 		*piLen = 1;
 773              		.loc 1 297 0
 774 00f4 BB68     		ldr	r3, [r7, #8]
 775 00f6 0122     		movs	r2, #1
 776 00f8 1A60     		str	r2, [r3]
 298:assembly_test.c **** 		break;
 777              		.loc 1 298 0
 778 00fa 3BE2     		b	.L54
 779              	.L25:
 299:assembly_test.c **** 
 300:assembly_test.c **** 	case UBERTOOTH_SET_USRLED:
 301:assembly_test.c **** 		if (pSetup->wValue)
 780              		.loc 1 301 0
 781 00fc FB68     		ldr	r3, [r7, #12]
 782 00fe 5B88     		ldrh	r3, [r3, #2]
 783 0100 002B     		cmp	r3, #0
 784 0102 03D0     		beq	.L56
 302:assembly_test.c **** 			USRLED_SET;
 785              		.loc 1 302 0
 786 0104 8D4B     		ldr	r3, .L78+8
 787 0106 0222     		movs	r2, #2
 788 0108 1A60     		str	r2, [r3]
 303:assembly_test.c **** 		else
 304:assembly_test.c **** 			USRLED_CLR;
 305:assembly_test.c **** 		break;
 789              		.loc 1 305 0
 790 010a 33E2     		b	.L54
 791              	.L56:
 304:assembly_test.c **** 		break;
 792              		.loc 1 304 0
 793 010c 8C4B     		ldr	r3, .L78+12
 794 010e 0222     		movs	r2, #2
 795 0110 1A60     		str	r2, [r3]
 796              		.loc 1 305 0
 797 0112 2FE2     		b	.L54
 798              	.L26:
 306:assembly_test.c **** 
 307:assembly_test.c **** 	case UBERTOOTH_GET_RXLED:
 308:assembly_test.c **** 		pbData[0] = (RXLED) ? 1 : 0;
 799              		.loc 1 308 0
 800 0114 884B     		ldr	r3, .L78+4
 801 0116 1B68     		ldr	r3, [r3]
 802 0118 03F01003 		and	r3, r3, #16
 803 011c 002B     		cmp	r3, #0
 804 011e 14BF     		ite	ne
 805 0120 0123     		movne	r3, #1
ARM GAS  /tmp/cc74qjbb.s 			page 20


 806 0122 0023     		moveq	r3, #0
 807 0124 DBB2     		uxtb	r3, r3
 808 0126 1A46     		mov	r2, r3
 809 0128 FB6B     		ldr	r3, [r7, #60]
 810 012a 1A70     		strb	r2, [r3]
 309:assembly_test.c **** 		*piLen = 1;
 811              		.loc 1 309 0
 812 012c BB68     		ldr	r3, [r7, #8]
 813 012e 0122     		movs	r2, #1
 814 0130 1A60     		str	r2, [r3]
 310:assembly_test.c **** 		break;
 815              		.loc 1 310 0
 816 0132 1FE2     		b	.L54
 817              	.L27:
 311:assembly_test.c **** 
 312:assembly_test.c **** 	case UBERTOOTH_SET_RXLED:
 313:assembly_test.c **** 		if (pSetup->wValue)
 818              		.loc 1 313 0
 819 0134 FB68     		ldr	r3, [r7, #12]
 820 0136 5B88     		ldrh	r3, [r3, #2]
 821 0138 002B     		cmp	r3, #0
 822 013a 03D0     		beq	.L58
 314:assembly_test.c **** 			RXLED_SET;
 823              		.loc 1 314 0
 824 013c 7F4B     		ldr	r3, .L78+8
 825 013e 1022     		movs	r2, #16
 826 0140 1A60     		str	r2, [r3]
 315:assembly_test.c **** 		else
 316:assembly_test.c **** 			RXLED_CLR;
 317:assembly_test.c **** 		break;
 827              		.loc 1 317 0
 828 0142 17E2     		b	.L54
 829              	.L58:
 316:assembly_test.c **** 		break;
 830              		.loc 1 316 0
 831 0144 7E4B     		ldr	r3, .L78+12
 832 0146 1022     		movs	r2, #16
 833 0148 1A60     		str	r2, [r3]
 834              		.loc 1 317 0
 835 014a 13E2     		b	.L54
 836              	.L28:
 318:assembly_test.c **** 
 319:assembly_test.c **** 	case UBERTOOTH_GET_TXLED:
 320:assembly_test.c **** 		pbData[0] = (TXLED) ? 1 : 0;
 837              		.loc 1 320 0
 838 014c 7A4B     		ldr	r3, .L78+4
 839 014e 1B68     		ldr	r3, [r3]
 840 0150 03F48073 		and	r3, r3, #256
 841 0154 002B     		cmp	r3, #0
 842 0156 14BF     		ite	ne
 843 0158 0123     		movne	r3, #1
 844 015a 0023     		moveq	r3, #0
 845 015c DBB2     		uxtb	r3, r3
 846 015e 1A46     		mov	r2, r3
 847 0160 FB6B     		ldr	r3, [r7, #60]
 848 0162 1A70     		strb	r2, [r3]
 321:assembly_test.c **** 		*piLen = 1;
ARM GAS  /tmp/cc74qjbb.s 			page 21


 849              		.loc 1 321 0
 850 0164 BB68     		ldr	r3, [r7, #8]
 851 0166 0122     		movs	r2, #1
 852 0168 1A60     		str	r2, [r3]
 322:assembly_test.c **** 		break;
 853              		.loc 1 322 0
 854 016a 03E2     		b	.L54
 855              	.L29:
 323:assembly_test.c **** 
 324:assembly_test.c **** 	case UBERTOOTH_SET_TXLED:
 325:assembly_test.c **** 		if (pSetup->wValue)
 856              		.loc 1 325 0
 857 016c FB68     		ldr	r3, [r7, #12]
 858 016e 5B88     		ldrh	r3, [r3, #2]
 859 0170 002B     		cmp	r3, #0
 860 0172 04D0     		beq	.L60
 326:assembly_test.c **** 			TXLED_SET;
 861              		.loc 1 326 0
 862 0174 714B     		ldr	r3, .L78+8
 863 0176 4FF48072 		mov	r2, #256
 864 017a 1A60     		str	r2, [r3]
 327:assembly_test.c **** 		else
 328:assembly_test.c **** 			TXLED_CLR;
 329:assembly_test.c **** 		break;
 865              		.loc 1 329 0
 866 017c FAE1     		b	.L54
 867              	.L60:
 328:assembly_test.c **** 		break;
 868              		.loc 1 328 0
 869 017e 704B     		ldr	r3, .L78+12
 870 0180 4FF48072 		mov	r2, #256
 871 0184 1A60     		str	r2, [r3]
 872              		.loc 1 329 0
 873 0186 F5E1     		b	.L54
 874              	.L30:
 330:assembly_test.c **** 
 331:assembly_test.c **** 	case UBERTOOTH_GET_1V8:
 332:assembly_test.c **** 		pbData[0] = (CC1V8) ? 1 : 0;
 875              		.loc 1 332 0
 876 0188 6B4B     		ldr	r3, .L78+4
 877 018a 1B68     		ldr	r3, [r3]
 878 018c 03F40073 		and	r3, r3, #512
 879 0190 002B     		cmp	r3, #0
 880 0192 14BF     		ite	ne
 881 0194 0123     		movne	r3, #1
 882 0196 0023     		moveq	r3, #0
 883 0198 DBB2     		uxtb	r3, r3
 884 019a 1A46     		mov	r2, r3
 885 019c FB6B     		ldr	r3, [r7, #60]
 886 019e 1A70     		strb	r2, [r3]
 333:assembly_test.c **** 		*piLen = 1;
 887              		.loc 1 333 0
 888 01a0 BB68     		ldr	r3, [r7, #8]
 889 01a2 0122     		movs	r2, #1
 890 01a4 1A60     		str	r2, [r3]
 334:assembly_test.c **** 		break;
 891              		.loc 1 334 0
ARM GAS  /tmp/cc74qjbb.s 			page 22


 892 01a6 E5E1     		b	.L54
 893              	.L31:
 335:assembly_test.c **** 
 336:assembly_test.c **** 	case UBERTOOTH_SET_1V8:
 337:assembly_test.c **** 		if (pSetup->wValue)
 894              		.loc 1 337 0
 895 01a8 FB68     		ldr	r3, [r7, #12]
 896 01aa 5B88     		ldrh	r3, [r3, #2]
 897 01ac 002B     		cmp	r3, #0
 898 01ae 04D0     		beq	.L62
 338:assembly_test.c **** 			CC1V8_SET;
 899              		.loc 1 338 0
 900 01b0 624B     		ldr	r3, .L78+8
 901 01b2 4FF40072 		mov	r2, #512
 902 01b6 1A60     		str	r2, [r3]
 339:assembly_test.c **** 		else
 340:assembly_test.c **** 			CC1V8_CLR;
 341:assembly_test.c **** 		break;
 903              		.loc 1 341 0
 904 01b8 DCE1     		b	.L54
 905              	.L62:
 340:assembly_test.c **** 		break;
 906              		.loc 1 340 0
 907 01ba 614B     		ldr	r3, .L78+12
 908 01bc 4FF40072 		mov	r2, #512
 909 01c0 1A60     		str	r2, [r3]
 910              		.loc 1 341 0
 911 01c2 D7E1     		b	.L54
 912              	.L36:
 342:assembly_test.c **** 
 343:assembly_test.c **** 	case UBERTOOTH_GET_PARTNUM:
 344:assembly_test.c **** 		command[0] = 54; /* read part number */
 913              		.loc 1 344 0
 914 01c4 3623     		movs	r3, #54
 915 01c6 7B62     		str	r3, [r7, #36]
 345:assembly_test.c **** 		iap_entry(command, result);
 916              		.loc 1 345 0
 917 01c8 5E4B     		ldr	r3, .L78+16
 918 01ca 1B68     		ldr	r3, [r3]
 919 01cc 07F12401 		add	r1, r7, #36
 920 01d0 07F11002 		add	r2, r7, #16
 921 01d4 0846     		mov	r0, r1
 922 01d6 1146     		mov	r1, r2
 923 01d8 9847     		blx	r3
 346:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 924              		.loc 1 346 0
 925 01da 3B69     		ldr	r3, [r7, #16]
 926 01dc DAB2     		uxtb	r2, r3
 927 01de FB6B     		ldr	r3, [r7, #60]
 928 01e0 1A70     		strb	r2, [r3]
 347:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 929              		.loc 1 347 0
 930 01e2 FB6B     		ldr	r3, [r7, #60]
 931 01e4 0133     		adds	r3, r3, #1
 932 01e6 7A69     		ldr	r2, [r7, #20]
 933 01e8 D2B2     		uxtb	r2, r2
 934 01ea 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 23


 348:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 935              		.loc 1 348 0
 936 01ec FB6B     		ldr	r3, [r7, #60]
 937 01ee 0233     		adds	r3, r3, #2
 938 01f0 7A69     		ldr	r2, [r7, #20]
 939 01f2 120A     		lsrs	r2, r2, #8
 940 01f4 D2B2     		uxtb	r2, r2
 941 01f6 1A70     		strb	r2, [r3]
 349:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 942              		.loc 1 349 0
 943 01f8 FB6B     		ldr	r3, [r7, #60]
 944 01fa 0333     		adds	r3, r3, #3
 945 01fc 7A69     		ldr	r2, [r7, #20]
 946 01fe 120C     		lsrs	r2, r2, #16
 947 0200 D2B2     		uxtb	r2, r2
 948 0202 1A70     		strb	r2, [r3]
 350:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 949              		.loc 1 350 0
 950 0204 FB6B     		ldr	r3, [r7, #60]
 951 0206 0433     		adds	r3, r3, #4
 952 0208 7A69     		ldr	r2, [r7, #20]
 953 020a 120E     		lsrs	r2, r2, #24
 954 020c D2B2     		uxtb	r2, r2
 955 020e 1A70     		strb	r2, [r3]
 351:assembly_test.c **** 		*piLen = 5;
 956              		.loc 1 351 0
 957 0210 BB68     		ldr	r3, [r7, #8]
 958 0212 0522     		movs	r2, #5
 959 0214 1A60     		str	r2, [r3]
 352:assembly_test.c **** 		break;
 960              		.loc 1 352 0
 961 0216 ADE1     		b	.L54
 962              	.L34:
 353:assembly_test.c **** 
 354:assembly_test.c **** 	case UBERTOOTH_RESET:
 355:assembly_test.c **** 		reset();
 963              		.loc 1 355 0
 964 0218 FFF7FEFF 		bl	reset
 356:assembly_test.c **** 		break;
 965              		.loc 1 356 0
 966 021c AAE1     		b	.L54
 967              	.L35:
 357:assembly_test.c **** 
 358:assembly_test.c **** 	case UBERTOOTH_GET_SERIAL:
 359:assembly_test.c **** 		command[0] = 58; /* read device serial number */
 968              		.loc 1 359 0
 969 021e 3A23     		movs	r3, #58
 970 0220 7B62     		str	r3, [r7, #36]
 360:assembly_test.c **** 		iap_entry(command, result);
 971              		.loc 1 360 0
 972 0222 484B     		ldr	r3, .L78+16
 973 0224 1B68     		ldr	r3, [r3]
 974 0226 07F12401 		add	r1, r7, #36
 975 022a 07F11002 		add	r2, r7, #16
 976 022e 0846     		mov	r0, r1
 977 0230 1146     		mov	r1, r2
 978 0232 9847     		blx	r3
ARM GAS  /tmp/cc74qjbb.s 			page 24


 361:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 979              		.loc 1 361 0
 980 0234 3B69     		ldr	r3, [r7, #16]
 981 0236 DAB2     		uxtb	r2, r3
 982 0238 FB6B     		ldr	r3, [r7, #60]
 983 023a 1A70     		strb	r2, [r3]
 362:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 984              		.loc 1 362 0
 985 023c FB6B     		ldr	r3, [r7, #60]
 986 023e 0133     		adds	r3, r3, #1
 987 0240 7A69     		ldr	r2, [r7, #20]
 988 0242 D2B2     		uxtb	r2, r2
 989 0244 1A70     		strb	r2, [r3]
 363:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 990              		.loc 1 363 0
 991 0246 FB6B     		ldr	r3, [r7, #60]
 992 0248 0233     		adds	r3, r3, #2
 993 024a 7A69     		ldr	r2, [r7, #20]
 994 024c 120A     		lsrs	r2, r2, #8
 995 024e D2B2     		uxtb	r2, r2
 996 0250 1A70     		strb	r2, [r3]
 364:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 997              		.loc 1 364 0
 998 0252 FB6B     		ldr	r3, [r7, #60]
 999 0254 0333     		adds	r3, r3, #3
 1000 0256 7A69     		ldr	r2, [r7, #20]
 1001 0258 120C     		lsrs	r2, r2, #16
 1002 025a D2B2     		uxtb	r2, r2
 1003 025c 1A70     		strb	r2, [r3]
 365:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 1004              		.loc 1 365 0
 1005 025e FB6B     		ldr	r3, [r7, #60]
 1006 0260 0433     		adds	r3, r3, #4
 1007 0262 7A69     		ldr	r2, [r7, #20]
 1008 0264 120E     		lsrs	r2, r2, #24
 1009 0266 D2B2     		uxtb	r2, r2
 1010 0268 1A70     		strb	r2, [r3]
 366:assembly_test.c **** 		pbData[5] = result[2] & 0xFF;
 1011              		.loc 1 366 0
 1012 026a FB6B     		ldr	r3, [r7, #60]
 1013 026c 0533     		adds	r3, r3, #5
 1014 026e BA69     		ldr	r2, [r7, #24]
 1015 0270 D2B2     		uxtb	r2, r2
 1016 0272 1A70     		strb	r2, [r3]
 367:assembly_test.c **** 		pbData[6] = (result[2] >> 8) & 0xFF;
 1017              		.loc 1 367 0
 1018 0274 FB6B     		ldr	r3, [r7, #60]
 1019 0276 0633     		adds	r3, r3, #6
 1020 0278 BA69     		ldr	r2, [r7, #24]
 1021 027a 120A     		lsrs	r2, r2, #8
 1022 027c D2B2     		uxtb	r2, r2
 1023 027e 1A70     		strb	r2, [r3]
 368:assembly_test.c **** 		pbData[7] = (result[2] >> 16) & 0xFF;
 1024              		.loc 1 368 0
 1025 0280 FB6B     		ldr	r3, [r7, #60]
 1026 0282 0733     		adds	r3, r3, #7
 1027 0284 BA69     		ldr	r2, [r7, #24]
ARM GAS  /tmp/cc74qjbb.s 			page 25


 1028 0286 120C     		lsrs	r2, r2, #16
 1029 0288 D2B2     		uxtb	r2, r2
 1030 028a 1A70     		strb	r2, [r3]
 369:assembly_test.c **** 		pbData[8] = (result[2] >> 24) & 0xFF;
 1031              		.loc 1 369 0
 1032 028c FB6B     		ldr	r3, [r7, #60]
 1033 028e 0833     		adds	r3, r3, #8
 1034 0290 BA69     		ldr	r2, [r7, #24]
 1035 0292 120E     		lsrs	r2, r2, #24
 1036 0294 D2B2     		uxtb	r2, r2
 1037 0296 1A70     		strb	r2, [r3]
 370:assembly_test.c **** 		pbData[9] = result[3] & 0xFF;
 1038              		.loc 1 370 0
 1039 0298 FB6B     		ldr	r3, [r7, #60]
 1040 029a 0933     		adds	r3, r3, #9
 1041 029c FA69     		ldr	r2, [r7, #28]
 1042 029e D2B2     		uxtb	r2, r2
 1043 02a0 1A70     		strb	r2, [r3]
 371:assembly_test.c **** 		pbData[10] = (result[3] >> 8) & 0xFF;
 1044              		.loc 1 371 0
 1045 02a2 FB6B     		ldr	r3, [r7, #60]
 1046 02a4 0A33     		adds	r3, r3, #10
 1047 02a6 FA69     		ldr	r2, [r7, #28]
 1048 02a8 120A     		lsrs	r2, r2, #8
 1049 02aa D2B2     		uxtb	r2, r2
 1050 02ac 1A70     		strb	r2, [r3]
 372:assembly_test.c **** 		pbData[11] = (result[3] >> 16) & 0xFF;
 1051              		.loc 1 372 0
 1052 02ae FB6B     		ldr	r3, [r7, #60]
 1053 02b0 0B33     		adds	r3, r3, #11
 1054 02b2 FA69     		ldr	r2, [r7, #28]
 1055 02b4 120C     		lsrs	r2, r2, #16
 1056 02b6 D2B2     		uxtb	r2, r2
 1057 02b8 1A70     		strb	r2, [r3]
 373:assembly_test.c **** 		pbData[12] = (result[3] >> 24) & 0xFF;
 1058              		.loc 1 373 0
 1059 02ba FB6B     		ldr	r3, [r7, #60]
 1060 02bc 0C33     		adds	r3, r3, #12
 1061 02be FA69     		ldr	r2, [r7, #28]
 1062 02c0 120E     		lsrs	r2, r2, #24
 1063 02c2 D2B2     		uxtb	r2, r2
 1064 02c4 1A70     		strb	r2, [r3]
 374:assembly_test.c **** 		pbData[13] = result[4] & 0xFF;
 1065              		.loc 1 374 0
 1066 02c6 FB6B     		ldr	r3, [r7, #60]
 1067 02c8 0D33     		adds	r3, r3, #13
 1068 02ca 3A6A     		ldr	r2, [r7, #32]
 1069 02cc D2B2     		uxtb	r2, r2
 1070 02ce 1A70     		strb	r2, [r3]
 375:assembly_test.c **** 		pbData[14] = (result[4] >> 8) & 0xFF;
 1071              		.loc 1 375 0
 1072 02d0 FB6B     		ldr	r3, [r7, #60]
 1073 02d2 0E33     		adds	r3, r3, #14
 1074 02d4 3A6A     		ldr	r2, [r7, #32]
 1075 02d6 120A     		lsrs	r2, r2, #8
 1076 02d8 D2B2     		uxtb	r2, r2
 1077 02da 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 26


 376:assembly_test.c **** 		pbData[15] = (result[4] >> 16) & 0xFF;
 1078              		.loc 1 376 0
 1079 02dc FB6B     		ldr	r3, [r7, #60]
 1080 02de 0F33     		adds	r3, r3, #15
 1081 02e0 3A6A     		ldr	r2, [r7, #32]
 1082 02e2 120C     		lsrs	r2, r2, #16
 1083 02e4 D2B2     		uxtb	r2, r2
 1084 02e6 1A70     		strb	r2, [r3]
 377:assembly_test.c **** 		pbData[16] = (result[4] >> 24) & 0xFF;
 1085              		.loc 1 377 0
 1086 02e8 FB6B     		ldr	r3, [r7, #60]
 1087 02ea 1033     		adds	r3, r3, #16
 1088 02ec 3A6A     		ldr	r2, [r7, #32]
 1089 02ee 120E     		lsrs	r2, r2, #24
 1090 02f0 D2B2     		uxtb	r2, r2
 1091 02f2 1A70     		strb	r2, [r3]
 378:assembly_test.c **** 		*piLen = 17;
 1092              		.loc 1 378 0
 1093 02f4 BB68     		ldr	r3, [r7, #8]
 1094 02f6 1122     		movs	r2, #17
 1095 02f8 1A60     		str	r2, [r3]
 379:assembly_test.c **** 		break;
 1096              		.loc 1 379 0
 1097 02fa 3BE1     		b	.L54
 1098              	.L37:
 380:assembly_test.c **** 
 381:assembly_test.c **** #ifdef UBERTOOTH_ONE
 382:assembly_test.c **** 	case UBERTOOTH_GET_PAEN:
 383:assembly_test.c **** 		pbData[0] = (PAEN) ? 1 : 0;
 1099              		.loc 1 383 0
 1100 02fc 124B     		ldr	r3, .L78+20
 1101 02fe 1B68     		ldr	r3, [r3]
 1102 0300 03F08003 		and	r3, r3, #128
 1103 0304 002B     		cmp	r3, #0
 1104 0306 14BF     		ite	ne
 1105 0308 0123     		movne	r3, #1
 1106 030a 0023     		moveq	r3, #0
 1107 030c DBB2     		uxtb	r3, r3
 1108 030e 1A46     		mov	r2, r3
 1109 0310 FB6B     		ldr	r3, [r7, #60]
 1110 0312 1A70     		strb	r2, [r3]
 384:assembly_test.c **** 		*piLen = 1;
 1111              		.loc 1 384 0
 1112 0314 BB68     		ldr	r3, [r7, #8]
 1113 0316 0122     		movs	r2, #1
 1114 0318 1A60     		str	r2, [r3]
 385:assembly_test.c **** 		break;
 1115              		.loc 1 385 0
 1116 031a 2BE1     		b	.L54
 1117              	.L38:
 386:assembly_test.c **** 
 387:assembly_test.c **** 	case UBERTOOTH_SET_PAEN:
 388:assembly_test.c **** 		if (pSetup->wValue)
 1118              		.loc 1 388 0
 1119 031c FB68     		ldr	r3, [r7, #12]
 1120 031e 5B88     		ldrh	r3, [r3, #2]
 1121 0320 002B     		cmp	r3, #0
ARM GAS  /tmp/cc74qjbb.s 			page 27


 1122 0322 03D0     		beq	.L64
 389:assembly_test.c **** 			PAEN_SET;
 1123              		.loc 1 389 0
 1124 0324 094B     		ldr	r3, .L78+24
 1125 0326 8022     		movs	r2, #128
 1126 0328 1A60     		str	r2, [r3]
 390:assembly_test.c **** 		else
 391:assembly_test.c **** 			PAEN_CLR;
 392:assembly_test.c **** 		break;
 1127              		.loc 1 392 0
 1128 032a 23E1     		b	.L54
 1129              	.L64:
 391:assembly_test.c **** 		break;
 1130              		.loc 1 391 0
 1131 032c 084B     		ldr	r3, .L78+28
 1132 032e 8022     		movs	r2, #128
 1133 0330 1A60     		str	r2, [r3]
 1134              		.loc 1 392 0
 1135 0332 1FE1     		b	.L54
 1136              	.L79:
 1137              		.align	2
 1138              	.L78:
 1139 0334 00000000 		.word	rx_pkts
 1140 0338 34C00920 		.word	537509940
 1141 033c 38C00920 		.word	537509944
 1142 0340 3CC00920 		.word	537509948
 1143 0344 00000000 		.word	iap_entry
 1144 0348 54C00920 		.word	537509972
 1145 034c 58C00920 		.word	537509976
 1146 0350 5CC00920 		.word	537509980
 1147              	.L39:
 393:assembly_test.c **** 
 394:assembly_test.c **** 	case UBERTOOTH_GET_HGM:
 395:assembly_test.c **** 		pbData[0] = (HGM) ? 1 : 0;
 1148              		.loc 1 395 0
 1149 0354 8A4B     		ldr	r3, .L80
 1150 0356 1B68     		ldr	r3, [r3]
 1151 0358 03F48073 		and	r3, r3, #256
 1152 035c 002B     		cmp	r3, #0
 1153 035e 14BF     		ite	ne
 1154 0360 0123     		movne	r3, #1
 1155 0362 0023     		moveq	r3, #0
 1156 0364 DBB2     		uxtb	r3, r3
 1157 0366 1A46     		mov	r2, r3
 1158 0368 FB6B     		ldr	r3, [r7, #60]
 1159 036a 1A70     		strb	r2, [r3]
 396:assembly_test.c **** 		*piLen = 1;
 1160              		.loc 1 396 0
 1161 036c BB68     		ldr	r3, [r7, #8]
 1162 036e 0122     		movs	r2, #1
 1163 0370 1A60     		str	r2, [r3]
 397:assembly_test.c **** 		break;
 1164              		.loc 1 397 0
 1165 0372 FFE0     		b	.L54
 1166              	.L40:
 398:assembly_test.c **** 
 399:assembly_test.c **** 	case UBERTOOTH_SET_HGM:
ARM GAS  /tmp/cc74qjbb.s 			page 28


 400:assembly_test.c **** 		if (pSetup->wValue)
 1167              		.loc 1 400 0
 1168 0374 FB68     		ldr	r3, [r7, #12]
 1169 0376 5B88     		ldrh	r3, [r3, #2]
 1170 0378 002B     		cmp	r3, #0
 1171 037a 04D0     		beq	.L66
 401:assembly_test.c **** 			HGM_SET;
 1172              		.loc 1 401 0
 1173 037c 814B     		ldr	r3, .L80+4
 1174 037e 4FF48072 		mov	r2, #256
 1175 0382 1A60     		str	r2, [r3]
 402:assembly_test.c **** 		else
 403:assembly_test.c **** 			HGM_CLR;
 404:assembly_test.c **** 		break;
 1176              		.loc 1 404 0
 1177 0384 F6E0     		b	.L54
 1178              	.L66:
 403:assembly_test.c **** 		break;
 1179              		.loc 1 403 0
 1180 0386 804B     		ldr	r3, .L80+8
 1181 0388 4FF48072 		mov	r2, #256
 1182 038c 1A60     		str	r2, [r3]
 1183              		.loc 1 404 0
 1184 038e F1E0     		b	.L54
 1185              	.L41:
 405:assembly_test.c **** #endif
 406:assembly_test.c **** 
 407:assembly_test.c **** #ifdef TX_ENABLE
 408:assembly_test.c **** 	case UBERTOOTH_TX_TEST:
 409:assembly_test.c **** 		requested_mode = MODE_TX_TEST;
 1186              		.loc 1 409 0
 1187 0390 7E4B     		ldr	r3, .L80+12
 1188 0392 0322     		movs	r2, #3
 1189 0394 1A60     		str	r2, [r3]
 410:assembly_test.c **** 		break;
 1190              		.loc 1 410 0
 1191 0396 EDE0     		b	.L54
 1192              	.L48:
 411:assembly_test.c **** 
 412:assembly_test.c **** 	case UBERTOOTH_GET_PALEVEL:
 413:assembly_test.c **** 		pbData[0] = cc2400_get(FREND) & 0x7;
 1193              		.loc 1 413 0
 1194 0398 0520     		movs	r0, #5
 1195 039a FFF7FEFF 		bl	cc2400_get
 1196 039e 0346     		mov	r3, r0
 1197 03a0 DBB2     		uxtb	r3, r3
 1198 03a2 03F00703 		and	r3, r3, #7
 1199 03a6 DAB2     		uxtb	r2, r3
 1200 03a8 FB6B     		ldr	r3, [r7, #60]
 1201 03aa 1A70     		strb	r2, [r3]
 414:assembly_test.c **** 		*piLen = 1;
 1202              		.loc 1 414 0
 1203 03ac BB68     		ldr	r3, [r7, #8]
 1204 03ae 0122     		movs	r2, #1
 1205 03b0 1A60     		str	r2, [r3]
 415:assembly_test.c **** 		break;
 1206              		.loc 1 415 0
ARM GAS  /tmp/cc74qjbb.s 			page 29


 1207 03b2 DFE0     		b	.L54
 1208              	.L49:
 416:assembly_test.c **** 
 417:assembly_test.c **** 	case UBERTOOTH_SET_PALEVEL:
 418:assembly_test.c **** 		if( pSetup->wValue < 8 ) {
 1209              		.loc 1 418 0
 1210 03b4 FB68     		ldr	r3, [r7, #12]
 1211 03b6 5B88     		ldrh	r3, [r3, #2]
 1212 03b8 072B     		cmp	r3, #7
 1213 03ba 09D8     		bhi	.L68
 419:assembly_test.c **** 			cc2400_set(FREND, 8 | pSetup->wValue);
 1214              		.loc 1 419 0
 1215 03bc FB68     		ldr	r3, [r7, #12]
 1216 03be 5B88     		ldrh	r3, [r3, #2]
 1217 03c0 43F00803 		orr	r3, r3, #8
 1218 03c4 9BB2     		uxth	r3, r3
 1219 03c6 0520     		movs	r0, #5
 1220 03c8 1946     		mov	r1, r3
 1221 03ca FFF7FEFF 		bl	cc2400_set
 420:assembly_test.c **** 		} else {
 421:assembly_test.c **** 			return FALSE;
 422:assembly_test.c **** 		}
 423:assembly_test.c **** 		break;
 1222              		.loc 1 423 0
 1223 03ce D1E0     		b	.L54
 1224              	.L68:
 421:assembly_test.c **** 		}
 1225              		.loc 1 421 0
 1226 03d0 0023     		movs	r3, #0
 1227 03d2 D0E0     		b	.L77
 1228              	.L51:
 424:assembly_test.c **** 
 425:assembly_test.c **** 	case UBERTOOTH_RANGE_TEST:
 426:assembly_test.c **** 		requested_mode = MODE_RANGE_TEST;
 1229              		.loc 1 426 0
 1230 03d4 6D4B     		ldr	r3, .L80+12
 1231 03d6 0522     		movs	r2, #5
 1232 03d8 1A60     		str	r2, [r3]
 427:assembly_test.c **** 		break;
 1233              		.loc 1 427 0
 1234 03da CBE0     		b	.L54
 1235              	.L50:
 428:assembly_test.c **** 
 429:assembly_test.c **** 	case UBERTOOTH_REPEATER:
 430:assembly_test.c **** 		requested_mode = MODE_REPEATER;
 1236              		.loc 1 430 0
 1237 03dc 6B4B     		ldr	r3, .L80+12
 1238 03de 0622     		movs	r2, #6
 1239 03e0 1A60     		str	r2, [r3]
 431:assembly_test.c **** 		break;
 1240              		.loc 1 431 0
 1241 03e2 C7E0     		b	.L54
 1242              	.L52:
 432:assembly_test.c **** #endif
 433:assembly_test.c **** 
 434:assembly_test.c **** 	case UBERTOOTH_RANGE_CHECK:
 435:assembly_test.c **** 		pbData[0] = rr.valid;
ARM GAS  /tmp/cc74qjbb.s 			page 30


 1243              		.loc 1 435 0
 1244 03e4 6A4B     		ldr	r3, .L80+16
 1245 03e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1246 03e8 FB6B     		ldr	r3, [r7, #60]
 1247 03ea 1A70     		strb	r2, [r3]
 436:assembly_test.c **** 		pbData[1] = rr.request_pa;
 1248              		.loc 1 436 0
 1249 03ec FB6B     		ldr	r3, [r7, #60]
 1250 03ee 0133     		adds	r3, r3, #1
 1251 03f0 674A     		ldr	r2, .L80+16
 1252 03f2 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1253 03f4 1A70     		strb	r2, [r3]
 437:assembly_test.c **** 		pbData[2] = rr.request_num;
 1254              		.loc 1 437 0
 1255 03f6 FB6B     		ldr	r3, [r7, #60]
 1256 03f8 0233     		adds	r3, r3, #2
 1257 03fa 654A     		ldr	r2, .L80+16
 1258 03fc 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1259 03fe 1A70     		strb	r2, [r3]
 438:assembly_test.c **** 		pbData[3] = rr.reply_pa;
 1260              		.loc 1 438 0
 1261 0400 FB6B     		ldr	r3, [r7, #60]
 1262 0402 0333     		adds	r3, r3, #3
 1263 0404 624A     		ldr	r2, .L80+16
 1264 0406 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 1265 0408 1A70     		strb	r2, [r3]
 439:assembly_test.c **** 		pbData[4] = rr.reply_num;
 1266              		.loc 1 439 0
 1267 040a FB6B     		ldr	r3, [r7, #60]
 1268 040c 0433     		adds	r3, r3, #4
 1269 040e 604A     		ldr	r2, .L80+16
 1270 0410 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 1271 0412 1A70     		strb	r2, [r3]
 440:assembly_test.c **** 		*piLen = 5;
 1272              		.loc 1 440 0
 1273 0414 BB68     		ldr	r3, [r7, #8]
 1274 0416 0522     		movs	r2, #5
 1275 0418 1A60     		str	r2, [r3]
 441:assembly_test.c **** 		break;
 1276              		.loc 1 441 0
 1277 041a ABE0     		b	.L54
 1278              	.L42:
 442:assembly_test.c **** 
 443:assembly_test.c **** 	case UBERTOOTH_STOP:
 444:assembly_test.c **** 		requested_mode = MODE_IDLE;
 1279              		.loc 1 444 0
 1280 041c 5B4B     		ldr	r3, .L80+12
 1281 041e 0022     		movs	r2, #0
 1282 0420 1A60     		str	r2, [r3]
 445:assembly_test.c **** 		break;
 1283              		.loc 1 445 0
 1284 0422 A7E0     		b	.L54
 1285              	.L43:
 446:assembly_test.c **** 
 447:assembly_test.c **** 	case UBERTOOTH_GET_MOD:
 448:assembly_test.c **** 		pbData[0] = modulation;
 1286              		.loc 1 448 0
ARM GAS  /tmp/cc74qjbb.s 			page 31


 1287 0424 5B4B     		ldr	r3, .L80+20
 1288 0426 1B68     		ldr	r3, [r3]
 1289 0428 DAB2     		uxtb	r2, r3
 1290 042a FB6B     		ldr	r3, [r7, #60]
 1291 042c 1A70     		strb	r2, [r3]
 449:assembly_test.c **** 		*piLen = 1;
 1292              		.loc 1 449 0
 1293 042e BB68     		ldr	r3, [r7, #8]
 1294 0430 0122     		movs	r2, #1
 1295 0432 1A60     		str	r2, [r3]
 450:assembly_test.c **** 		break;
 1296              		.loc 1 450 0
 1297 0434 9EE0     		b	.L54
 1298              	.L44:
 451:assembly_test.c **** 
 452:assembly_test.c **** 	case UBERTOOTH_SET_MOD:
 453:assembly_test.c **** 		modulation = pSetup->wValue;
 1299              		.loc 1 453 0
 1300 0436 FB68     		ldr	r3, [r7, #12]
 1301 0438 5B88     		ldrh	r3, [r3, #2]
 1302 043a 1A46     		mov	r2, r3
 1303 043c 554B     		ldr	r3, .L80+20
 1304 043e 1A60     		str	r2, [r3]
 454:assembly_test.c **** 		break;
 1305              		.loc 1 454 0
 1306 0440 98E0     		b	.L54
 1307              	.L32:
 455:assembly_test.c **** 
 456:assembly_test.c **** 	case UBERTOOTH_GET_CHANNEL:
 457:assembly_test.c **** 		pbData[0] = channel & 0xFF;
 1308              		.loc 1 457 0
 1309 0442 554B     		ldr	r3, .L80+24
 1310 0444 1B88     		ldrh	r3, [r3]	@ movhi
 1311 0446 9BB2     		uxth	r3, r3
 1312 0448 DAB2     		uxtb	r2, r3
 1313 044a FB6B     		ldr	r3, [r7, #60]
 1314 044c 1A70     		strb	r2, [r3]
 458:assembly_test.c **** 		pbData[1] = (channel >> 8) & 0xFF;
 1315              		.loc 1 458 0
 1316 044e FB6B     		ldr	r3, [r7, #60]
 1317 0450 0133     		adds	r3, r3, #1
 1318 0452 514A     		ldr	r2, .L80+24
 1319 0454 1288     		ldrh	r2, [r2]	@ movhi
 1320 0456 92B2     		uxth	r2, r2
 1321 0458 120A     		lsrs	r2, r2, #8
 1322 045a 92B2     		uxth	r2, r2
 1323 045c D2B2     		uxtb	r2, r2
 1324 045e 1A70     		strb	r2, [r3]
 459:assembly_test.c **** 		*piLen = 2;
 1325              		.loc 1 459 0
 1326 0460 BB68     		ldr	r3, [r7, #8]
 1327 0462 0222     		movs	r2, #2
 1328 0464 1A60     		str	r2, [r3]
 460:assembly_test.c **** 		break;
 1329              		.loc 1 460 0
 1330 0466 85E0     		b	.L54
 1331              	.L33:
ARM GAS  /tmp/cc74qjbb.s 			page 32


 461:assembly_test.c **** 
 462:assembly_test.c ****     case UBERTOOTH_SET_CHANNEL:
 463:assembly_test.c **** 		channel = pSetup->wValue;
 1332              		.loc 1 463 0
 1333 0468 FB68     		ldr	r3, [r7, #12]
 1334 046a 5A88     		ldrh	r2, [r3, #2]
 1335 046c 4A4B     		ldr	r3, .L80+24
 1336 046e 1A80     		strh	r2, [r3]	@ movhi
 464:assembly_test.c **** 		channel = MAX(channel, MIN_FREQ);
 1337              		.loc 1 464 0
 1338 0470 494B     		ldr	r3, .L80+24
 1339 0472 1B88     		ldrh	r3, [r3]	@ movhi
 1340 0474 9BB2     		uxth	r3, r3
 1341 0476 40F6DC02 		movw	r2, #2268
 1342 047a 9342     		cmp	r3, r2
 1343 047c 03D9     		bls	.L71
 1344              		.loc 1 464 0 is_stmt 0 discriminator 1
 1345 047e 464B     		ldr	r3, .L80+24
 1346 0480 1B88     		ldrh	r3, [r3]	@ movhi
 1347 0482 9BB2     		uxth	r3, r3
 1348 0484 01E0     		b	.L72
 1349              	.L71:
 1350              		.loc 1 464 0 discriminator 2
 1351 0486 40F6DC03 		movw	r3, #2268
 1352              	.L72:
 1353              		.loc 1 464 0 discriminator 4
 1354 048a 434A     		ldr	r2, .L80+24
 1355 048c 1380     		strh	r3, [r2]	@ movhi
 465:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 1356              		.loc 1 465 0 is_stmt 1 discriminator 4
 1357 048e 424B     		ldr	r3, .L80+24
 1358 0490 1B88     		ldrh	r3, [r3]	@ movhi
 1359 0492 9BB2     		uxth	r3, r3
 1360 0494 40F6E922 		movw	r2, #2793
 1361 0498 9342     		cmp	r3, r2
 1362 049a 03D8     		bhi	.L73
 1363              		.loc 1 465 0 is_stmt 0 discriminator 1
 1364 049c 3E4B     		ldr	r3, .L80+24
 1365 049e 1B88     		ldrh	r3, [r3]	@ movhi
 1366 04a0 9BB2     		uxth	r3, r3
 1367 04a2 01E0     		b	.L74
 1368              	.L73:
 1369              		.loc 1 465 0 discriminator 2
 1370 04a4 40F6EA23 		movw	r3, #2794
 1371              	.L74:
 1372              		.loc 1 465 0 discriminator 4
 1373 04a8 3B4A     		ldr	r2, .L80+24
 1374 04aa 1380     		strh	r3, [r2]	@ movhi
 466:assembly_test.c **** 		break;
 1375              		.loc 1 466 0 is_stmt 1 discriminator 4
 1376 04ac 62E0     		b	.L54
 1377              	.L45:
 467:assembly_test.c **** 
 468:assembly_test.c **** 	case UBERTOOTH_SET_ISP:
 469:assembly_test.c **** 		command[0] = 57;
 1378              		.loc 1 469 0
 1379 04ae 3923     		movs	r3, #57
ARM GAS  /tmp/cc74qjbb.s 			page 33


 1380 04b0 7B62     		str	r3, [r7, #36]
 470:assembly_test.c **** 		iap_entry(command, result);
 1381              		.loc 1 470 0
 1382 04b2 3A4B     		ldr	r3, .L80+28
 1383 04b4 1B68     		ldr	r3, [r3]
 1384 04b6 07F12401 		add	r1, r7, #36
 1385 04ba 07F11002 		add	r2, r7, #16
 1386 04be 0846     		mov	r0, r1
 1387 04c0 1146     		mov	r1, r2
 1388 04c2 9847     		blx	r3
 471:assembly_test.c **** 		*piLen = 0; /* should never return */
 1389              		.loc 1 471 0
 1390 04c4 BB68     		ldr	r3, [r7, #8]
 1391 04c6 0022     		movs	r2, #0
 1392 04c8 1A60     		str	r2, [r3]
 472:assembly_test.c **** 		break;
 1393              		.loc 1 472 0
 1394 04ca 53E0     		b	.L54
 1395              	.L46:
 473:assembly_test.c **** 
 474:assembly_test.c **** 	case UBERTOOTH_FLASH:
 475:assembly_test.c **** 		bootloader_ctrl = DFU_MODE;
 1396              		.loc 1 475 0
 1397 04cc 344B     		ldr	r3, .L80+32
 1398 04ce 354A     		ldr	r2, .L80+36
 1399 04d0 1A60     		str	r2, [r3]
 476:assembly_test.c **** 		reset();
 1400              		.loc 1 476 0
 1401 04d2 FFF7FEFF 		bl	reset
 477:assembly_test.c **** 		break;
 1402              		.loc 1 477 0
 1403 04d6 4DE0     		b	.L54
 1404              	.L47:
 478:assembly_test.c **** 
 479:assembly_test.c **** 	case UBERTOOTH_SPECAN:
 480:assembly_test.c **** 		if (pSetup->wValue < 2049 || pSetup->wValue > 3072 || 
 1405              		.loc 1 480 0
 1406 04d8 FB68     		ldr	r3, [r7, #12]
 1407 04da 5B88     		ldrh	r3, [r3, #2]
 1408 04dc B3F5006F 		cmp	r3, #2048
 1409 04e0 14D9     		bls	.L75
 1410              		.loc 1 480 0 is_stmt 0 discriminator 1
 1411 04e2 FB68     		ldr	r3, [r7, #12]
 1412 04e4 5B88     		ldrh	r3, [r3, #2]
 1413 04e6 B3F5406F 		cmp	r3, #3072
 1414 04ea 0FD8     		bhi	.L75
 481:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 1415              		.loc 1 481 0 is_stmt 1 discriminator 2
 1416 04ec FB68     		ldr	r3, [r7, #12]
 1417 04ee 9B88     		ldrh	r3, [r3, #4]
 480:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 1418              		.loc 1 480 0 discriminator 2
 1419 04f0 B3F5006F 		cmp	r3, #2048
 1420 04f4 0AD9     		bls	.L75
 1421              		.loc 1 481 0
 1422 04f6 FB68     		ldr	r3, [r7, #12]
 1423 04f8 9B88     		ldrh	r3, [r3, #4]
ARM GAS  /tmp/cc74qjbb.s 			page 34


 1424 04fa B3F5406F 		cmp	r3, #3072
 1425 04fe 05D8     		bhi	.L75
 482:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 1426              		.loc 1 482 0 discriminator 1
 1427 0500 FB68     		ldr	r3, [r7, #12]
 1428 0502 9A88     		ldrh	r2, [r3, #4]
 1429 0504 FB68     		ldr	r3, [r7, #12]
 1430 0506 5B88     		ldrh	r3, [r3, #2]
 481:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 1431              		.loc 1 481 0 discriminator 1
 1432 0508 9A42     		cmp	r2, r3
 1433 050a 01D2     		bcs	.L76
 1434              	.L75:
 483:assembly_test.c **** 			return FALSE;
 1435              		.loc 1 483 0
 1436 050c 0023     		movs	r3, #0
 1437 050e 32E0     		b	.L77
 1438              	.L76:
 484:assembly_test.c **** 		low_freq = pSetup->wValue;
 1439              		.loc 1 484 0
 1440 0510 FB68     		ldr	r3, [r7, #12]
 1441 0512 5A88     		ldrh	r2, [r3, #2]
 1442 0514 244B     		ldr	r3, .L80+40
 1443 0516 1A80     		strh	r2, [r3]	@ movhi
 485:assembly_test.c **** 		high_freq = pSetup->wIndex;
 1444              		.loc 1 485 0
 1445 0518 FB68     		ldr	r3, [r7, #12]
 1446 051a 9A88     		ldrh	r2, [r3, #4]
 1447 051c 234B     		ldr	r3, .L80+44
 1448 051e 1A80     		strh	r2, [r3]	@ movhi
 486:assembly_test.c **** 		requested_mode = MODE_SPECAN;
 1449              		.loc 1 486 0
 1450 0520 1A4B     		ldr	r3, .L80+12
 1451 0522 0422     		movs	r2, #4
 1452 0524 1A60     		str	r2, [r3]
 487:assembly_test.c **** 		*piLen = 0;
 1453              		.loc 1 487 0
 1454 0526 BB68     		ldr	r3, [r7, #8]
 1455 0528 0022     		movs	r2, #0
 1456 052a 1A60     		str	r2, [r3]
 488:assembly_test.c **** 		break;
 1457              		.loc 1 488 0
 1458 052c 22E0     		b	.L54
 1459              	.L53:
 489:assembly_test.c **** 
 490:assembly_test.c **** 	case UBERTOOTH_GET_REV_NUM:
 491:assembly_test.c **** 		pbData[0] = 0x00;
 1460              		.loc 1 491 0
 1461 052e FB6B     		ldr	r3, [r7, #60]
 1462 0530 0022     		movs	r2, #0
 1463 0532 1A70     		strb	r2, [r3]
 492:assembly_test.c **** 		pbData[1] = 0x00;
 1464              		.loc 1 492 0
 1465 0534 FB6B     		ldr	r3, [r7, #60]
 1466 0536 0133     		adds	r3, r3, #1
 1467 0538 0022     		movs	r2, #0
 1468 053a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 35


 493:assembly_test.c **** 
 494:assembly_test.c **** 		length = (u8)strlen(GIT_REVISION);
 1469              		.loc 1 494 0
 1470 053c 1C48     		ldr	r0, .L80+48
 1471 053e FFF7FEFF 		bl	strlen
 1472 0542 0346     		mov	r3, r0
 1473 0544 87F83B30 		strb	r3, [r7, #59]
 495:assembly_test.c **** 		pbData[2] = length;
 1474              		.loc 1 495 0
 1475 0548 FB6B     		ldr	r3, [r7, #60]
 1476 054a 0233     		adds	r3, r3, #2
 1477 054c 97F83B20 		ldrb	r2, [r7, #59]
 1478 0550 1A70     		strb	r2, [r3]
 496:assembly_test.c **** 
 497:assembly_test.c **** 		memcpy(&pbData[3], GIT_REVISION, length);
 1479              		.loc 1 497 0
 1480 0552 FB6B     		ldr	r3, [r7, #60]
 1481 0554 DA1C     		adds	r2, r3, #3
 1482 0556 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1483 055a 1046     		mov	r0, r2
 1484 055c 1449     		ldr	r1, .L80+48
 1485 055e 1A46     		mov	r2, r3
 1486 0560 FFF7FEFF 		bl	memcpy
 498:assembly_test.c **** 
 499:assembly_test.c **** 		*piLen = 2 + 1 + length;
 1487              		.loc 1 499 0
 1488 0564 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1489 0568 DA1C     		adds	r2, r3, #3
 1490 056a BB68     		ldr	r3, [r7, #8]
 1491 056c 1A60     		str	r2, [r3]
 500:assembly_test.c **** 		break;
 1492              		.loc 1 500 0
 1493 056e 01E0     		b	.L54
 1494              	.L20:
 501:assembly_test.c **** 
 502:assembly_test.c **** 	default:
 503:assembly_test.c **** 		return FALSE;
 1495              		.loc 1 503 0
 1496 0570 0023     		movs	r3, #0
 1497 0572 00E0     		b	.L77
 1498              	.L54:
 504:assembly_test.c **** 	}
 505:assembly_test.c **** 	return TRUE;
 1499              		.loc 1 505 0
 1500 0574 0123     		movs	r3, #1
 1501              	.L77:
 506:assembly_test.c **** }
 1502              		.loc 1 506 0 discriminator 1
 1503 0576 1846     		mov	r0, r3
 1504 0578 4037     		adds	r7, r7, #64
 1505              		.cfi_def_cfa_offset 8
 1506 057a BD46     		mov	sp, r7
 1507              		.cfi_def_cfa_register 13
 1508              		@ sp needed
 1509 057c 80BD     		pop	{r7, pc}
 1510              	.L81:
 1511 057e 00BF     		.align	2
ARM GAS  /tmp/cc74qjbb.s 			page 36


 1512              	.L80:
 1513 0580 54C00920 		.word	537509972
 1514 0584 58C00920 		.word	537509976
 1515 0588 5CC00920 		.word	537509980
 1516 058c 00000000 		.word	requested_mode
 1517 0590 00000000 		.word	rr
 1518 0594 00000000 		.word	modulation
 1519 0598 00000000 		.word	channel
 1520 059c 00000000 		.word	iap_entry
 1521 05a0 00000000 		.word	bootloader_ctrl
 1522 05a4 21BB0543 		.word	1124449057
 1523 05a8 00000000 		.word	low_freq
 1524 05ac 00000000 		.word	high_freq
 1525 05b0 C0000000 		.word	.LC1
 1526              		.cfi_endproc
 1527              	.LFE5:
 1529              		.section	.text.ubertooth_usb_init,"ax",%progbits
 1530              		.align	2
 1531              		.global	ubertooth_usb_init
 1532              		.thumb
 1533              		.thumb_func
 1535              	ubertooth_usb_init:
 1536              	.LFB6:
 507:assembly_test.c **** 
 508:assembly_test.c **** int ubertooth_usb_init()
 509:assembly_test.c **** {
 1537              		.loc 1 509 0
 1538              		.cfi_startproc
 1539              		@ args = 0, pretend = 0, frame = 0
 1540              		@ frame_needed = 1, uses_anonymous_args = 0
 1541 0000 80B5     		push	{r7, lr}
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 00AF     		add	r7, sp, #0
 1546              		.cfi_def_cfa_register 7
 510:assembly_test.c **** 	// initialise stack
 511:assembly_test.c **** 	USBInit();
 1547              		.loc 1 511 0
 1548 0004 FFF7FEFF 		bl	USBInit
 512:assembly_test.c **** 	
 513:assembly_test.c **** 	// register device descriptors
 514:assembly_test.c **** 	USBRegisterDescriptors(abDescriptors);
 1549              		.loc 1 514 0
 1550 0008 0648     		ldr	r0, .L84
 1551 000a FFF7FEFF 		bl	USBRegisterDescriptors
 515:assembly_test.c **** 
 516:assembly_test.c **** 	// override standard request handler
 517:assembly_test.c **** 	USBRegisterRequestHandler(REQTYPE_TYPE_VENDOR, usb_vendor_request_handler, abVendorReqData);
 1552              		.loc 1 517 0
 1553 000e 0220     		movs	r0, #2
 1554 0010 0549     		ldr	r1, .L84+4
 1555 0012 064A     		ldr	r2, .L84+8
 1556 0014 FFF7FEFF 		bl	USBRegisterRequestHandler
 518:assembly_test.c **** 
 519:assembly_test.c **** 	// register endpoints
 520:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_IN_EP, usb_bulk_in_handler);
ARM GAS  /tmp/cc74qjbb.s 			page 37


 521:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_OUT_EP, usb_bulk_out_handler);
 522:assembly_test.c **** 
 523:assembly_test.c **** 	// enable USB interrupts
 524:assembly_test.c **** 	//ISER0 |= ISER0_ISE_USB;
 525:assembly_test.c **** 	
 526:assembly_test.c **** 	// connect to bus
 527:assembly_test.c **** 	USBHwConnect(TRUE);
 1557              		.loc 1 527 0
 1558 0018 0120     		movs	r0, #1
 1559 001a FFF7FEFF 		bl	USBHwConnect
 528:assembly_test.c **** 
 529:assembly_test.c **** 	return 0;
 1560              		.loc 1 529 0
 1561 001e 0023     		movs	r3, #0
 530:assembly_test.c **** }
 1562              		.loc 1 530 0
 1563 0020 1846     		mov	r0, r3
 1564 0022 80BD     		pop	{r7, pc}
 1565              	.L85:
 1566              		.align	2
 1567              	.L84:
 1568 0024 00000000 		.word	abDescriptors
 1569 0028 00000000 		.word	usb_vendor_request_handler
 1570 002c 1C000000 		.word	abVendorReqData
 1571              		.cfi_endproc
 1572              	.LFE6:
 1574              		.section	.text.clkn_init,"ax",%progbits
 1575              		.align	2
 1576              		.thumb
 1577              		.thumb_func
 1579              	clkn_init:
 1580              	.LFB7:
 531:assembly_test.c **** 
 532:assembly_test.c **** static void clkn_init()
 533:assembly_test.c **** {
 1581              		.loc 1 533 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
 1586 0000 80B4     		push	{r7}
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 7, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              		.cfi_def_cfa_register 7
 534:assembly_test.c **** 	/*
 535:assembly_test.c **** 	 * Because these are reset defaults, we're assuming TIMER0 is powered on
 536:assembly_test.c **** 	 * and in timer mode.  The TIMER0 peripheral clock should have been set to
 537:assembly_test.c **** 	 * cclk/2 (50 MHz) by clock_start().
 538:assembly_test.c **** 	 */
 539:assembly_test.c **** 
 540:assembly_test.c **** 	/* stop and reset the timer to zero */
 541:assembly_test.c **** 	T0TCR = TCR_Counter_Reset;
 1591              		.loc 1 541 0
 1592 0004 0D4B     		ldr	r3, .L87
 1593 0006 0222     		movs	r2, #2
 1594 0008 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 38


 542:assembly_test.c **** 	clkn_high = 0;
 1595              		.loc 1 542 0
 1596 000a 0D4B     		ldr	r3, .L87+4
 1597 000c 0022     		movs	r2, #0
 1598 000e 1A70     		strb	r2, [r3]
 543:assembly_test.c **** 
 544:assembly_test.c **** 	/*
 545:assembly_test.c **** 	 * The peripheral clock has a period of 20ns.  5 pclk periods makes one
 546:assembly_test.c **** 	 * CLK100NS period (100ns).  CLK100NS resets every 2^15 * 10^5 (3276800000)
 547:assembly_test.c **** 	 * steps, roughly 5.5 minutes.
 548:assembly_test.c **** 	 */
 549:assembly_test.c **** 	T0PR = 4;
 1599              		.loc 1 549 0
 1600 0010 0C4B     		ldr	r3, .L87+8
 1601 0012 0422     		movs	r2, #4
 1602 0014 1A60     		str	r2, [r3]
 550:assembly_test.c **** 	T0MR0 = 3276799999;
 1603              		.loc 1 550 0
 1604 0016 0C4B     		ldr	r3, .L87+12
 1605 0018 0C4A     		ldr	r2, .L87+16
 1606 001a 1A60     		str	r2, [r3]
 551:assembly_test.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 1607              		.loc 1 551 0
 1608 001c 0C4B     		ldr	r3, .L87+20
 1609 001e 0322     		movs	r2, #3
 1610 0020 1A60     		str	r2, [r3]
 552:assembly_test.c **** 	ISER0 |= ISER0_ISE_TIMER0;
 1611              		.loc 1 552 0
 1612 0022 0C4A     		ldr	r2, .L87+24
 1613 0024 0B4B     		ldr	r3, .L87+24
 1614 0026 1B68     		ldr	r3, [r3]
 1615 0028 43F00203 		orr	r3, r3, #2
 1616 002c 1360     		str	r3, [r2]
 553:assembly_test.c **** 
 554:assembly_test.c **** 	/* start timer */
 555:assembly_test.c **** 	T0TCR = TCR_Counter_Enable;
 1617              		.loc 1 555 0
 1618 002e 034B     		ldr	r3, .L87
 1619 0030 0122     		movs	r2, #1
 1620 0032 1A60     		str	r2, [r3]
 556:assembly_test.c **** }
 1621              		.loc 1 556 0
 1622 0034 BD46     		mov	sp, r7
 1623              		.cfi_def_cfa_register 13
 1624              		@ sp needed
 1625 0036 5DF8047B 		ldr	r7, [sp], #4
 1626              		.cfi_restore 7
 1627              		.cfi_def_cfa_offset 0
 1628 003a 7047     		bx	lr
 1629              	.L88:
 1630              		.align	2
 1631              	.L87:
 1632 003c 04400040 		.word	1073758212
 1633 0040 00000000 		.word	clkn_high
 1634 0044 0C400040 		.word	1073758220
 1635 0048 18400040 		.word	1073758232
 1636 004c FFFF4FC3 		.word	-1018167297
ARM GAS  /tmp/cc74qjbb.s 			page 39


 1637 0050 14400040 		.word	1073758228
 1638 0054 00E100E0 		.word	-536813312
 1639              		.cfi_endproc
 1640              	.LFE7:
 1642              		.section	.text.TIMER0_IRQHandler,"ax",%progbits
 1643              		.align	2
 1644              		.global	TIMER0_IRQHandler
 1645              		.thumb
 1646              		.thumb_func
 1648              	TIMER0_IRQHandler:
 1649              	.LFB8:
 557:assembly_test.c **** 
 558:assembly_test.c **** /* clkn_high is incremented each time CLK100NS rolls over */
 559:assembly_test.c **** void TIMER0_IRQHandler()
 560:assembly_test.c **** {
 1650              		.loc 1 560 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655 0000 80B4     		push	{r7}
 1656              		.cfi_def_cfa_offset 4
 1657              		.cfi_offset 7, -4
 1658 0002 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 561:assembly_test.c **** 	if (T0IR & TIR_MR0_Interrupt) {
 1660              		.loc 1 561 0
 1661 0004 4FF04023 		mov	r3, #1073758208
 1662 0008 1B68     		ldr	r3, [r3]
 1663 000a 03F00103 		and	r3, r3, #1
 1664 000e 002B     		cmp	r3, #0
 1665 0010 0ED0     		beq	.L89
 562:assembly_test.c **** 		++clkn_high;
 1666              		.loc 1 562 0
 1667 0012 094B     		ldr	r3, .L91
 1668 0014 1B78     		ldrb	r3, [r3]
 1669 0016 DBB2     		uxtb	r3, r3
 1670 0018 0133     		adds	r3, r3, #1
 1671 001a DAB2     		uxtb	r2, r3
 1672 001c 064B     		ldr	r3, .L91
 1673 001e 1A70     		strb	r2, [r3]
 563:assembly_test.c **** 		T0IR |= TIR_MR0_Interrupt;
 1674              		.loc 1 563 0
 1675 0020 4FF04022 		mov	r2, #1073758208
 1676 0024 4FF04023 		mov	r3, #1073758208
 1677 0028 1B68     		ldr	r3, [r3]
 1678 002a 43F00103 		orr	r3, r3, #1
 1679 002e 1360     		str	r3, [r2]
 1680              	.L89:
 564:assembly_test.c **** 	}
 565:assembly_test.c **** }
 1681              		.loc 1 565 0
 1682 0030 BD46     		mov	sp, r7
 1683              		.cfi_def_cfa_register 13
 1684              		@ sp needed
 1685 0032 5DF8047B 		ldr	r7, [sp], #4
 1686              		.cfi_restore 7
ARM GAS  /tmp/cc74qjbb.s 			page 40


 1687              		.cfi_def_cfa_offset 0
 1688 0036 7047     		bx	lr
 1689              	.L92:
 1690              		.align	2
 1691              	.L91:
 1692 0038 00000000 		.word	clkn_high
 1693              		.cfi_endproc
 1694              	.LFE8:
 1696              		.section	.text.dma_init,"ax",%progbits
 1697              		.align	2
 1698              		.thumb
 1699              		.thumb_func
 1701              	dma_init:
 1702              	.LFB9:
 566:assembly_test.c **** 
 567:assembly_test.c **** static void dma_init()
 568:assembly_test.c **** {
 1703              		.loc 1 568 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 1, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 1708 0000 80B4     		push	{r7}
 1709              		.cfi_def_cfa_offset 4
 1710              		.cfi_offset 7, -4
 1711 0002 00AF     		add	r7, sp, #0
 1712              		.cfi_def_cfa_register 7
 569:assembly_test.c **** 	/* power up GPDMA controller */
 570:assembly_test.c **** 	PCONP |= PCONP_PCGPDMA;
 1713              		.loc 1 570 0
 1714 0004 344A     		ldr	r2, .L95
 1715 0006 344B     		ldr	r3, .L95
 1716 0008 1B68     		ldr	r3, [r3]
 1717 000a 43F00053 		orr	r3, r3, #536870912
 1718 000e 1360     		str	r3, [r2]
 571:assembly_test.c **** 
 572:assembly_test.c **** 	/* zero out channel configs and clear interrupts */
 573:assembly_test.c **** 	DMACC0Config = 0;
 1719              		.loc 1 573 0
 1720 0010 324B     		ldr	r3, .L95+4
 1721 0012 0022     		movs	r2, #0
 1722 0014 1A60     		str	r2, [r3]
 574:assembly_test.c **** 	DMACC1Config = 0;
 1723              		.loc 1 574 0
 1724 0016 324B     		ldr	r3, .L95+8
 1725 0018 0022     		movs	r2, #0
 1726 001a 1A60     		str	r2, [r3]
 575:assembly_test.c **** 	DMACC2Config = 0;
 1727              		.loc 1 575 0
 1728 001c 314B     		ldr	r3, .L95+12
 1729 001e 0022     		movs	r2, #0
 1730 0020 1A60     		str	r2, [r3]
 576:assembly_test.c **** 	DMACC3Config = 0;
 1731              		.loc 1 576 0
 1732 0022 314B     		ldr	r3, .L95+16
 1733 0024 0022     		movs	r2, #0
 1734 0026 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 41


 577:assembly_test.c **** 	DMACC4Config = 0;
 1735              		.loc 1 577 0
 1736 0028 304B     		ldr	r3, .L95+20
 1737 002a 0022     		movs	r2, #0
 1738 002c 1A60     		str	r2, [r3]
 578:assembly_test.c **** 	DMACC5Config = 0;
 1739              		.loc 1 578 0
 1740 002e 304B     		ldr	r3, .L95+24
 1741 0030 0022     		movs	r2, #0
 1742 0032 1A60     		str	r2, [r3]
 579:assembly_test.c **** 	DMACC6Config = 0;
 1743              		.loc 1 579 0
 1744 0034 2F4B     		ldr	r3, .L95+28
 1745 0036 0022     		movs	r2, #0
 1746 0038 1A60     		str	r2, [r3]
 580:assembly_test.c **** 	DMACC7Config = 0;
 1747              		.loc 1 580 0
 1748 003a 2F4B     		ldr	r3, .L95+32
 1749 003c 0022     		movs	r2, #0
 1750 003e 1A60     		str	r2, [r3]
 581:assembly_test.c **** 	DMACIntTCClear = 0xFF;
 1751              		.loc 1 581 0
 1752 0040 2E4B     		ldr	r3, .L95+36
 1753 0042 FF22     		movs	r2, #255
 1754 0044 1A60     		str	r2, [r3]
 582:assembly_test.c **** 	DMACIntErrClr = 0xFF;
 1755              		.loc 1 582 0
 1756 0046 2E4B     		ldr	r3, .L95+40
 1757 0048 FF22     		movs	r2, #255
 1758 004a 1A60     		str	r2, [r3]
 583:assembly_test.c **** 
 584:assembly_test.c **** 	/* DMA linked lists */
 585:assembly_test.c **** 	rx_dma_lli1.src = (u32)&(DIO_SSP_DR);
 1759              		.loc 1 585 0
 1760 004c 2D4B     		ldr	r3, .L95+44
 1761 004e 2E4A     		ldr	r2, .L95+48
 1762 0050 1A60     		str	r2, [r3]
 586:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
 1763              		.loc 1 586 0
 1764 0052 2E4A     		ldr	r2, .L95+52
 1765 0054 2B4B     		ldr	r3, .L95+44
 1766 0056 5A60     		str	r2, [r3, #4]
 587:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
 1767              		.loc 1 587 0
 1768 0058 2D4A     		ldr	r2, .L95+56
 1769 005a 2A4B     		ldr	r3, .L95+44
 1770 005c 9A60     		str	r2, [r3, #8]
 588:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
 1771              		.loc 1 588 0
 1772 005e 294B     		ldr	r3, .L95+44
 1773 0060 2C4A     		ldr	r2, .L95+60
 1774 0062 DA60     		str	r2, [r3, #12]
 589:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 590:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 591:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
 592:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 593:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
ARM GAS  /tmp/cc74qjbb.s 			page 42


 594:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 595:assembly_test.c **** 
 596:assembly_test.c **** 	rx_dma_lli2.src = (u32)&(DIO_SSP_DR);
 1775              		.loc 1 596 0
 1776 0064 2A4B     		ldr	r3, .L95+56
 1777 0066 284A     		ldr	r2, .L95+48
 1778 0068 1A60     		str	r2, [r3]
 597:assembly_test.c **** 	rx_dma_lli2.dest = (u32)&rxbuf2[0];
 1779              		.loc 1 597 0
 1780 006a 2B4A     		ldr	r2, .L95+64
 1781 006c 284B     		ldr	r3, .L95+56
 1782 006e 5A60     		str	r2, [r3, #4]
 598:assembly_test.c **** 	rx_dma_lli2.next_lli = (u32)&rx_dma_lli1;
 1783              		.loc 1 598 0
 1784 0070 244A     		ldr	r2, .L95+44
 1785 0072 274B     		ldr	r3, .L95+56
 1786 0074 9A60     		str	r2, [r3, #8]
 599:assembly_test.c **** 	rx_dma_lli2.control = (DMA_SIZE) |
 1787              		.loc 1 599 0
 1788 0076 264B     		ldr	r3, .L95+56
 1789 0078 264A     		ldr	r2, .L95+60
 1790 007a DA60     		str	r2, [r3, #12]
 600:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 601:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 602:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
 603:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 604:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
 605:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 606:assembly_test.c **** 
 607:assembly_test.c **** 	/* disable DMA interrupts */
 608:assembly_test.c **** 	ISER0 &= ~ISER0_ISE_DMA;
 1791              		.loc 1 608 0
 1792 007c 274A     		ldr	r2, .L95+68
 1793 007e 274B     		ldr	r3, .L95+68
 1794 0080 1B68     		ldr	r3, [r3]
 1795 0082 23F08063 		bic	r3, r3, #67108864
 1796 0086 1360     		str	r3, [r2]
 609:assembly_test.c **** 
 610:assembly_test.c **** 	/* enable DMA globally */
 611:assembly_test.c **** 	DMACConfig = DMACConfig_E;
 1797              		.loc 1 611 0
 1798 0088 254B     		ldr	r3, .L95+72
 1799 008a 0122     		movs	r2, #1
 1800 008c 1A60     		str	r2, [r3]
 612:assembly_test.c **** 	while (!(DMACConfig & DMACConfig_E));
 1801              		.loc 1 612 0
 1802 008e 00BF     		nop
 1803              	.L94:
 1804              		.loc 1 612 0 is_stmt 0 discriminator 1
 1805 0090 234B     		ldr	r3, .L95+72
 1806 0092 1B68     		ldr	r3, [r3]
 1807 0094 03F00103 		and	r3, r3, #1
 1808 0098 002B     		cmp	r3, #0
 1809 009a F9D0     		beq	.L94
 613:assembly_test.c **** 
 614:assembly_test.c **** 	/* configure DMA channel 1 */
 615:assembly_test.c **** 	DMACC0SrcAddr = rx_dma_lli1.src;
ARM GAS  /tmp/cc74qjbb.s 			page 43


 1810              		.loc 1 615 0 is_stmt 1
 1811 009c 214A     		ldr	r2, .L95+76
 1812 009e 194B     		ldr	r3, .L95+44
 1813 00a0 1B68     		ldr	r3, [r3]
 1814 00a2 1360     		str	r3, [r2]
 616:assembly_test.c **** 	DMACC0DestAddr = rx_dma_lli1.dest;
 1815              		.loc 1 616 0
 1816 00a4 204A     		ldr	r2, .L95+80
 1817 00a6 174B     		ldr	r3, .L95+44
 1818 00a8 5B68     		ldr	r3, [r3, #4]
 1819 00aa 1360     		str	r3, [r2]
 617:assembly_test.c **** 	DMACC0LLI = rx_dma_lli1.next_lli;
 1820              		.loc 1 617 0
 1821 00ac 1F4A     		ldr	r2, .L95+84
 1822 00ae 154B     		ldr	r3, .L95+44
 1823 00b0 9B68     		ldr	r3, [r3, #8]
 1824 00b2 1360     		str	r3, [r2]
 618:assembly_test.c **** 	DMACC0Control = rx_dma_lli1.control;
 1825              		.loc 1 618 0
 1826 00b4 1E4A     		ldr	r2, .L95+88
 1827 00b6 134B     		ldr	r3, .L95+44
 1828 00b8 DB68     		ldr	r3, [r3, #12]
 1829 00ba 1360     		str	r3, [r2]
 619:assembly_test.c **** 	DMACC0Config =
 1830              		.loc 1 619 0
 1831 00bc 074B     		ldr	r3, .L95+4
 1832 00be 4DF20602 		movw	r2, #53254
 1833 00c2 1A60     		str	r2, [r3]
 620:assembly_test.c **** 			DIO_SSP_SRC |
 621:assembly_test.c **** 			(0x2 << 11) |           /* peripheral to memory */
 622:assembly_test.c **** 			DMACCxConfig_IE |       /* allow error interrupts */
 623:assembly_test.c **** 			DMACCxConfig_ITC;       /* allow terminal count interrupts */
 624:assembly_test.c **** 
 625:assembly_test.c **** 	/* reset interrupt counters */
 626:assembly_test.c **** 	rx_tc = 0;
 1834              		.loc 1 626 0
 1835 00c4 1B4B     		ldr	r3, .L95+92
 1836 00c6 0022     		movs	r2, #0
 1837 00c8 1A60     		str	r2, [r3]
 627:assembly_test.c **** 	rx_err = 0;
 1838              		.loc 1 627 0
 1839 00ca 1B4B     		ldr	r3, .L95+96
 1840 00cc 0022     		movs	r2, #0
 1841 00ce 1A60     		str	r2, [r3]
 628:assembly_test.c **** }
 1842              		.loc 1 628 0
 1843 00d0 BD46     		mov	sp, r7
 1844              		.cfi_def_cfa_register 13
 1845              		@ sp needed
 1846 00d2 5DF8047B 		ldr	r7, [sp], #4
 1847              		.cfi_restore 7
 1848              		.cfi_def_cfa_offset 0
 1849 00d6 7047     		bx	lr
 1850              	.L96:
 1851              		.align	2
 1852              	.L95:
 1853 00d8 C4C00F40 		.word	1074774212
ARM GAS  /tmp/cc74qjbb.s 			page 44


 1854 00dc 10410050 		.word	1342193936
 1855 00e0 30410050 		.word	1342193968
 1856 00e4 50410050 		.word	1342194000
 1857 00e8 70410050 		.word	1342194032
 1858 00ec 90410050 		.word	1342194064
 1859 00f0 B0410050 		.word	1342194096
 1860 00f4 D0410050 		.word	1342194128
 1861 00f8 F0410050 		.word	1342194160
 1862 00fc 08400050 		.word	1342193672
 1863 0100 10400050 		.word	1342193680
 1864 0104 00000000 		.word	rx_dma_lli1
 1865 0108 08000340 		.word	1073938440
 1866 010c 00000000 		.word	rxbuf1
 1867 0110 00000000 		.word	rx_dma_lli2
 1868 0114 32900088 		.word	-2013229006
 1869 0118 00000000 		.word	rxbuf2
 1870 011c 00E100E0 		.word	-536813312
 1871 0120 30400050 		.word	1342193712
 1872 0124 00410050 		.word	1342193920
 1873 0128 04410050 		.word	1342193924
 1874 012c 08410050 		.word	1342193928
 1875 0130 0C410050 		.word	1342193932
 1876 0134 00000000 		.word	rx_tc
 1877 0138 00000000 		.word	rx_err
 1878              		.cfi_endproc
 1879              	.LFE9:
 1881              		.section	.text.DMA_IRQHandler,"ax",%progbits
 1882              		.align	2
 1883              		.global	DMA_IRQHandler
 1884              		.thumb
 1885              		.thumb_func
 1887              	DMA_IRQHandler:
 1888              	.LFB10:
 629:assembly_test.c **** 
 630:assembly_test.c **** void DMA_IRQHandler()
 631:assembly_test.c **** {
 1889              		.loc 1 631 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894 0000 80B4     		push	{r7}
 1895              		.cfi_def_cfa_offset 4
 1896              		.cfi_offset 7, -4
 1897 0002 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
 632:assembly_test.c **** 	/* interrupt on channel 0 */
 633:assembly_test.c **** 	if (DMACIntStat & (1 << 0)) {
 1899              		.loc 1 633 0
 1900 0004 154B     		ldr	r3, .L100
 1901 0006 1B68     		ldr	r3, [r3]
 1902 0008 03F00103 		and	r3, r3, #1
 1903 000c 002B     		cmp	r3, #0
 1904 000e 21D0     		beq	.L97
 634:assembly_test.c **** 		if (DMACIntTCStat & (1 << 0)) {
 1905              		.loc 1 634 0
 1906 0010 134B     		ldr	r3, .L100+4
ARM GAS  /tmp/cc74qjbb.s 			page 45


 1907 0012 1B68     		ldr	r3, [r3]
 1908 0014 03F00103 		and	r3, r3, #1
 1909 0018 002B     		cmp	r3, #0
 1910 001a 0AD0     		beq	.L99
 635:assembly_test.c **** 			DMACIntTCClear |= (1 << 0);
 1911              		.loc 1 635 0
 1912 001c 114A     		ldr	r2, .L100+8
 1913 001e 114B     		ldr	r3, .L100+8
 1914 0020 1B68     		ldr	r3, [r3]
 1915 0022 43F00103 		orr	r3, r3, #1
 1916 0026 1360     		str	r3, [r2]
 636:assembly_test.c **** 			++rx_tc;
 1917              		.loc 1 636 0
 1918 0028 0F4B     		ldr	r3, .L100+12
 1919 002a 1B68     		ldr	r3, [r3]
 1920 002c 0133     		adds	r3, r3, #1
 1921 002e 0E4A     		ldr	r2, .L100+12
 1922 0030 1360     		str	r3, [r2]
 1923              	.L99:
 637:assembly_test.c **** 		}
 638:assembly_test.c **** 		if (DMACIntErrStat & (1 << 0)) {
 1924              		.loc 1 638 0
 1925 0032 0E4B     		ldr	r3, .L100+16
 1926 0034 1B68     		ldr	r3, [r3]
 1927 0036 03F00103 		and	r3, r3, #1
 1928 003a 002B     		cmp	r3, #0
 1929 003c 0AD0     		beq	.L97
 639:assembly_test.c **** 			DMACIntErrClr |= (1 << 0);
 1930              		.loc 1 639 0
 1931 003e 0C4A     		ldr	r2, .L100+20
 1932 0040 0B4B     		ldr	r3, .L100+20
 1933 0042 1B68     		ldr	r3, [r3]
 1934 0044 43F00103 		orr	r3, r3, #1
 1935 0048 1360     		str	r3, [r2]
 640:assembly_test.c **** 			++rx_err;
 1936              		.loc 1 640 0
 1937 004a 0A4B     		ldr	r3, .L100+24
 1938 004c 1B68     		ldr	r3, [r3]
 1939 004e 0133     		adds	r3, r3, #1
 1940 0050 084A     		ldr	r2, .L100+24
 1941 0052 1360     		str	r3, [r2]
 1942              	.L97:
 641:assembly_test.c **** 		}
 642:assembly_test.c **** 	}
 643:assembly_test.c **** }
 1943              		.loc 1 643 0
 1944 0054 BD46     		mov	sp, r7
 1945              		.cfi_def_cfa_register 13
 1946              		@ sp needed
 1947 0056 5DF8047B 		ldr	r7, [sp], #4
 1948              		.cfi_restore 7
 1949              		.cfi_def_cfa_offset 0
 1950 005a 7047     		bx	lr
 1951              	.L101:
 1952              		.align	2
 1953              	.L100:
 1954 005c 00400050 		.word	1342193664
ARM GAS  /tmp/cc74qjbb.s 			page 46


 1955 0060 04400050 		.word	1342193668
 1956 0064 08400050 		.word	1342193672
 1957 0068 00000000 		.word	rx_tc
 1958 006c 0C400050 		.word	1342193676
 1959 0070 10400050 		.word	1342193680
 1960 0074 00000000 		.word	rx_err
 1961              		.cfi_endproc
 1962              	.LFE10:
 1964              		.section	.text.dio_ssp_start,"ax",%progbits
 1965              		.align	2
 1966              		.thumb
 1967              		.thumb_func
 1969              	dio_ssp_start:
 1970              	.LFB11:
 644:assembly_test.c **** 
 645:assembly_test.c **** static void dio_ssp_start()
 646:assembly_test.c **** {
 1971              		.loc 1 646 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975              		@ link register save eliminated.
 1976 0000 80B4     		push	{r7}
 1977              		.cfi_def_cfa_offset 4
 1978              		.cfi_offset 7, -4
 1979 0002 00AF     		add	r7, sp, #0
 1980              		.cfi_def_cfa_register 7
 647:assembly_test.c **** 	/* make sure the (active low) slave select signal is not active */
 648:assembly_test.c **** 	DIO_SSEL_SET;
 1981              		.loc 1 648 0
 1982 0004 114B     		ldr	r3, .L103
 1983 0006 4FF08052 		mov	r2, #268435456
 1984 000a 1A60     		str	r2, [r3]
 649:assembly_test.c **** 
 650:assembly_test.c **** 	/* enable rx DMA on DIO_SSP */
 651:assembly_test.c **** 	DIO_SSP_DMACR |= SSPDMACR_RXDMAE;
 1985              		.loc 1 651 0
 1986 000c 104A     		ldr	r2, .L103+4
 1987 000e 104B     		ldr	r3, .L103+4
 1988 0010 1B68     		ldr	r3, [r3]
 1989 0012 43F00103 		orr	r3, r3, #1
 1990 0016 1360     		str	r3, [r2]
 652:assembly_test.c **** 	DIO_SSP_CR1 |= SSPCR1_SSE;
 1991              		.loc 1 652 0
 1992 0018 0E4A     		ldr	r2, .L103+8
 1993 001a 0E4B     		ldr	r3, .L103+8
 1994 001c 1B68     		ldr	r3, [r3]
 1995 001e 43F00203 		orr	r3, r3, #2
 1996 0022 1360     		str	r3, [r2]
 653:assembly_test.c **** 	
 654:assembly_test.c **** 	/* enable DMA */
 655:assembly_test.c **** 	DMACC0Config |= DMACCxConfig_E;
 1997              		.loc 1 655 0
 1998 0024 0C4A     		ldr	r2, .L103+12
 1999 0026 0C4B     		ldr	r3, .L103+12
 2000 0028 1B68     		ldr	r3, [r3]
 2001 002a 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/cc74qjbb.s 			page 47


 2002 002e 1360     		str	r3, [r2]
 656:assembly_test.c **** 	ISER0 |= ISER0_ISE_DMA;
 2003              		.loc 1 656 0
 2004 0030 0A4A     		ldr	r2, .L103+16
 2005 0032 0A4B     		ldr	r3, .L103+16
 2006 0034 1B68     		ldr	r3, [r3]
 2007 0036 43F08063 		orr	r3, r3, #67108864
 2008 003a 1360     		str	r3, [r2]
 657:assembly_test.c **** 
 658:assembly_test.c **** 	/* activate slave select pin */
 659:assembly_test.c **** 	DIO_SSEL_CLR;
 2009              		.loc 1 659 0
 2010 003c 084B     		ldr	r3, .L103+20
 2011 003e 4FF08052 		mov	r2, #268435456
 2012 0042 1A60     		str	r2, [r3]
 660:assembly_test.c **** }
 2013              		.loc 1 660 0
 2014 0044 BD46     		mov	sp, r7
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 0046 5DF8047B 		ldr	r7, [sp], #4
 2018              		.cfi_restore 7
 2019              		.cfi_def_cfa_offset 0
 2020 004a 7047     		bx	lr
 2021              	.L104:
 2022              		.align	2
 2023              	.L103:
 2024 004c 98C00920 		.word	537510040
 2025 0050 24000340 		.word	1073938468
 2026 0054 04000340 		.word	1073938436
 2027 0058 10410050 		.word	1342193936
 2028 005c 00E100E0 		.word	-536813312
 2029 0060 9CC00920 		.word	537510044
 2030              		.cfi_endproc
 2031              	.LFE11:
 2033              		.section	.text.cc2400_rx,"ax",%progbits
 2034              		.align	2
 2035              		.global	cc2400_rx
 2036              		.thumb
 2037              		.thumb_func
 2039              	cc2400_rx:
 2040              	.LFB12:
 661:assembly_test.c **** 
 662:assembly_test.c **** /* start un-buffered rx */
 663:assembly_test.c **** void cc2400_rx()
 664:assembly_test.c **** {
 2041              		.loc 1 664 0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 0
 2044              		@ frame_needed = 1, uses_anonymous_args = 0
 2045 0000 80B5     		push	{r7, lr}
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 7, -8
 2048              		.cfi_offset 14, -4
 2049 0002 00AF     		add	r7, sp, #0
 2050              		.cfi_def_cfa_register 7
 665:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
ARM GAS  /tmp/cc74qjbb.s 			page 48


 2051              		.loc 1 665 0
 2052 0004 354B     		ldr	r3, .L112
 2053 0006 1B68     		ldr	r3, [r3]
 2054 0008 002B     		cmp	r3, #0
 2055 000a 21D1     		bne	.L106
 666:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 2056              		.loc 1 666 0
 2057 000c 0D20     		movs	r0, #13
 2058 000e 47F6FF71 		movw	r1, #32767
 2059 0012 FFF7FEFF 		bl	cc2400_set
 667:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 2060              		.loc 1 667 0
 2061 0016 1220     		movs	r0, #18
 2062 0018 42F62231 		movw	r1, #11042
 2063 001c FFF7FEFF 		bl	cc2400_set
 668:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 2064              		.loc 1 668 0
 2065 0020 1420     		movs	r0, #20
 2066 0022 41F24B31 		movw	r1, #4939
 2067 0026 FFF7FEFF 		bl	cc2400_set
 669:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 2068              		.loc 1 669 0
 2069 002a 2020     		movs	r0, #32
 2070 002c 40F20111 		movw	r1, #257
 2071 0030 FFF7FEFF 		bl	cc2400_set
 670:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
 2072              		.loc 1 670 0
 2073 0034 2A4B     		ldr	r3, .L112+4
 2074 0036 1B88     		ldrh	r3, [r3]	@ movhi
 2075 0038 9BB2     		uxth	r3, r3
 2076 003a 013B     		subs	r3, r3, #1
 2077 003c 9BB2     		uxth	r3, r3
 2078 003e 0220     		movs	r0, #2
 2079 0040 1946     		mov	r1, r3
 2080 0042 FFF7FEFF 		bl	cc2400_set
 671:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 2081              		.loc 1 671 0
 2082 0046 0320     		movs	r0, #3
 2083 0048 2921     		movs	r1, #41
 2084 004a FFF7FEFF 		bl	cc2400_set
 2085 004e 26E0     		b	.L107
 2086              	.L106:
 672:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 2087              		.loc 1 672 0
 2088 0050 224B     		ldr	r3, .L112
 2089 0052 1B68     		ldr	r3, [r3]
 2090 0054 012B     		cmp	r3, #1
 2091 0056 21D1     		bne	.L108
 673:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 2092              		.loc 1 673 0
 2093 0058 0D20     		movs	r0, #13
 2094 005a 47F6FF71 		movw	r1, #32767
 2095 005e FFF7FEFF 		bl	cc2400_set
 674:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 2096              		.loc 1 674 0
 2097 0062 1220     		movs	r0, #18
 2098 0064 42F62231 		movw	r1, #11042
ARM GAS  /tmp/cc74qjbb.s 			page 49


 2099 0068 FFF7FEFF 		bl	cc2400_set
 675:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 2100              		.loc 1 675 0
 2101 006c 1420     		movs	r0, #20
 2102 006e 41F24B31 		movw	r1, #4939
 2103 0072 FFF7FEFF 		bl	cc2400_set
 676:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 2104              		.loc 1 676 0
 2105 0076 2020     		movs	r0, #32
 2106 0078 40F20111 		movw	r1, #257
 2107 007c FFF7FEFF 		bl	cc2400_set
 677:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
 2108              		.loc 1 677 0
 2109 0080 174B     		ldr	r3, .L112+4
 2110 0082 1B88     		ldrh	r3, [r3]	@ movhi
 2111 0084 9BB2     		uxth	r3, r3
 2112 0086 013B     		subs	r3, r3, #1
 2113 0088 9BB2     		uxth	r3, r3
 2114 008a 0220     		movs	r0, #2
 2115 008c 1946     		mov	r1, r3
 2116 008e FFF7FEFF 		bl	cc2400_set
 678:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 2117              		.loc 1 678 0
 2118 0092 0320     		movs	r0, #3
 2119 0094 4021     		movs	r1, #64
 2120 0096 FFF7FEFF 		bl	cc2400_set
 2121 009a 00E0     		b	.L107
 2122              	.L108:
 679:assembly_test.c **** 	} else {
 680:assembly_test.c **** 		/* oops */
 681:assembly_test.c **** 		return;
 2123              		.loc 1 681 0
 2124 009c 1CE0     		b	.L105
 2125              	.L107:
 682:assembly_test.c **** 	}
 683:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2126              		.loc 1 683 0
 2127 009e 00BF     		nop
 2128              	.L110:
 2129              		.loc 1 683 0 is_stmt 0 discriminator 1
 2130 00a0 FFF7FEFF 		bl	cc2400_status
 2131 00a4 0346     		mov	r3, r0
 2132 00a6 03F04003 		and	r3, r3, #64
 2133 00aa 002B     		cmp	r3, #0
 2134 00ac F8D0     		beq	.L110
 684:assembly_test.c **** 	cc2400_strobe(SFSON);
 2135              		.loc 1 684 0 is_stmt 1
 2136 00ae 6120     		movs	r0, #97
 2137 00b0 FFF7FEFF 		bl	cc2400_strobe
 685:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 2138              		.loc 1 685 0
 2139 00b4 00BF     		nop
 2140              	.L111:
 2141              		.loc 1 685 0 is_stmt 0 discriminator 1
 2142 00b6 FFF7FEFF 		bl	cc2400_status
 2143 00ba 0346     		mov	r3, r0
 2144 00bc 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/cc74qjbb.s 			page 50


 2145 00c0 002B     		cmp	r3, #0
 2146 00c2 F8D0     		beq	.L111
 686:assembly_test.c **** 	cc2400_strobe(SRX);
 2147              		.loc 1 686 0 is_stmt 1
 2148 00c4 6220     		movs	r0, #98
 2149 00c6 FFF7FEFF 		bl	cc2400_strobe
 687:assembly_test.c **** #ifdef UBERTOOTH_ONE
 688:assembly_test.c **** 	PAEN_SET;
 2150              		.loc 1 688 0
 2151 00ca 064B     		ldr	r3, .L112+8
 2152 00cc 8022     		movs	r2, #128
 2153 00ce 1A60     		str	r2, [r3]
 689:assembly_test.c **** 	HGM_SET;
 2154              		.loc 1 689 0
 2155 00d0 044B     		ldr	r3, .L112+8
 2156 00d2 4FF48072 		mov	r2, #256
 2157 00d6 1A60     		str	r2, [r3]
 2158              	.L105:
 690:assembly_test.c **** #endif
 691:assembly_test.c **** }
 2159              		.loc 1 691 0
 2160 00d8 80BD     		pop	{r7, pc}
 2161              	.L113:
 2162 00da 00BF     		.align	2
 2163              	.L112:
 2164 00dc 00000000 		.word	modulation
 2165 00e0 00000000 		.word	channel
 2166 00e4 58C00920 		.word	537509976
 2167              		.cfi_endproc
 2168              	.LFE12:
 2170              		.section	.text.cc2400_txtest,"ax",%progbits
 2171              		.align	2
 2172              		.global	cc2400_txtest
 2173              		.thumb
 2174              		.thumb_func
 2176              	cc2400_txtest:
 2177              	.LFB13:
 692:assembly_test.c **** 
 693:assembly_test.c **** void cc2400_txtest()
 694:assembly_test.c **** {
 2178              		.loc 1 694 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 1, uses_anonymous_args = 0
 2182 0000 80B5     		push	{r7, lr}
 2183              		.cfi_def_cfa_offset 8
 2184              		.cfi_offset 7, -8
 2185              		.cfi_offset 14, -4
 2186 0002 00AF     		add	r7, sp, #0
 2187              		.cfi_def_cfa_register 7
 695:assembly_test.c **** #ifdef TX_ENABLE
 696:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
 2188              		.loc 1 696 0
 2189 0004 2F4B     		ldr	r3, .L121
 2190 0006 1B68     		ldr	r3, [r3]
 2191 0008 002B     		cmp	r3, #0
 2192 000a 1AD1     		bne	.L115
ARM GAS  /tmp/cc74qjbb.s 			page 51


 697:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 2193              		.loc 1 697 0
 2194 000c 0D20     		movs	r0, #13
 2195 000e 47F6FF71 		movw	r1, #32767
 2196 0012 FFF7FEFF 		bl	cc2400_set
 698:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 2197              		.loc 1 698 0
 2198 0016 1220     		movs	r0, #18
 2199 0018 42F62231 		movw	r1, #11042
 2200 001c FFF7FEFF 		bl	cc2400_set
 699:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 2201              		.loc 1 699 0
 2202 0020 1420     		movs	r0, #20
 2203 0022 43F24B31 		movw	r1, #13131
 2204 0026 FFF7FEFF 		bl	cc2400_set
 700:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 2205              		.loc 1 700 0
 2206 002a 274B     		ldr	r3, .L121+4
 2207 002c 1B88     		ldrh	r3, [r3]	@ movhi
 2208 002e 9BB2     		uxth	r3, r3
 2209 0030 0220     		movs	r0, #2
 2210 0032 1946     		mov	r1, r3
 2211 0034 FFF7FEFF 		bl	cc2400_set
 701:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 2212              		.loc 1 701 0
 2213 0038 0320     		movs	r0, #3
 2214 003a 2921     		movs	r1, #41
 2215 003c FFF7FEFF 		bl	cc2400_set
 2216 0040 1FE0     		b	.L116
 2217              	.L115:
 702:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 2218              		.loc 1 702 0
 2219 0042 204B     		ldr	r3, .L121
 2220 0044 1B68     		ldr	r3, [r3]
 2221 0046 012B     		cmp	r3, #1
 2222 0048 1AD1     		bne	.L117
 703:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 2223              		.loc 1 703 0
 2224 004a 0D20     		movs	r0, #13
 2225 004c 47F6FF71 		movw	r1, #32767
 2226 0050 FFF7FEFF 		bl	cc2400_set
 704:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 2227              		.loc 1 704 0
 2228 0054 1220     		movs	r0, #18
 2229 0056 42F62231 		movw	r1, #11042
 2230 005a FFF7FEFF 		bl	cc2400_set
 705:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 2231              		.loc 1 705 0
 2232 005e 1420     		movs	r0, #20
 2233 0060 43F24B31 		movw	r1, #13131
 2234 0064 FFF7FEFF 		bl	cc2400_set
 706:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 2235              		.loc 1 706 0
 2236 0068 174B     		ldr	r3, .L121+4
 2237 006a 1B88     		ldrh	r3, [r3]	@ movhi
 2238 006c 9BB2     		uxth	r3, r3
 2239 006e 0220     		movs	r0, #2
ARM GAS  /tmp/cc74qjbb.s 			page 52


 2240 0070 1946     		mov	r1, r3
 2241 0072 FFF7FEFF 		bl	cc2400_set
 707:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 2242              		.loc 1 707 0
 2243 0076 0320     		movs	r0, #3
 2244 0078 4021     		movs	r1, #64
 2245 007a FFF7FEFF 		bl	cc2400_set
 2246 007e 00E0     		b	.L116
 2247              	.L117:
 708:assembly_test.c **** 	} else {
 709:assembly_test.c **** 		/* oops */
 710:assembly_test.c **** 		return;
 2248              		.loc 1 710 0
 2249 0080 1FE0     		b	.L114
 2250              	.L116:
 711:assembly_test.c **** 	}
 712:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2251              		.loc 1 712 0
 2252 0082 00BF     		nop
 2253              	.L119:
 2254              		.loc 1 712 0 is_stmt 0 discriminator 1
 2255 0084 FFF7FEFF 		bl	cc2400_status
 2256 0088 0346     		mov	r3, r0
 2257 008a 03F04003 		and	r3, r3, #64
 2258 008e 002B     		cmp	r3, #0
 2259 0090 F8D0     		beq	.L119
 713:assembly_test.c **** 	cc2400_strobe(SFSON);
 2260              		.loc 1 713 0 is_stmt 1
 2261 0092 6120     		movs	r0, #97
 2262 0094 FFF7FEFF 		bl	cc2400_strobe
 714:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 2263              		.loc 1 714 0
 2264 0098 00BF     		nop
 2265              	.L120:
 2266              		.loc 1 714 0 is_stmt 0 discriminator 1
 2267 009a FFF7FEFF 		bl	cc2400_status
 2268 009e 0346     		mov	r3, r0
 2269 00a0 03F00403 		and	r3, r3, #4
 2270 00a4 002B     		cmp	r3, #0
 2271 00a6 F8D0     		beq	.L120
 715:assembly_test.c **** 	TXLED_SET;
 2272              		.loc 1 715 0 is_stmt 1
 2273 00a8 084B     		ldr	r3, .L121+8
 2274 00aa 4FF48072 		mov	r2, #256
 2275 00ae 1A60     		str	r2, [r3]
 716:assembly_test.c **** 	cc2400_strobe(STX);
 2276              		.loc 1 716 0
 2277 00b0 6320     		movs	r0, #99
 2278 00b2 FFF7FEFF 		bl	cc2400_strobe
 717:assembly_test.c **** #ifdef UBERTOOTH_ONE
 718:assembly_test.c **** 	PAEN_SET;
 2279              		.loc 1 718 0
 2280 00b6 064B     		ldr	r3, .L121+12
 2281 00b8 8022     		movs	r2, #128
 2282 00ba 1A60     		str	r2, [r3]
 719:assembly_test.c **** #endif
 720:assembly_test.c **** 	mode = MODE_TX_TEST;
ARM GAS  /tmp/cc74qjbb.s 			page 53


 2283              		.loc 1 720 0
 2284 00bc 054B     		ldr	r3, .L121+16
 2285 00be 0322     		movs	r2, #3
 2286 00c0 1A60     		str	r2, [r3]
 2287              	.L114:
 721:assembly_test.c **** #endif
 722:assembly_test.c **** }
 2288              		.loc 1 722 0
 2289 00c2 80BD     		pop	{r7, pc}
 2290              	.L122:
 2291              		.align	2
 2292              	.L121:
 2293 00c4 00000000 		.word	modulation
 2294 00c8 00000000 		.word	channel
 2295 00cc 38C00920 		.word	537509944
 2296 00d0 58C00920 		.word	537509976
 2297 00d4 00000000 		.word	mode
 2298              		.cfi_endproc
 2299              	.LFE13:
 2301              		.section	.text.cc2400_rangetest,"ax",%progbits
 2302              		.align	2
 2303              		.global	cc2400_rangetest
 2304              		.thumb
 2305              		.thumb_func
 2307              	cc2400_rangetest:
 2308              	.LFB14:
 723:assembly_test.c **** 
 724:assembly_test.c **** /*
 725:assembly_test.c ****  * This range test transmits a Bluetooth-like (but not Bluetooth compatible)
 726:assembly_test.c ****  * packet to a repeater and then receives the repeated packet.  It is only
 727:assembly_test.c ****  * useful if another device is running cc2400_repeater() some distance away.
 728:assembly_test.c ****  *
 729:assembly_test.c ****  * The outgoing packet is transmitted at each power amplifier (PA) level from
 730:assembly_test.c ****  * lowest to highest.  It is sent several times at each level.  The repeater
 731:assembly_test.c ****  * takes the first packet to be received correctly and repeats it in a similar
 732:assembly_test.c ****  * manner.  The result should indicate the lowest successful PA level in each
 733:assembly_test.c ****  * direction.
 734:assembly_test.c ****  *
 735:assembly_test.c ****  * The range test packet consists of:
 736:assembly_test.c ****  *   preamble: 4 bytes
 737:assembly_test.c ****  *   sync word: 4 bytes
 738:assembly_test.c ****  *   payload:
 739:assembly_test.c ****  *     length: 1 byte (21)
 740:assembly_test.c ****  *     packet type: 1 byte (0 = request; 1 = reply)
 741:assembly_test.c ****  *     LPC17xx serial number: 16 bytes
 742:assembly_test.c ****  *     request pa: 1 byte
 743:assembly_test.c ****  *     request number: 1 byte
 744:assembly_test.c ****  *     reply pa: 1 byte
 745:assembly_test.c ****  *     reply number: 1 byte
 746:assembly_test.c ****  *   crc: 2 bytes
 747:assembly_test.c ****  */
 748:assembly_test.c **** 
 749:assembly_test.c **** void cc2400_rangetest()
 750:assembly_test.c **** {
 2309              		.loc 1 750 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /tmp/cc74qjbb.s 			page 54


 2312              		@ frame_needed = 1, uses_anonymous_args = 0
 2313 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2314              		.cfi_def_cfa_offset 36
 2315              		.cfi_offset 4, -36
 2316              		.cfi_offset 5, -32
 2317              		.cfi_offset 6, -28
 2318              		.cfi_offset 7, -24
 2319              		.cfi_offset 8, -20
 2320              		.cfi_offset 9, -16
 2321              		.cfi_offset 10, -12
 2322              		.cfi_offset 11, -8
 2323              		.cfi_offset 14, -4
 2324 0004 95B0     		sub	sp, sp, #84
 2325              		.cfi_def_cfa_offset 120
 2326 0006 00AF     		add	r7, sp, #0
 2327              		.cfi_def_cfa_register 7
 2328 0008 6E46     		mov	r6, sp
 2329 000a 7E60     		str	r6, [r7, #4]
 751:assembly_test.c **** #ifdef TX_ENABLE
 752:assembly_test.c **** 	u32 command[5];
 753:assembly_test.c **** 	u32 result[5];
 754:assembly_test.c **** 	int i;
 755:assembly_test.c **** 	int j;
 756:assembly_test.c **** 	u8 len = 22;
 2330              		.loc 1 756 0
 2331 000c 1626     		movs	r6, #22
 2332 000e 87F84660 		strb	r6, [r7, #70]
 757:assembly_test.c **** 	u8 pa = 0;
 2333              		.loc 1 757 0
 2334 0012 0026     		movs	r6, #0
 2335 0014 87F84760 		strb	r6, [r7, #71]
 758:assembly_test.c **** 	u8 txbuf[len];
 2336              		.loc 1 758 0
 2337 0018 97F84660 		ldrb	r6, [r7, #70]	@ zero_extendqisi2
 2338 001c B646     		mov	lr, r6
 2339 001e 0EF1FF3E 		add	lr, lr, #-1
 2340 0022 C7F840E0 		str	lr, [r7, #64]
 2341 0026 5FFA86FA 		uxtb	r10, r6
 2342 002a 4FF0000B 		mov	fp, #0
 2343 002e 4FEACB09 		lsl	r9, fp, #3
 2344 0032 49EA5A79 		orr	r9, r9, r10, lsr #29
 2345 0036 4FEACA08 		lsl	r8, r10, #3
 2346 003a 5FFA86F8 		uxtb	r8, r6
 2347 003e 4FF00009 		mov	r9, #0
 2348 0042 4FEAC905 		lsl	r5, r9, #3
 2349 0046 45EA5875 		orr	r5, r5, r8, lsr #29
 2350 004a 4FEAC804 		lsl	r4, r8, #3
 2351 004e 3446     		mov	r4, r6
 2352 0050 0734     		adds	r4, r4, #7
 2353 0052 E408     		lsrs	r4, r4, #3
 2354 0054 E400     		lsls	r4, r4, #3
 2355 0056 ADEB040D 		sub	sp, sp, r4
 2356 005a 6C46     		mov	r4, sp
 2357 005c 0034     		adds	r4, r4, #0
 2358 005e FC63     		str	r4, [r7, #60]
 759:assembly_test.c **** 	u8 rxbuf[len];
 2359              		.loc 1 759 0
ARM GAS  /tmp/cc74qjbb.s 			page 55


 2360 0060 97F84660 		ldrb	r6, [r7, #70]	@ zero_extendqisi2
 2361 0064 3446     		mov	r4, r6
 2362 0066 013C     		subs	r4, r4, #1
 2363 0068 BC63     		str	r4, [r7, #56]
 2364 006a F4B2     		uxtb	r4, r6
 2365 006c 4FF00005 		mov	r5, #0
 2366 0070 E900     		lsls	r1, r5, #3
 2367 0072 41EA5471 		orr	r1, r1, r4, lsr #29
 2368 0076 E000     		lsls	r0, r4, #3
 2369 0078 F0B2     		uxtb	r0, r6
 2370 007a 4FF00001 		mov	r1, #0
 2371 007e CB00     		lsls	r3, r1, #3
 2372 0080 43EA5073 		orr	r3, r3, r0, lsr #29
 2373 0084 C200     		lsls	r2, r0, #3
 2374 0086 3346     		mov	r3, r6
 2375 0088 0733     		adds	r3, r3, #7
 2376 008a DB08     		lsrs	r3, r3, #3
 2377 008c DB00     		lsls	r3, r3, #3
 2378 008e ADEB030D 		sub	sp, sp, r3
 2379 0092 6B46     		mov	r3, sp
 2380 0094 0033     		adds	r3, r3, #0
 2381 0096 7B63     		str	r3, [r7, #52]
 760:assembly_test.c **** 
 761:assembly_test.c **** 	mode = MODE_RANGE_TEST;
 2382              		.loc 1 761 0
 2383 0098 BA4B     		ldr	r3, .L154
 2384 009a 0522     		movs	r2, #5
 2385 009c 1A60     		str	r2, [r3]
 762:assembly_test.c **** 
 763:assembly_test.c **** 	txbuf[0] = len - 1; // length of data (rest of payload)
 2386              		.loc 1 763 0
 2387 009e 97F84630 		ldrb	r3, [r7, #70]
 2388 00a2 013B     		subs	r3, r3, #1
 2389 00a4 DAB2     		uxtb	r2, r3
 2390 00a6 FB6B     		ldr	r3, [r7, #60]
 2391 00a8 1A70     		strb	r2, [r3]
 764:assembly_test.c **** 	txbuf[1] = 0; // request
 2392              		.loc 1 764 0
 2393 00aa FB6B     		ldr	r3, [r7, #60]
 2394 00ac 0022     		movs	r2, #0
 2395 00ae 5A70     		strb	r2, [r3, #1]
 765:assembly_test.c **** 
 766:assembly_test.c **** 	// read device serial number
 767:assembly_test.c **** 	command[0] = 58;
 2396              		.loc 1 767 0
 2397 00b0 3A23     		movs	r3, #58
 2398 00b2 3B62     		str	r3, [r7, #32]
 768:assembly_test.c **** 	iap_entry(command, result);
 2399              		.loc 1 768 0
 2400 00b4 B44B     		ldr	r3, .L154+4
 2401 00b6 1B68     		ldr	r3, [r3]
 2402 00b8 07F12001 		add	r1, r7, #32
 2403 00bc 07F10C02 		add	r2, r7, #12
 2404 00c0 0846     		mov	r0, r1
 2405 00c2 1146     		mov	r1, r2
 2406 00c4 9847     		blx	r3
 769:assembly_test.c **** 	if ((result[0] & 0xFF) != 0) //status check
ARM GAS  /tmp/cc74qjbb.s 			page 56


 2407              		.loc 1 769 0
 2408 00c6 FB68     		ldr	r3, [r7, #12]
 2409 00c8 DBB2     		uxtb	r3, r3
 2410 00ca 002B     		cmp	r3, #0
 2411 00cc 01D0     		beq	.L124
 2412 00ce 0023     		movs	r3, #0
 770:assembly_test.c **** 		return;
 2413              		.loc 1 770 0
 2414 00d0 B7E1     		b	.L125
 2415              	.L124:
 771:assembly_test.c **** 	txbuf[2] = (result[1] >> 24) & 0xFF;
 2416              		.loc 1 771 0
 2417 00d2 3B69     		ldr	r3, [r7, #16]
 2418 00d4 1B0E     		lsrs	r3, r3, #24
 2419 00d6 DAB2     		uxtb	r2, r3
 2420 00d8 FB6B     		ldr	r3, [r7, #60]
 2421 00da 9A70     		strb	r2, [r3, #2]
 772:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 2422              		.loc 1 772 0
 2423 00dc 3B69     		ldr	r3, [r7, #16]
 2424 00de 1B0C     		lsrs	r3, r3, #16
 2425 00e0 DAB2     		uxtb	r2, r3
 2426 00e2 FB6B     		ldr	r3, [r7, #60]
 2427 00e4 DA70     		strb	r2, [r3, #3]
 773:assembly_test.c **** 	txbuf[4] = (result[1] >> 8) & 0xFF;
 2428              		.loc 1 773 0
 2429 00e6 3B69     		ldr	r3, [r7, #16]
 2430 00e8 1B0A     		lsrs	r3, r3, #8
 2431 00ea DAB2     		uxtb	r2, r3
 2432 00ec FB6B     		ldr	r3, [r7, #60]
 2433 00ee 1A71     		strb	r2, [r3, #4]
 774:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 2434              		.loc 1 774 0
 2435 00f0 3B69     		ldr	r3, [r7, #16]
 2436 00f2 DAB2     		uxtb	r2, r3
 2437 00f4 FB6B     		ldr	r3, [r7, #60]
 2438 00f6 5A71     		strb	r2, [r3, #5]
 775:assembly_test.c **** 	txbuf[6] = (result[2] >> 24) & 0xFF;
 2439              		.loc 1 775 0
 2440 00f8 7B69     		ldr	r3, [r7, #20]
 2441 00fa 1B0E     		lsrs	r3, r3, #24
 2442 00fc DAB2     		uxtb	r2, r3
 2443 00fe FB6B     		ldr	r3, [r7, #60]
 2444 0100 9A71     		strb	r2, [r3, #6]
 776:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 2445              		.loc 1 776 0
 2446 0102 7B69     		ldr	r3, [r7, #20]
 2447 0104 1B0C     		lsrs	r3, r3, #16
 2448 0106 DAB2     		uxtb	r2, r3
 2449 0108 FB6B     		ldr	r3, [r7, #60]
 2450 010a DA71     		strb	r2, [r3, #7]
 777:assembly_test.c **** 	txbuf[8] = (result[2] >> 8) & 0xFF;
 2451              		.loc 1 777 0
 2452 010c 7B69     		ldr	r3, [r7, #20]
 2453 010e 1B0A     		lsrs	r3, r3, #8
 2454 0110 DAB2     		uxtb	r2, r3
 2455 0112 FB6B     		ldr	r3, [r7, #60]
ARM GAS  /tmp/cc74qjbb.s 			page 57


 2456 0114 1A72     		strb	r2, [r3, #8]
 778:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 2457              		.loc 1 778 0
 2458 0116 7B69     		ldr	r3, [r7, #20]
 2459 0118 DAB2     		uxtb	r2, r3
 2460 011a FB6B     		ldr	r3, [r7, #60]
 2461 011c 5A72     		strb	r2, [r3, #9]
 779:assembly_test.c **** 	txbuf[10] = (result[3] >> 24) & 0xFF;
 2462              		.loc 1 779 0
 2463 011e BB69     		ldr	r3, [r7, #24]
 2464 0120 1B0E     		lsrs	r3, r3, #24
 2465 0122 DAB2     		uxtb	r2, r3
 2466 0124 FB6B     		ldr	r3, [r7, #60]
 2467 0126 9A72     		strb	r2, [r3, #10]
 780:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 2468              		.loc 1 780 0
 2469 0128 BB69     		ldr	r3, [r7, #24]
 2470 012a 1B0C     		lsrs	r3, r3, #16
 2471 012c DAB2     		uxtb	r2, r3
 2472 012e FB6B     		ldr	r3, [r7, #60]
 2473 0130 DA72     		strb	r2, [r3, #11]
 781:assembly_test.c **** 	txbuf[12] = (result[3] >> 8) & 0xFF;
 2474              		.loc 1 781 0
 2475 0132 BB69     		ldr	r3, [r7, #24]
 2476 0134 1B0A     		lsrs	r3, r3, #8
 2477 0136 DAB2     		uxtb	r2, r3
 2478 0138 FB6B     		ldr	r3, [r7, #60]
 2479 013a 1A73     		strb	r2, [r3, #12]
 782:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 2480              		.loc 1 782 0
 2481 013c BB69     		ldr	r3, [r7, #24]
 2482 013e DAB2     		uxtb	r2, r3
 2483 0140 FB6B     		ldr	r3, [r7, #60]
 2484 0142 5A73     		strb	r2, [r3, #13]
 783:assembly_test.c **** 	txbuf[14] = (result[4] >> 24) & 0xFF;
 2485              		.loc 1 783 0
 2486 0144 FB69     		ldr	r3, [r7, #28]
 2487 0146 1B0E     		lsrs	r3, r3, #24
 2488 0148 DAB2     		uxtb	r2, r3
 2489 014a FB6B     		ldr	r3, [r7, #60]
 2490 014c 9A73     		strb	r2, [r3, #14]
 784:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 2491              		.loc 1 784 0
 2492 014e FB69     		ldr	r3, [r7, #28]
 2493 0150 1B0C     		lsrs	r3, r3, #16
 2494 0152 DAB2     		uxtb	r2, r3
 2495 0154 FB6B     		ldr	r3, [r7, #60]
 2496 0156 DA73     		strb	r2, [r3, #15]
 785:assembly_test.c **** 	txbuf[16] = (result[4] >> 8) & 0xFF;
 2497              		.loc 1 785 0
 2498 0158 FB69     		ldr	r3, [r7, #28]
 2499 015a 1B0A     		lsrs	r3, r3, #8
 2500 015c DAB2     		uxtb	r2, r3
 2501 015e FB6B     		ldr	r3, [r7, #60]
 2502 0160 1A74     		strb	r2, [r3, #16]
 786:assembly_test.c **** 	txbuf[17] = result[4] & 0xFF;
 2503              		.loc 1 786 0
ARM GAS  /tmp/cc74qjbb.s 			page 58


 2504 0162 FB69     		ldr	r3, [r7, #28]
 2505 0164 DAB2     		uxtb	r2, r3
 2506 0166 FB6B     		ldr	r3, [r7, #60]
 2507 0168 5A74     		strb	r2, [r3, #17]
 787:assembly_test.c **** 
 788:assembly_test.c **** 	txbuf[18] = pa; // request pa
 2508              		.loc 1 788 0
 2509 016a FB6B     		ldr	r3, [r7, #60]
 2510 016c 97F84720 		ldrb	r2, [r7, #71]
 2511 0170 9A74     		strb	r2, [r3, #18]
 789:assembly_test.c **** 	txbuf[19] = 0; // request number
 2512              		.loc 1 789 0
 2513 0172 FB6B     		ldr	r3, [r7, #60]
 2514 0174 0022     		movs	r2, #0
 2515 0176 DA74     		strb	r2, [r3, #19]
 790:assembly_test.c **** 	txbuf[20] = 0xff; // reply pa
 2516              		.loc 1 790 0
 2517 0178 FB6B     		ldr	r3, [r7, #60]
 2518 017a FF22     		movs	r2, #255
 2519 017c 1A75     		strb	r2, [r3, #20]
 791:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 2520              		.loc 1 791 0
 2521 017e FB6B     		ldr	r3, [r7, #60]
 2522 0180 FF22     		movs	r2, #255
 2523 0182 5A75     		strb	r2, [r3, #21]
 792:assembly_test.c **** 
 793:assembly_test.c **** 	// Bluetooth-like modulation
 794:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 2524              		.loc 1 794 0
 2525 0184 0D20     		movs	r0, #13
 2526 0186 47F6FF71 		movw	r1, #32767
 2527 018a FFF7FEFF 		bl	cc2400_set
 795:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 2528              		.loc 1 795 0
 2529 018e 1220     		movs	r0, #18
 2530 0190 42F62231 		movw	r1, #11042
 2531 0194 FFF7FEFF 		bl	cc2400_set
 796:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b);
 2532              		.loc 1 796 0
 2533 0198 1420     		movs	r0, #20
 2534 019a 41F24B31 		movw	r1, #4939
 2535 019e FFF7FEFF 		bl	cc2400_set
 797:assembly_test.c **** 	cc2400_set(FSDIV,   channel);
 2536              		.loc 1 797 0
 2537 01a2 7A4B     		ldr	r3, .L154+8
 2538 01a4 1B88     		ldrh	r3, [r3]	@ movhi
 2539 01a6 9BB2     		uxth	r3, r3
 2540 01a8 0220     		movs	r0, #2
 2541 01aa 1946     		mov	r1, r3
 2542 01ac FFF7FEFF 		bl	cc2400_set
 798:assembly_test.c **** 	cc2400_set(SYNCH,   0xf9ae);
 2543              		.loc 1 798 0
 2544 01b0 2D20     		movs	r0, #45
 2545 01b2 4FF6AE11 		movw	r1, #63918
 2546 01b6 FFF7FEFF 		bl	cc2400_set
 799:assembly_test.c **** 	cc2400_set(SYNCL,   0x1584);
 2547              		.loc 1 799 0
ARM GAS  /tmp/cc74qjbb.s 			page 59


 2548 01ba 2C20     		movs	r0, #44
 2549 01bc 41F28451 		movw	r1, #5508
 2550 01c0 FFF7FEFF 		bl	cc2400_set
 800:assembly_test.c **** 	cc2400_set(FREND,   8 | pa);
 2551              		.loc 1 800 0
 2552 01c4 97F84730 		ldrb	r3, [r7, #71]
 2553 01c8 43F00803 		orr	r3, r3, #8
 2554 01cc DBB2     		uxtb	r3, r3
 2555 01ce 9BB2     		uxth	r3, r3
 2556 01d0 0520     		movs	r0, #5
 2557 01d2 1946     		mov	r1, r3
 2558 01d4 FFF7FEFF 		bl	cc2400_set
 801:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029);
 2559              		.loc 1 801 0
 2560 01d8 0320     		movs	r0, #3
 2561 01da 2921     		movs	r1, #41
 2562 01dc FFF7FEFF 		bl	cc2400_set
 802:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2563              		.loc 1 802 0
 2564 01e0 00BF     		nop
 2565              	.L126:
 2566              		.loc 1 802 0 is_stmt 0 discriminator 1
 2567 01e2 FFF7FEFF 		bl	cc2400_status
 2568 01e6 0346     		mov	r3, r0
 2569 01e8 03F04003 		and	r3, r3, #64
 2570 01ec 002B     		cmp	r3, #0
 2571 01ee F8D0     		beq	.L126
 803:assembly_test.c **** 	cc2400_strobe(SFSON);
 2572              		.loc 1 803 0 is_stmt 1
 2573 01f0 6120     		movs	r0, #97
 2574 01f2 FFF7FEFF 		bl	cc2400_strobe
 804:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 2575              		.loc 1 804 0
 2576 01f6 00BF     		nop
 2577              	.L127:
 2578              		.loc 1 804 0 is_stmt 0 discriminator 1
 2579 01f8 FFF7FEFF 		bl	cc2400_status
 2580 01fc 0346     		mov	r3, r0
 2581 01fe 03F00403 		and	r3, r3, #4
 2582 0202 002B     		cmp	r3, #0
 2583 0204 F8D0     		beq	.L127
 805:assembly_test.c **** 	TXLED_SET;
 2584              		.loc 1 805 0 is_stmt 1
 2585 0206 624B     		ldr	r3, .L154+12
 2586 0208 4FF48072 		mov	r2, #256
 2587 020c 1A60     		str	r2, [r3]
 806:assembly_test.c **** #ifdef UBERTOOTH_ONE
 807:assembly_test.c **** 	PAEN_SET;
 2588              		.loc 1 807 0
 2589 020e 614B     		ldr	r3, .L154+16
 2590 0210 8022     		movs	r2, #128
 2591 0212 1A60     		str	r2, [r3]
 808:assembly_test.c **** #endif
 809:assembly_test.c **** 	for (pa = 0; pa < 8; pa++) {
 2592              		.loc 1 809 0
 2593 0214 0023     		movs	r3, #0
 2594 0216 87F84730 		strb	r3, [r7, #71]
ARM GAS  /tmp/cc74qjbb.s 			page 60


 2595 021a 3EE0     		b	.L128
 2596              	.L134:
 810:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 2597              		.loc 1 810 0
 2598 021c 97F84730 		ldrb	r3, [r7, #71]
 2599 0220 43F00803 		orr	r3, r3, #8
 2600 0224 DBB2     		uxtb	r3, r3
 2601 0226 9BB2     		uxth	r3, r3
 2602 0228 0520     		movs	r0, #5
 2603 022a 1946     		mov	r1, r3
 2604 022c FFF7FEFF 		bl	cc2400_set
 811:assembly_test.c **** 		txbuf[18] = pa;
 2605              		.loc 1 811 0
 2606 0230 FB6B     		ldr	r3, [r7, #60]
 2607 0232 97F84720 		ldrb	r2, [r7, #71]
 2608 0236 9A74     		strb	r2, [r3, #18]
 812:assembly_test.c **** 		for (i = 0; i < 16; i++) {
 2609              		.loc 1 812 0
 2610 0238 0023     		movs	r3, #0
 2611 023a FB64     		str	r3, [r7, #76]
 2612 023c 25E0     		b	.L129
 2613              	.L133:
 813:assembly_test.c **** 			txbuf[19] = i;
 2614              		.loc 1 813 0
 2615 023e FB6C     		ldr	r3, [r7, #76]
 2616 0240 DAB2     		uxtb	r2, r3
 2617 0242 FB6B     		ldr	r3, [r7, #60]
 2618 0244 DA74     		strb	r2, [r3, #19]
 814:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 2619              		.loc 1 814 0
 2620 0246 00BF     		nop
 2621              	.L130:
 2622              		.loc 1 814 0 is_stmt 0 discriminator 1
 2623 0248 0E20     		movs	r0, #14
 2624 024a FFF7FEFF 		bl	cc2400_get
 2625 024e 0346     		mov	r3, r0
 2626 0250 03F01F03 		and	r3, r3, #31
 2627 0254 0F2B     		cmp	r3, #15
 2628 0256 F7D1     		bne	.L130
 815:assembly_test.c **** 			// transmit a packet
 816:assembly_test.c **** 			for (j = 0; j < len; j++)
 2629              		.loc 1 816 0 is_stmt 1
 2630 0258 0023     		movs	r3, #0
 2631 025a BB64     		str	r3, [r7, #72]
 2632 025c 0AE0     		b	.L131
 2633              	.L132:
 817:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 2634              		.loc 1 817 0 discriminator 3
 2635 025e FA6B     		ldr	r2, [r7, #60]
 2636 0260 BB6C     		ldr	r3, [r7, #72]
 2637 0262 1344     		add	r3, r3, r2
 2638 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2639 0266 7020     		movs	r0, #112
 2640 0268 1946     		mov	r1, r3
 2641 026a FFF7FEFF 		bl	cc2400_set8
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 2642              		.loc 1 816 0 discriminator 3
ARM GAS  /tmp/cc74qjbb.s 			page 61


 2643 026e BB6C     		ldr	r3, [r7, #72]
 2644 0270 0133     		adds	r3, r3, #1
 2645 0272 BB64     		str	r3, [r7, #72]
 2646              	.L131:
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 2647              		.loc 1 816 0 is_stmt 0 discriminator 1
 2648 0274 97F84620 		ldrb	r2, [r7, #70]	@ zero_extendqisi2
 2649 0278 BB6C     		ldr	r3, [r7, #72]
 2650 027a 9A42     		cmp	r2, r3
 2651 027c EFDC     		bgt	.L132
 818:assembly_test.c **** 			cc2400_strobe(STX);
 2652              		.loc 1 818 0 is_stmt 1 discriminator 2
 2653 027e 6320     		movs	r0, #99
 2654 0280 FFF7FEFF 		bl	cc2400_strobe
 812:assembly_test.c **** 			txbuf[19] = i;
 2655              		.loc 1 812 0 discriminator 2
 2656 0284 FB6C     		ldr	r3, [r7, #76]
 2657 0286 0133     		adds	r3, r3, #1
 2658 0288 FB64     		str	r3, [r7, #76]
 2659              	.L129:
 812:assembly_test.c **** 			txbuf[19] = i;
 2660              		.loc 1 812 0 is_stmt 0 discriminator 1
 2661 028a FB6C     		ldr	r3, [r7, #76]
 2662 028c 0F2B     		cmp	r3, #15
 2663 028e D6DD     		ble	.L133
 809:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 2664              		.loc 1 809 0 is_stmt 1 discriminator 2
 2665 0290 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2666 0294 0133     		adds	r3, r3, #1
 2667 0296 87F84730 		strb	r3, [r7, #71]
 2668              	.L128:
 809:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 2669              		.loc 1 809 0 is_stmt 0 discriminator 1
 2670 029a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2671 029e 072B     		cmp	r3, #7
 2672 02a0 BCD9     		bls	.L134
 819:assembly_test.c **** 		}
 820:assembly_test.c **** 	}
 821:assembly_test.c **** 	// sent packet, now look for repeated packet
 822:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 2673              		.loc 1 822 0 is_stmt 1
 2674 02a2 00BF     		nop
 2675              	.L135:
 2676              		.loc 1 822 0 is_stmt 0 discriminator 1
 2677 02a4 0E20     		movs	r0, #14
 2678 02a6 FFF7FEFF 		bl	cc2400_get
 2679 02aa 0346     		mov	r3, r0
 2680 02ac 03F01F03 		and	r3, r3, #31
 2681 02b0 0F2B     		cmp	r3, #15
 2682 02b2 F7D1     		bne	.L135
 823:assembly_test.c **** 	TXLED_CLR;
 2683              		.loc 1 823 0 is_stmt 1
 2684 02b4 384B     		ldr	r3, .L154+20
 2685 02b6 4FF48072 		mov	r2, #256
 2686 02ba 1A60     		str	r2, [r3]
 824:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 2687              		.loc 1 824 0
ARM GAS  /tmp/cc74qjbb.s 			page 62


 2688 02bc 6420     		movs	r0, #100
 2689 02be FFF7FEFF 		bl	cc2400_strobe
 825:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 2690              		.loc 1 825 0
 2691 02c2 00BF     		nop
 2692              	.L136:
 2693              		.loc 1 825 0 is_stmt 0 discriminator 1
 2694 02c4 FFF7FEFF 		bl	cc2400_status
 2695 02c8 0346     		mov	r3, r0
 2696 02ca 03F00403 		and	r3, r3, #4
 2697 02ce 002B     		cmp	r3, #0
 2698 02d0 F8D1     		bne	.L136
 826:assembly_test.c **** 	cc2400_set(FSDIV, channel - 1);
 2699              		.loc 1 826 0 is_stmt 1
 2700 02d2 2E4B     		ldr	r3, .L154+8
 2701 02d4 1B88     		ldrh	r3, [r3]	@ movhi
 2702 02d6 9BB2     		uxth	r3, r3
 2703 02d8 013B     		subs	r3, r3, #1
 2704 02da 9BB2     		uxth	r3, r3
 2705 02dc 0220     		movs	r0, #2
 2706 02de 1946     		mov	r1, r3
 2707 02e0 FFF7FEFF 		bl	cc2400_set
 827:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2708              		.loc 1 827 0
 2709 02e4 00BF     		nop
 2710              	.L137:
 2711              		.loc 1 827 0 is_stmt 0 discriminator 1
 2712 02e6 FFF7FEFF 		bl	cc2400_status
 2713 02ea 0346     		mov	r3, r0
 2714 02ec 03F04003 		and	r3, r3, #64
 2715 02f0 002B     		cmp	r3, #0
 2716 02f2 F8D0     		beq	.L137
 828:assembly_test.c **** 	cc2400_strobe(SFSON);
 2717              		.loc 1 828 0 is_stmt 1
 2718 02f4 6120     		movs	r0, #97
 2719 02f6 FFF7FEFF 		bl	cc2400_strobe
 829:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 2720              		.loc 1 829 0
 2721 02fa 00BF     		nop
 2722              	.L138:
 2723              		.loc 1 829 0 is_stmt 0 discriminator 1
 2724 02fc FFF7FEFF 		bl	cc2400_status
 2725 0300 0346     		mov	r3, r0
 2726 0302 03F00403 		and	r3, r3, #4
 2727 0306 002B     		cmp	r3, #0
 2728 0308 F8D0     		beq	.L138
 830:assembly_test.c **** 	RXLED_SET;
 2729              		.loc 1 830 0 is_stmt 1
 2730 030a 214B     		ldr	r3, .L154+12
 2731 030c 1022     		movs	r2, #16
 2732 030e 1A60     		str	r2, [r3]
 2733              	.L145:
 831:assembly_test.c **** 	while (1) {
 832:assembly_test.c **** 		while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 2734              		.loc 1 832 0
 2735 0310 00BF     		nop
 2736              	.L139:
ARM GAS  /tmp/cc74qjbb.s 			page 63


 2737              		.loc 1 832 0 is_stmt 0 discriminator 1
 2738 0312 0E20     		movs	r0, #14
 2739 0314 FFF7FEFF 		bl	cc2400_get
 2740 0318 0346     		mov	r3, r0
 2741 031a 03F01F03 		and	r3, r3, #31
 2742 031e 0F2B     		cmp	r3, #15
 2743 0320 F7D1     		bne	.L139
 833:assembly_test.c **** 		cc2400_strobe(SRX);
 2744              		.loc 1 833 0 is_stmt 1
 2745 0322 6220     		movs	r0, #98
 2746 0324 FFF7FEFF 		bl	cc2400_strobe
 834:assembly_test.c **** 		while (!(cc2400_status() & SYNC_RECEIVED));
 2747              		.loc 1 834 0
 2748 0328 00BF     		nop
 2749              	.L140:
 2750              		.loc 1 834 0 is_stmt 0 discriminator 1
 2751 032a FFF7FEFF 		bl	cc2400_status
 2752 032e 0346     		mov	r3, r0
 2753 0330 03F01003 		and	r3, r3, #16
 2754 0334 002B     		cmp	r3, #0
 2755 0336 F8D0     		beq	.L140
 835:assembly_test.c **** 		USRLED_SET;
 2756              		.loc 1 835 0 is_stmt 1
 2757 0338 154B     		ldr	r3, .L154+12
 2758 033a 0222     		movs	r2, #2
 2759 033c 1A60     		str	r2, [r3]
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 2760              		.loc 1 836 0
 2761 033e 0023     		movs	r3, #0
 2762 0340 BB64     		str	r3, [r7, #72]
 2763 0342 0CE0     		b	.L141
 2764              	.L142:
 837:assembly_test.c **** 			rxbuf[j] = cc2400_get8(FIFOREG);
 2765              		.loc 1 837 0 discriminator 3
 2766 0344 7020     		movs	r0, #112
 2767 0346 FFF7FEFF 		bl	cc2400_get8
 2768 034a 0346     		mov	r3, r0
 2769 034c 1946     		mov	r1, r3
 2770 034e 7A6B     		ldr	r2, [r7, #52]
 2771 0350 BB6C     		ldr	r3, [r7, #72]
 2772 0352 1344     		add	r3, r3, r2
 2773 0354 0A46     		mov	r2, r1
 2774 0356 1A70     		strb	r2, [r3]
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 2775              		.loc 1 836 0 discriminator 3
 2776 0358 BB6C     		ldr	r3, [r7, #72]
 2777 035a 0133     		adds	r3, r3, #1
 2778 035c BB64     		str	r3, [r7, #72]
 2779              	.L141:
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 2780              		.loc 1 836 0 is_stmt 0 discriminator 1
 2781 035e 97F84620 		ldrb	r2, [r7, #70]	@ zero_extendqisi2
 2782 0362 BB6C     		ldr	r3, [r7, #72]
 2783 0364 9A42     		cmp	r2, r3
 2784 0366 EDDC     		bgt	.L142
 838:assembly_test.c **** 		if (cc2400_status() & STATUS_CRC_OK)
 2785              		.loc 1 838 0 is_stmt 1
ARM GAS  /tmp/cc74qjbb.s 			page 64


 2786 0368 FFF7FEFF 		bl	cc2400_status
 2787 036c 0346     		mov	r3, r0
 2788 036e 03F00803 		and	r3, r3, #8
 2789 0372 002B     		cmp	r3, #0
 2790 0374 01D0     		beq	.L143
 839:assembly_test.c **** 			break;
 2791              		.loc 1 839 0
 2792 0376 00BF     		nop
 840:assembly_test.c **** 		USRLED_CLR;
 841:assembly_test.c **** 	}
 842:assembly_test.c **** 
 843:assembly_test.c **** 	// done
 844:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 2793              		.loc 1 844 0
 2794 0378 10E0     		b	.L146
 2795              	.L143:
 840:assembly_test.c **** 		USRLED_CLR;
 2796              		.loc 1 840 0
 2797 037a 074B     		ldr	r3, .L154+20
 2798 037c 0222     		movs	r2, #2
 2799 037e 1A60     		str	r2, [r3]
 841:assembly_test.c **** 
 2800              		.loc 1 841 0
 2801 0380 C6E7     		b	.L145
 2802              	.L155:
 2803 0382 00BF     		.align	2
 2804              	.L154:
 2805 0384 00000000 		.word	mode
 2806 0388 00000000 		.word	iap_entry
 2807 038c 00000000 		.word	channel
 2808 0390 38C00920 		.word	537509944
 2809 0394 58C00920 		.word	537509976
 2810 0398 3CC00920 		.word	537509948
 2811              	.L146:
 2812              		.loc 1 844 0 discriminator 1
 2813 039c 0E20     		movs	r0, #14
 2814 039e FFF7FEFF 		bl	cc2400_get
 2815 03a2 0346     		mov	r3, r0
 2816 03a4 03F01F03 		and	r3, r3, #31
 2817 03a8 0F2B     		cmp	r3, #15
 2818 03aa F7D1     		bne	.L146
 845:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 2819              		.loc 1 845 0
 2820 03ac 6420     		movs	r0, #100
 2821 03ae FFF7FEFF 		bl	cc2400_strobe
 846:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 2822              		.loc 1 846 0
 2823 03b2 00BF     		nop
 2824              	.L147:
 2825              		.loc 1 846 0 is_stmt 0 discriminator 1
 2826 03b4 FFF7FEFF 		bl	cc2400_status
 2827 03b8 0346     		mov	r3, r0
 2828 03ba 03F00403 		and	r3, r3, #4
 2829 03be 002B     		cmp	r3, #0
 2830 03c0 F8D1     		bne	.L147
 847:assembly_test.c **** #ifdef UBERTOOTH_ONE
 848:assembly_test.c **** 	PAEN_CLR;
ARM GAS  /tmp/cc74qjbb.s 			page 65


 2831              		.loc 1 848 0 is_stmt 1
 2832 03c2 234B     		ldr	r3, .L156
 2833 03c4 8022     		movs	r2, #128
 2834 03c6 1A60     		str	r2, [r3]
 849:assembly_test.c **** #endif
 850:assembly_test.c **** 	RXLED_CLR;
 2835              		.loc 1 850 0
 2836 03c8 224B     		ldr	r3, .L156+4
 2837 03ca 1022     		movs	r2, #16
 2838 03cc 1A60     		str	r2, [r3]
 851:assembly_test.c **** 
 852:assembly_test.c **** 	// get test result
 853:assembly_test.c **** 	rr.valid       = 1;
 2839              		.loc 1 853 0
 2840 03ce 224B     		ldr	r3, .L156+8
 2841 03d0 0122     		movs	r2, #1
 2842 03d2 1A70     		strb	r2, [r3]
 854:assembly_test.c **** 	rr.request_pa  = rxbuf[18];
 2843              		.loc 1 854 0
 2844 03d4 7B6B     		ldr	r3, [r7, #52]
 2845 03d6 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 2846 03d8 1F4B     		ldr	r3, .L156+8
 2847 03da 5A70     		strb	r2, [r3, #1]
 855:assembly_test.c **** 	rr.request_num = rxbuf[19];
 2848              		.loc 1 855 0
 2849 03dc 7B6B     		ldr	r3, [r7, #52]
 2850 03de DA7C     		ldrb	r2, [r3, #19]	@ zero_extendqisi2
 2851 03e0 1D4B     		ldr	r3, .L156+8
 2852 03e2 9A70     		strb	r2, [r3, #2]
 856:assembly_test.c **** 	rr.reply_pa    = rxbuf[20];
 2853              		.loc 1 856 0
 2854 03e4 7B6B     		ldr	r3, [r7, #52]
 2855 03e6 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 2856 03e8 1B4B     		ldr	r3, .L156+8
 2857 03ea DA70     		strb	r2, [r3, #3]
 857:assembly_test.c **** 	rr.reply_num   = rxbuf[21];
 2858              		.loc 1 857 0
 2859 03ec 7B6B     		ldr	r3, [r7, #52]
 2860 03ee 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
 2861 03f0 194B     		ldr	r3, .L156+8
 2862 03f2 1A71     		strb	r2, [r3, #4]
 858:assembly_test.c **** 
 859:assembly_test.c **** 	// make sure rx packet is as expected
 860:assembly_test.c **** 	txbuf[1] = 1; // expected value in rxbuf
 2863              		.loc 1 860 0
 2864 03f4 FB6B     		ldr	r3, [r7, #60]
 2865 03f6 0122     		movs	r2, #1
 2866 03f8 5A70     		strb	r2, [r3, #1]
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 2867              		.loc 1 861 0
 2868 03fa 0023     		movs	r3, #0
 2869 03fc FB64     		str	r3, [r7, #76]
 2870 03fe 0FE0     		b	.L148
 2871              	.L150:
 862:assembly_test.c **** 		if (rxbuf[i] != txbuf[i])
 2872              		.loc 1 862 0
 2873 0400 7A6B     		ldr	r2, [r7, #52]
ARM GAS  /tmp/cc74qjbb.s 			page 66


 2874 0402 FB6C     		ldr	r3, [r7, #76]
 2875 0404 1344     		add	r3, r3, r2
 2876 0406 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2877 0408 F96B     		ldr	r1, [r7, #60]
 2878 040a FB6C     		ldr	r3, [r7, #76]
 2879 040c 0B44     		add	r3, r3, r1
 2880 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2881 0410 9A42     		cmp	r2, r3
 2882 0412 02D0     		beq	.L149
 863:assembly_test.c **** 			rr.valid = 0;
 2883              		.loc 1 863 0
 2884 0414 104B     		ldr	r3, .L156+8
 2885 0416 0022     		movs	r2, #0
 2886 0418 1A70     		strb	r2, [r3]
 2887              	.L149:
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 2888              		.loc 1 861 0 discriminator 2
 2889 041a FB6C     		ldr	r3, [r7, #76]
 2890 041c 0133     		adds	r3, r3, #1
 2891 041e FB64     		str	r3, [r7, #76]
 2892              	.L148:
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 2893              		.loc 1 861 0 is_stmt 0 discriminator 1
 2894 0420 FB6C     		ldr	r3, [r7, #76]
 2895 0422 112B     		cmp	r3, #17
 2896 0424 ECDD     		ble	.L150
 864:assembly_test.c **** 
 865:assembly_test.c **** 	USRLED_CLR;
 2897              		.loc 1 865 0 is_stmt 1
 2898 0426 0B4B     		ldr	r3, .L156+4
 2899 0428 0222     		movs	r2, #2
 2900 042a 1A60     		str	r2, [r3]
 866:assembly_test.c **** 	mode = MODE_IDLE;
 2901              		.loc 1 866 0
 2902 042c 0B4B     		ldr	r3, .L156+12
 2903 042e 0022     		movs	r2, #0
 2904 0430 1A60     		str	r2, [r3]
 867:assembly_test.c **** 	if (requested_mode == MODE_RANGE_TEST)
 2905              		.loc 1 867 0
 2906 0432 0B4B     		ldr	r3, .L156+16
 2907 0434 1B68     		ldr	r3, [r3]
 2908 0436 052B     		cmp	r3, #5
 2909 0438 02D1     		bne	.L151
 868:assembly_test.c **** 		requested_mode = MODE_IDLE;
 2910              		.loc 1 868 0
 2911 043a 094B     		ldr	r3, .L156+16
 2912 043c 0022     		movs	r2, #0
 2913 043e 1A60     		str	r2, [r3]
 2914              	.L151:
 2915 0440 0123     		movs	r3, #1
 2916              	.L125:
 2917 0442 D7F804D0 		ldr	sp, [r7, #4]
 2918 0446 012B     		cmp	r3, #1
 869:assembly_test.c **** #endif
 870:assembly_test.c **** }
 2919              		.loc 1 870 0
 2920 0448 5437     		adds	r7, r7, #84
ARM GAS  /tmp/cc74qjbb.s 			page 67


 2921              		.cfi_def_cfa_offset 36
 2922 044a BD46     		mov	sp, r7
 2923              		.cfi_def_cfa_register 13
 2924              		@ sp needed
 2925 044c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2926              	.L157:
 2927              		.align	2
 2928              	.L156:
 2929 0450 5CC00920 		.word	537509980
 2930 0454 3CC00920 		.word	537509948
 2931 0458 00000000 		.word	rr
 2932 045c 00000000 		.word	mode
 2933 0460 00000000 		.word	requested_mode
 2934              		.cfi_endproc
 2935              	.LFE14:
 2937              		.section	.text.cc2400_repeater,"ax",%progbits
 2938              		.align	2
 2939              		.global	cc2400_repeater
 2940              		.thumb
 2941              		.thumb_func
 2943              	cc2400_repeater:
 2944              	.LFB15:
 871:assembly_test.c **** 
 872:assembly_test.c **** /* This is the repeater implementation to be used with cc2400_rangetest(). */
 873:assembly_test.c **** void cc2400_repeater()
 874:assembly_test.c **** {
 2945              		.loc 1 874 0
 2946              		.cfi_startproc
 2947              		@ args = 0, pretend = 0, frame = 24
 2948              		@ frame_needed = 1, uses_anonymous_args = 0
 2949 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2950              		.cfi_def_cfa_offset 20
 2951              		.cfi_offset 4, -20
 2952              		.cfi_offset 5, -16
 2953              		.cfi_offset 6, -12
 2954              		.cfi_offset 7, -8
 2955              		.cfi_offset 14, -4
 2956 0002 87B0     		sub	sp, sp, #28
 2957              		.cfi_def_cfa_offset 48
 2958 0004 00AF     		add	r7, sp, #0
 2959              		.cfi_def_cfa_register 7
 875:assembly_test.c **** #ifdef TX_ENABLE
 876:assembly_test.c **** 	int i;
 877:assembly_test.c **** 	int j;
 878:assembly_test.c **** 	u8 len = 22;
 2960              		.loc 1 878 0
 2961 0006 1624     		movs	r4, #22
 2962 0008 BC73     		strb	r4, [r7, #14]
 879:assembly_test.c **** 	u8 pa = 0;
 2963              		.loc 1 879 0
 2964 000a 0024     		movs	r4, #0
 2965 000c FC73     		strb	r4, [r7, #15]
 880:assembly_test.c **** 	u8 buf[len];
 2966              		.loc 1 880 0
 2967 000e BE7B     		ldrb	r6, [r7, #14]	@ zero_extendqisi2
 2968 0010 3446     		mov	r4, r6
 2969 0012 013C     		subs	r4, r4, #1
ARM GAS  /tmp/cc74qjbb.s 			page 68


 2970 0014 BC60     		str	r4, [r7, #8]
 2971 0016 F4B2     		uxtb	r4, r6
 2972 0018 4FF00005 		mov	r5, #0
 2973 001c E900     		lsls	r1, r5, #3
 2974 001e 41EA5471 		orr	r1, r1, r4, lsr #29
 2975 0022 E000     		lsls	r0, r4, #3
 2976 0024 F0B2     		uxtb	r0, r6
 2977 0026 4FF00001 		mov	r1, #0
 2978 002a CB00     		lsls	r3, r1, #3
 2979 002c 43EA5073 		orr	r3, r3, r0, lsr #29
 2980 0030 C200     		lsls	r2, r0, #3
 2981 0032 3346     		mov	r3, r6
 2982 0034 0733     		adds	r3, r3, #7
 2983 0036 DB08     		lsrs	r3, r3, #3
 2984 0038 DB00     		lsls	r3, r3, #3
 2985 003a ADEB030D 		sub	sp, sp, r3
 2986 003e 6B46     		mov	r3, sp
 2987 0040 0033     		adds	r3, r3, #0
 2988 0042 7B60     		str	r3, [r7, #4]
 881:assembly_test.c **** 
 882:assembly_test.c **** 	mode = MODE_REPEATER;
 2989              		.loc 1 882 0
 2990 0044 894B     		ldr	r3, .L181
 2991 0046 0622     		movs	r2, #6
 2992 0048 1A60     		str	r2, [r3]
 2993              	.L180:
 883:assembly_test.c **** 
 884:assembly_test.c **** 	//FIXME allow to be turned off
 885:assembly_test.c **** 	while (1) {
 886:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 2994              		.loc 1 886 0
 2995 004a 0D20     		movs	r0, #13
 2996 004c 47F6FF71 		movw	r1, #32767
 2997 0050 FFF7FEFF 		bl	cc2400_set
 887:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 2998              		.loc 1 887 0
 2999 0054 1220     		movs	r0, #18
 3000 0056 42F62231 		movw	r1, #11042
 3001 005a FFF7FEFF 		bl	cc2400_set
 888:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b);
 3002              		.loc 1 888 0
 3003 005e 1420     		movs	r0, #20
 3004 0060 41F24B31 		movw	r1, #4939
 3005 0064 FFF7FEFF 		bl	cc2400_set
 889:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1);
 3006              		.loc 1 889 0
 3007 0068 814B     		ldr	r3, .L181+4
 3008 006a 1B88     		ldrh	r3, [r3]	@ movhi
 3009 006c 9BB2     		uxth	r3, r3
 3010 006e 013B     		subs	r3, r3, #1
 3011 0070 9BB2     		uxth	r3, r3
 3012 0072 0220     		movs	r0, #2
 3013 0074 1946     		mov	r1, r3
 3014 0076 FFF7FEFF 		bl	cc2400_set
 890:assembly_test.c **** 		cc2400_set(SYNCH,   0xf9ae);
 3015              		.loc 1 890 0
 3016 007a 2D20     		movs	r0, #45
ARM GAS  /tmp/cc74qjbb.s 			page 69


 3017 007c 4FF6AE11 		movw	r1, #63918
 3018 0080 FFF7FEFF 		bl	cc2400_set
 891:assembly_test.c **** 		cc2400_set(SYNCL,   0x1584);
 3019              		.loc 1 891 0
 3020 0084 2C20     		movs	r0, #44
 3021 0086 41F28451 		movw	r1, #5508
 3022 008a FFF7FEFF 		bl	cc2400_set
 892:assembly_test.c **** 		cc2400_set(FREND,   0x0008); // minimum tx power
 3023              		.loc 1 892 0
 3024 008e 0520     		movs	r0, #5
 3025 0090 0821     		movs	r1, #8
 3026 0092 FFF7FEFF 		bl	cc2400_set
 893:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 3027              		.loc 1 893 0
 3028 0096 0320     		movs	r0, #3
 3029 0098 2921     		movs	r1, #41
 3030 009a FFF7FEFF 		bl	cc2400_set
 894:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 3031              		.loc 1 894 0
 3032 009e 00BF     		nop
 3033              	.L159:
 3034              		.loc 1 894 0 is_stmt 0 discriminator 1
 3035 00a0 FFF7FEFF 		bl	cc2400_status
 3036 00a4 0346     		mov	r3, r0
 3037 00a6 03F04003 		and	r3, r3, #64
 3038 00aa 002B     		cmp	r3, #0
 3039 00ac F8D0     		beq	.L159
 895:assembly_test.c **** 		cc2400_strobe(SFSON);
 3040              		.loc 1 895 0 is_stmt 1
 3041 00ae 6120     		movs	r0, #97
 3042 00b0 FFF7FEFF 		bl	cc2400_strobe
 896:assembly_test.c **** 		while (!(cc2400_status() & FS_LOCK));
 3043              		.loc 1 896 0
 3044 00b4 00BF     		nop
 3045              	.L160:
 3046              		.loc 1 896 0 is_stmt 0 discriminator 1
 3047 00b6 FFF7FEFF 		bl	cc2400_status
 3048 00ba 0346     		mov	r3, r0
 3049 00bc 03F00403 		and	r3, r3, #4
 3050 00c0 002B     		cmp	r3, #0
 3051 00c2 F8D0     		beq	.L160
 897:assembly_test.c **** 		RXLED_SET;
 3052              		.loc 1 897 0 is_stmt 1
 3053 00c4 6B4B     		ldr	r3, .L181+8
 3054 00c6 1022     		movs	r2, #16
 3055 00c8 1A60     		str	r2, [r3]
 898:assembly_test.c **** 		TXLED_CLR;
 3056              		.loc 1 898 0
 3057 00ca 6B4B     		ldr	r3, .L181+12
 3058 00cc 4FF48072 		mov	r2, #256
 3059 00d0 1A60     		str	r2, [r3]
 899:assembly_test.c **** 		USRLED_CLR;
 3060              		.loc 1 899 0
 3061 00d2 694B     		ldr	r3, .L181+12
 3062 00d4 0222     		movs	r2, #2
 3063 00d6 1A60     		str	r2, [r3]
 900:assembly_test.c **** #ifdef UBERTOOTH_ONE
ARM GAS  /tmp/cc74qjbb.s 			page 70


 901:assembly_test.c **** 		PAEN_SET;
 3064              		.loc 1 901 0
 3065 00d8 684B     		ldr	r3, .L181+16
 3066 00da 8022     		movs	r2, #128
 3067 00dc 1A60     		str	r2, [r3]
 3068              	.L167:
 902:assembly_test.c **** #endif
 903:assembly_test.c **** 		while (1) {
 904:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 3069              		.loc 1 904 0 discriminator 1
 3070 00de 00BF     		nop
 3071              	.L161:
 3072 00e0 0E20     		movs	r0, #14
 3073 00e2 FFF7FEFF 		bl	cc2400_get
 3074 00e6 0346     		mov	r3, r0
 3075 00e8 03F01F03 		and	r3, r3, #31
 3076 00ec 0F2B     		cmp	r3, #15
 3077 00ee F7D1     		bne	.L161
 905:assembly_test.c **** 			USRLED_CLR;
 3078              		.loc 1 905 0
 3079 00f0 614B     		ldr	r3, .L181+12
 3080 00f2 0222     		movs	r2, #2
 3081 00f4 1A60     		str	r2, [r3]
 906:assembly_test.c **** 			cc2400_strobe(SRX);
 3082              		.loc 1 906 0
 3083 00f6 6220     		movs	r0, #98
 3084 00f8 FFF7FEFF 		bl	cc2400_strobe
 907:assembly_test.c **** 			while (!(cc2400_status() & SYNC_RECEIVED));
 3085              		.loc 1 907 0
 3086 00fc 00BF     		nop
 3087              	.L162:
 3088              		.loc 1 907 0 is_stmt 0 discriminator 1
 3089 00fe FFF7FEFF 		bl	cc2400_status
 3090 0102 0346     		mov	r3, r0
 3091 0104 03F01003 		and	r3, r3, #16
 3092 0108 002B     		cmp	r3, #0
 3093 010a F8D0     		beq	.L162
 908:assembly_test.c **** 			USRLED_SET;
 3094              		.loc 1 908 0 is_stmt 1
 3095 010c 594B     		ldr	r3, .L181+8
 3096 010e 0222     		movs	r2, #2
 3097 0110 1A60     		str	r2, [r3]
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 3098              		.loc 1 909 0
 3099 0112 0023     		movs	r3, #0
 3100 0114 7B61     		str	r3, [r7, #20]
 3101 0116 0CE0     		b	.L163
 3102              	.L164:
 910:assembly_test.c **** 				buf[i] = cc2400_get8(FIFOREG);
 3103              		.loc 1 910 0 discriminator 3
 3104 0118 7020     		movs	r0, #112
 3105 011a FFF7FEFF 		bl	cc2400_get8
 3106 011e 0346     		mov	r3, r0
 3107 0120 1946     		mov	r1, r3
 3108 0122 7A68     		ldr	r2, [r7, #4]
 3109 0124 7B69     		ldr	r3, [r7, #20]
 3110 0126 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc74qjbb.s 			page 71


 3111 0128 0A46     		mov	r2, r1
 3112 012a 1A70     		strb	r2, [r3]
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 3113              		.loc 1 909 0 discriminator 3
 3114 012c 7B69     		ldr	r3, [r7, #20]
 3115 012e 0133     		adds	r3, r3, #1
 3116 0130 7B61     		str	r3, [r7, #20]
 3117              	.L163:
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 3118              		.loc 1 909 0 is_stmt 0 discriminator 1
 3119 0132 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3120 0134 7B69     		ldr	r3, [r7, #20]
 3121 0136 9A42     		cmp	r2, r3
 3122 0138 EEDC     		bgt	.L164
 911:assembly_test.c **** 			if (cc2400_status() & STATUS_CRC_OK)
 3123              		.loc 1 911 0 is_stmt 1
 3124 013a FFF7FEFF 		bl	cc2400_status
 3125 013e 0346     		mov	r3, r0
 3126 0140 03F00803 		and	r3, r3, #8
 3127 0144 002B     		cmp	r3, #0
 3128 0146 03D0     		beq	.L165
 912:assembly_test.c **** 				break;
 3129              		.loc 1 912 0
 3130 0148 00BF     		nop
 913:assembly_test.c **** 		}
 914:assembly_test.c **** 		// got packet, now repeat it
 915:assembly_test.c **** 		i = 2000000; while (--i); // allow time for requester to switch to rx
 3131              		.loc 1 915 0
 3132 014a 4D4B     		ldr	r3, .L181+20
 3133 014c 7B61     		str	r3, [r7, #20]
 3134 014e 00E0     		b	.L168
 3135              	.L165:
 913:assembly_test.c **** 		}
 3136              		.loc 1 913 0
 3137 0150 C5E7     		b	.L167
 3138              	.L168:
 3139              		.loc 1 915 0 discriminator 2
 3140 0152 7B69     		ldr	r3, [r7, #20]
 3141 0154 013B     		subs	r3, r3, #1
 3142 0156 7B61     		str	r3, [r7, #20]
 3143 0158 7B69     		ldr	r3, [r7, #20]
 3144 015a 002B     		cmp	r3, #0
 3145 015c F9D1     		bne	.L168
 916:assembly_test.c **** 		USRLED_CLR;
 3146              		.loc 1 916 0
 3147 015e 464B     		ldr	r3, .L181+12
 3148 0160 0222     		movs	r2, #2
 3149 0162 1A60     		str	r2, [r3]
 917:assembly_test.c **** 		RXLED_CLR;
 3150              		.loc 1 917 0
 3151 0164 444B     		ldr	r3, .L181+12
 3152 0166 1022     		movs	r2, #16
 3153 0168 1A60     		str	r2, [r3]
 918:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 3154              		.loc 1 918 0
 3155 016a 6420     		movs	r0, #100
 3156 016c FFF7FEFF 		bl	cc2400_strobe
ARM GAS  /tmp/cc74qjbb.s 			page 72


 919:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 3157              		.loc 1 919 0
 3158 0170 00BF     		nop
 3159              	.L169:
 3160              		.loc 1 919 0 is_stmt 0 discriminator 1
 3161 0172 FFF7FEFF 		bl	cc2400_status
 3162 0176 0346     		mov	r3, r0
 3163 0178 03F00403 		and	r3, r3, #4
 3164 017c 002B     		cmp	r3, #0
 3165 017e F8D1     		bne	.L169
 920:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 3166              		.loc 1 920 0 is_stmt 1
 3167 0180 00BF     		nop
 3168              	.L170:
 3169              		.loc 1 920 0 is_stmt 0 discriminator 1
 3170 0182 FFF7FEFF 		bl	cc2400_status
 3171 0186 0346     		mov	r3, r0
 3172 0188 03F04003 		and	r3, r3, #64
 3173 018c 002B     		cmp	r3, #0
 3174 018e F8D0     		beq	.L170
 921:assembly_test.c **** 		cc2400_set(FSDIV, channel);
 3175              		.loc 1 921 0 is_stmt 1
 3176 0190 374B     		ldr	r3, .L181+4
 3177 0192 1B88     		ldrh	r3, [r3]	@ movhi
 3178 0194 9BB2     		uxth	r3, r3
 3179 0196 0220     		movs	r0, #2
 3180 0198 1946     		mov	r1, r3
 3181 019a FFF7FEFF 		bl	cc2400_set
 922:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 3182              		.loc 1 922 0
 3183 019e 00BF     		nop
 3184              	.L171:
 3185              		.loc 1 922 0 is_stmt 0 discriminator 1
 3186 01a0 FFF7FEFF 		bl	cc2400_status
 3187 01a4 0346     		mov	r3, r0
 3188 01a6 03F04003 		and	r3, r3, #64
 3189 01aa 002B     		cmp	r3, #0
 3190 01ac F8D0     		beq	.L171
 923:assembly_test.c **** 		cc2400_strobe(SFSON);
 3191              		.loc 1 923 0 is_stmt 1
 3192 01ae 6120     		movs	r0, #97
 3193 01b0 FFF7FEFF 		bl	cc2400_strobe
 924:assembly_test.c **** 		TXLED_SET;
 3194              		.loc 1 924 0
 3195 01b4 2F4B     		ldr	r3, .L181+8
 3196 01b6 4FF48072 		mov	r2, #256
 3197 01ba 1A60     		str	r2, [r3]
 925:assembly_test.c **** 		buf[0] = len - 1; // length of data (rest of payload)
 3198              		.loc 1 925 0
 3199 01bc BB7B     		ldrb	r3, [r7, #14]
 3200 01be 013B     		subs	r3, r3, #1
 3201 01c0 DAB2     		uxtb	r2, r3
 3202 01c2 7B68     		ldr	r3, [r7, #4]
 3203 01c4 1A70     		strb	r2, [r3]
 926:assembly_test.c **** 		buf[1] = 1; // reply
 3204              		.loc 1 926 0
 3205 01c6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc74qjbb.s 			page 73


 3206 01c8 0122     		movs	r2, #1
 3207 01ca 5A70     		strb	r2, [r3, #1]
 927:assembly_test.c **** 		for (pa = 0; pa < 8; pa++) {
 3208              		.loc 1 927 0
 3209 01cc 0023     		movs	r3, #0
 3210 01ce FB73     		strb	r3, [r7, #15]
 3211 01d0 39E0     		b	.L172
 3212              	.L178:
 928:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 3213              		.loc 1 928 0
 3214 01d2 FB7B     		ldrb	r3, [r7, #15]
 3215 01d4 43F00803 		orr	r3, r3, #8
 3216 01d8 DBB2     		uxtb	r3, r3
 3217 01da 9BB2     		uxth	r3, r3
 3218 01dc 0520     		movs	r0, #5
 3219 01de 1946     		mov	r1, r3
 3220 01e0 FFF7FEFF 		bl	cc2400_set
 929:assembly_test.c **** 			buf[20] = pa;
 3221              		.loc 1 929 0
 3222 01e4 7B68     		ldr	r3, [r7, #4]
 3223 01e6 FA7B     		ldrb	r2, [r7, #15]
 3224 01e8 1A75     		strb	r2, [r3, #20]
 930:assembly_test.c **** 			for (i = 0; i < 16; i++) {
 3225              		.loc 1 930 0
 3226 01ea 0023     		movs	r3, #0
 3227 01ec 7B61     		str	r3, [r7, #20]
 3228 01ee 24E0     		b	.L173
 3229              	.L177:
 931:assembly_test.c **** 				buf[21] = i;
 3230              		.loc 1 931 0
 3231 01f0 7B69     		ldr	r3, [r7, #20]
 3232 01f2 DAB2     		uxtb	r2, r3
 3233 01f4 7B68     		ldr	r3, [r7, #4]
 3234 01f6 5A75     		strb	r2, [r3, #21]
 932:assembly_test.c **** 				while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 3235              		.loc 1 932 0
 3236 01f8 00BF     		nop
 3237              	.L174:
 3238              		.loc 1 932 0 is_stmt 0 discriminator 1
 3239 01fa 0E20     		movs	r0, #14
 3240 01fc FFF7FEFF 		bl	cc2400_get
 3241 0200 0346     		mov	r3, r0
 3242 0202 03F01F03 		and	r3, r3, #31
 3243 0206 0F2B     		cmp	r3, #15
 3244 0208 F7D1     		bne	.L174
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 3245              		.loc 1 933 0 is_stmt 1
 3246 020a 0023     		movs	r3, #0
 3247 020c 3B61     		str	r3, [r7, #16]
 3248 020e 0AE0     		b	.L175
 3249              	.L176:
 934:assembly_test.c **** 						cc2400_set8(FIFOREG, buf[j]);
 3250              		.loc 1 934 0 discriminator 3
 3251 0210 7A68     		ldr	r2, [r7, #4]
 3252 0212 3B69     		ldr	r3, [r7, #16]
 3253 0214 1344     		add	r3, r3, r2
 3254 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cc74qjbb.s 			page 74


 3255 0218 7020     		movs	r0, #112
 3256 021a 1946     		mov	r1, r3
 3257 021c FFF7FEFF 		bl	cc2400_set8
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 3258              		.loc 1 933 0 discriminator 3
 3259 0220 3B69     		ldr	r3, [r7, #16]
 3260 0222 0133     		adds	r3, r3, #1
 3261 0224 3B61     		str	r3, [r7, #16]
 3262              	.L175:
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 3263              		.loc 1 933 0 is_stmt 0 discriminator 1
 3264 0226 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3265 0228 3B69     		ldr	r3, [r7, #16]
 3266 022a 9A42     		cmp	r2, r3
 3267 022c F0DC     		bgt	.L176
 935:assembly_test.c **** 				cc2400_strobe(STX);
 3268              		.loc 1 935 0 is_stmt 1 discriminator 2
 3269 022e 6320     		movs	r0, #99
 3270 0230 FFF7FEFF 		bl	cc2400_strobe
 930:assembly_test.c **** 				buf[21] = i;
 3271              		.loc 1 930 0 discriminator 2
 3272 0234 7B69     		ldr	r3, [r7, #20]
 3273 0236 0133     		adds	r3, r3, #1
 3274 0238 7B61     		str	r3, [r7, #20]
 3275              	.L173:
 930:assembly_test.c **** 				buf[21] = i;
 3276              		.loc 1 930 0 is_stmt 0 discriminator 1
 3277 023a 7B69     		ldr	r3, [r7, #20]
 3278 023c 0F2B     		cmp	r3, #15
 3279 023e D7DD     		ble	.L177
 927:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 3280              		.loc 1 927 0 is_stmt 1 discriminator 2
 3281 0240 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3282 0242 0133     		adds	r3, r3, #1
 3283 0244 FB73     		strb	r3, [r7, #15]
 3284              	.L172:
 927:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 3285              		.loc 1 927 0 is_stmt 0 discriminator 1
 3286 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3287 0248 072B     		cmp	r3, #7
 3288 024a C2D9     		bls	.L178
 936:assembly_test.c **** 			}
 937:assembly_test.c **** 		}
 938:assembly_test.c **** 		TXLED_CLR;
 3289              		.loc 1 938 0 is_stmt 1
 3290 024c 0A4B     		ldr	r3, .L181+12
 3291 024e 4FF48072 		mov	r2, #256
 3292 0252 1A60     		str	r2, [r3]
 939:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 3293              		.loc 1 939 0
 3294 0254 6420     		movs	r0, #100
 3295 0256 FFF7FEFF 		bl	cc2400_strobe
 940:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 3296              		.loc 1 940 0
 3297 025a 00BF     		nop
 3298              	.L179:
 3299              		.loc 1 940 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc74qjbb.s 			page 75


 3300 025c FFF7FEFF 		bl	cc2400_status
 3301 0260 0346     		mov	r3, r0
 3302 0262 03F00403 		and	r3, r3, #4
 3303 0266 002B     		cmp	r3, #0
 3304 0268 F8D1     		bne	.L179
 941:assembly_test.c **** 	}
 3305              		.loc 1 941 0 is_stmt 1
 3306 026a EEE6     		b	.L180
 3307              	.L182:
 3308              		.align	2
 3309              	.L181:
 3310 026c 00000000 		.word	mode
 3311 0270 00000000 		.word	channel
 3312 0274 38C00920 		.word	537509944
 3313 0278 3CC00920 		.word	537509948
 3314 027c 58C00920 		.word	537509976
 3315 0280 80841E00 		.word	2000000
 3316              		.cfi_endproc
 3317              	.LFE15:
 3319              		.section	.text.bt_stream_rx,"ax",%progbits
 3320              		.align	2
 3321              		.global	bt_stream_rx
 3322              		.thumb
 3323              		.thumb_func
 3325              	bt_stream_rx:
 3326              	.LFB16:
 942:assembly_test.c **** #endif
 943:assembly_test.c **** }
 944:assembly_test.c **** 
 945:assembly_test.c **** void bt_stream_rx()
 946:assembly_test.c **** {
 3327              		.loc 1 946 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 8
 3330              		@ frame_needed = 1, uses_anonymous_args = 0
 3331 0000 80B5     		push	{r7, lr}
 3332              		.cfi_def_cfa_offset 8
 3333              		.cfi_offset 7, -8
 3334              		.cfi_offset 14, -4
 3335 0002 82B0     		sub	sp, sp, #8
 3336              		.cfi_def_cfa_offset 16
 3337 0004 00AF     		add	r7, sp, #0
 3338              		.cfi_def_cfa_register 7
 947:assembly_test.c **** 	u8 *tmp = NULL;
 3339              		.loc 1 947 0
 3340 0006 0023     		movs	r3, #0
 3341 0008 7B60     		str	r3, [r7, #4]
 948:assembly_test.c **** 	u8 epstat;
 949:assembly_test.c **** 	int i;
 950:assembly_test.c **** 
 951:assembly_test.c **** 	RXLED_SET;
 3342              		.loc 1 951 0
 3343 000a 3F4B     		ldr	r3, .L195
 3344 000c 1022     		movs	r2, #16
 3345 000e 1A60     		str	r2, [r3]
 952:assembly_test.c **** 
 953:assembly_test.c **** 	queue_init();
ARM GAS  /tmp/cc74qjbb.s 			page 76


 3346              		.loc 1 953 0
 3347 0010 FFF7FEFF 		bl	queue_init
 954:assembly_test.c **** 	dio_ssp_init();
 3348              		.loc 1 954 0
 3349 0014 FFF7FEFF 		bl	dio_ssp_init
 955:assembly_test.c **** 	dma_init();
 3350              		.loc 1 955 0
 3351 0018 FFF7FEFF 		bl	dma_init
 956:assembly_test.c **** 	dio_ssp_start();
 3352              		.loc 1 956 0
 3353 001c FFF7FEFF 		bl	dio_ssp_start
 957:assembly_test.c **** 	cc2400_rx();
 3354              		.loc 1 957 0
 3355 0020 FFF7FEFF 		bl	cc2400_rx
 958:assembly_test.c **** 
 959:assembly_test.c **** 	while (rx_pkts) {
 3356              		.loc 1 959 0
 3357 0024 65E0     		b	.L184
 3358              	.L194:
 960:assembly_test.c **** 		/* wait for DMA transfer */
 961:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
 3359              		.loc 1 961 0
 3360 0026 00BF     		nop
 3361              	.L186:
 3362              		.loc 1 961 0 is_stmt 0 discriminator 2
 3363 0028 384B     		ldr	r3, .L195+4
 3364 002a 1B68     		ldr	r3, [r3]
 3365 002c 002B     		cmp	r3, #0
 3366 002e 03D1     		bne	.L185
 3367              		.loc 1 961 0 discriminator 1
 3368 0030 374B     		ldr	r3, .L195+8
 3369 0032 1B68     		ldr	r3, [r3]
 3370 0034 002B     		cmp	r3, #0
 3371 0036 F7D0     		beq	.L186
 3372              	.L185:
 962:assembly_test.c **** 		if (rx_tc % 2) {
 3373              		.loc 1 962 0 is_stmt 1
 3374 0038 344B     		ldr	r3, .L195+4
 3375 003a 1B68     		ldr	r3, [r3]
 3376 003c 03F00103 		and	r3, r3, #1
 3377 0040 002B     		cmp	r3, #0
 3378 0042 09D0     		beq	.L187
 963:assembly_test.c **** 			/* swap buffers */
 964:assembly_test.c **** 			tmp = active_rxbuf;
 3379              		.loc 1 964 0
 3380 0044 334B     		ldr	r3, .L195+12
 3381 0046 1B68     		ldr	r3, [r3]
 3382 0048 7B60     		str	r3, [r7, #4]
 965:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 3383              		.loc 1 965 0
 3384 004a 334B     		ldr	r3, .L195+16
 3385 004c 1B68     		ldr	r3, [r3]
 3386 004e 314A     		ldr	r2, .L195+12
 3387 0050 1360     		str	r3, [r2]
 966:assembly_test.c **** 			idle_rxbuf = tmp;
 3388              		.loc 1 966 0
 3389 0052 314A     		ldr	r2, .L195+16
ARM GAS  /tmp/cc74qjbb.s 			page 77


 3390 0054 7B68     		ldr	r3, [r7, #4]
 3391 0056 1360     		str	r3, [r2]
 3392              	.L187:
 967:assembly_test.c **** 		}
 968:assembly_test.c **** 		if (rx_err)
 3393              		.loc 1 968 0
 3394 0058 2D4B     		ldr	r3, .L195+8
 3395 005a 1B68     		ldr	r3, [r3]
 3396 005c 002B     		cmp	r3, #0
 3397 005e 07D0     		beq	.L188
 969:assembly_test.c **** 			status |= DMA_ERROR;
 3398              		.loc 1 969 0
 3399 0060 2E4B     		ldr	r3, .L195+20
 3400 0062 1B78     		ldrb	r3, [r3]
 3401 0064 DBB2     		uxtb	r3, r3
 3402 0066 43F00203 		orr	r3, r3, #2
 3403 006a DAB2     		uxtb	r2, r3
 3404 006c 2B4B     		ldr	r3, .L195+20
 3405 006e 1A70     		strb	r2, [r3]
 3406              	.L188:
 970:assembly_test.c **** 		if (rx_tc) {
 3407              		.loc 1 970 0
 3408 0070 264B     		ldr	r3, .L195+4
 3409 0072 1B68     		ldr	r3, [r3]
 3410 0074 002B     		cmp	r3, #0
 3411 0076 21D0     		beq	.L189
 971:assembly_test.c **** 			if (rx_tc > 1)
 3412              		.loc 1 971 0
 3413 0078 244B     		ldr	r3, .L195+4
 3414 007a 1B68     		ldr	r3, [r3]
 3415 007c 012B     		cmp	r3, #1
 3416 007e 07D9     		bls	.L190
 972:assembly_test.c **** 				status |= DMA_OVERFLOW;
 3417              		.loc 1 972 0
 3418 0080 264B     		ldr	r3, .L195+20
 3419 0082 1B78     		ldrb	r3, [r3]
 3420 0084 DBB2     		uxtb	r3, r3
 3421 0086 43F00103 		orr	r3, r3, #1
 3422 008a DAB2     		uxtb	r2, r3
 3423 008c 234B     		ldr	r3, .L195+20
 3424 008e 1A70     		strb	r2, [r3]
 3425              	.L190:
 973:assembly_test.c **** 			if (enqueue(idle_rxbuf))
 3426              		.loc 1 973 0
 3427 0090 214B     		ldr	r3, .L195+16
 3428 0092 1B68     		ldr	r3, [r3]
 3429 0094 1846     		mov	r0, r3
 3430 0096 FFF7FEFF 		bl	enqueue
 3431 009a 0346     		mov	r3, r0
 3432 009c 002B     		cmp	r3, #0
 3433 009e 05D0     		beq	.L191
 974:assembly_test.c **** 				--rx_pkts;
 3434              		.loc 1 974 0
 3435 00a0 1F4B     		ldr	r3, .L195+24
 3436 00a2 1B68     		ldr	r3, [r3]
 3437 00a4 013B     		subs	r3, r3, #1
 3438 00a6 1E4A     		ldr	r2, .L195+24
ARM GAS  /tmp/cc74qjbb.s 			page 78


 3439 00a8 1360     		str	r3, [r2]
 3440 00aa 07E0     		b	.L189
 3441              	.L191:
 975:assembly_test.c **** 			else
 976:assembly_test.c **** 				status |= FIFO_OVERFLOW;
 3442              		.loc 1 976 0
 3443 00ac 1B4B     		ldr	r3, .L195+20
 3444 00ae 1B78     		ldrb	r3, [r3]
 3445 00b0 DBB2     		uxtb	r3, r3
 3446 00b2 43F00403 		orr	r3, r3, #4
 3447 00b6 DAB2     		uxtb	r2, r3
 3448 00b8 184B     		ldr	r3, .L195+20
 3449 00ba 1A70     		strb	r2, [r3]
 3450              	.L189:
 977:assembly_test.c **** 		}
 978:assembly_test.c **** 
 979:assembly_test.c **** 		/* send via USB */
 980:assembly_test.c **** 		epstat = USBHwEPGetStatus(BULK_IN_EP);
 3451              		.loc 1 980 0
 3452 00bc 8220     		movs	r0, #130
 3453 00be FFF7FEFF 		bl	USBHwEPGetStatus
 3454 00c2 0346     		mov	r3, r0
 3455 00c4 FB70     		strb	r3, [r7, #3]
 981:assembly_test.c **** 		if (!(epstat & EPSTAT_B1FULL))
 3456              		.loc 1 981 0
 3457 00c6 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3458 00c8 03F02003 		and	r3, r3, #32
 3459 00cc 002B     		cmp	r3, #0
 3460 00ce 01D1     		bne	.L192
 982:assembly_test.c **** 			dequeue();
 3461              		.loc 1 982 0
 3462 00d0 FFF7FEFF 		bl	dequeue
 3463              	.L192:
 983:assembly_test.c **** 		if (!(epstat & EPSTAT_B2FULL))
 3464              		.loc 1 983 0
 3465 00d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3466 00d6 03F04003 		and	r3, r3, #64
 3467 00da 002B     		cmp	r3, #0
 3468 00dc 01D1     		bne	.L193
 984:assembly_test.c **** 			dequeue();
 3469              		.loc 1 984 0
 3470 00de FFF7FEFF 		bl	dequeue
 3471              	.L193:
 985:assembly_test.c **** 		USBHwISR();
 3472              		.loc 1 985 0
 3473 00e2 FFF7FEFF 		bl	USBHwISR
 986:assembly_test.c **** 
 987:assembly_test.c **** 		rx_tc = 0;
 3474              		.loc 1 987 0
 3475 00e6 094B     		ldr	r3, .L195+4
 3476 00e8 0022     		movs	r2, #0
 3477 00ea 1A60     		str	r2, [r3]
 988:assembly_test.c **** 		rx_err = 0;
 3478              		.loc 1 988 0
 3479 00ec 084B     		ldr	r3, .L195+8
 3480 00ee 0022     		movs	r2, #0
 3481 00f0 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 79


 3482              	.L184:
 959:assembly_test.c **** 		/* wait for DMA transfer */
 3483              		.loc 1 959 0
 3484 00f2 0B4B     		ldr	r3, .L195+24
 3485 00f4 1B68     		ldr	r3, [r3]
 3486 00f6 002B     		cmp	r3, #0
 3487 00f8 95D1     		bne	.L194
 989:assembly_test.c **** 	}
 990:assembly_test.c **** 	//FIXME turn off rx
 991:assembly_test.c **** 	RXLED_CLR;
 3488              		.loc 1 991 0
 3489 00fa 0A4B     		ldr	r3, .L195+28
 3490 00fc 1022     		movs	r2, #16
 3491 00fe 1A60     		str	r2, [r3]
 992:assembly_test.c **** }
 3492              		.loc 1 992 0
 3493 0100 0837     		adds	r7, r7, #8
 3494              		.cfi_def_cfa_offset 8
 3495 0102 BD46     		mov	sp, r7
 3496              		.cfi_def_cfa_register 13
 3497              		@ sp needed
 3498 0104 80BD     		pop	{r7, pc}
 3499              	.L196:
 3500 0106 00BF     		.align	2
 3501              	.L195:
 3502 0108 38C00920 		.word	537509944
 3503 010c 00000000 		.word	rx_tc
 3504 0110 00000000 		.word	rx_err
 3505 0114 00000000 		.word	active_rxbuf
 3506 0118 00000000 		.word	idle_rxbuf
 3507 011c 00000000 		.word	status
 3508 0120 00000000 		.word	rx_pkts
 3509 0124 3CC00920 		.word	537509948
 3510              		.cfi_endproc
 3511              	.LFE16:
 3513              		.section	.text.specan,"ax",%progbits
 3514              		.align	2
 3515              		.global	specan
 3516              		.thumb
 3517              		.thumb_func
 3519              	specan:
 3520              	.LFB17:
 993:assembly_test.c **** 
 994:assembly_test.c **** /* spectrum analysis */
 995:assembly_test.c **** void specan()
 996:assembly_test.c **** {
 3521              		.loc 1 996 0
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 56
 3524              		@ frame_needed = 1, uses_anonymous_args = 0
 3525 0000 90B5     		push	{r4, r7, lr}
 3526              		.cfi_def_cfa_offset 12
 3527              		.cfi_offset 4, -12
 3528              		.cfi_offset 7, -8
 3529              		.cfi_offset 14, -4
 3530 0002 8FB0     		sub	sp, sp, #60
 3531              		.cfi_def_cfa_offset 72
ARM GAS  /tmp/cc74qjbb.s 			page 80


 3532 0004 00AF     		add	r7, sp, #0
 3533              		.cfi_def_cfa_register 7
 997:assembly_test.c **** 	u8 epstat;
 998:assembly_test.c **** 	u16 f;
 999:assembly_test.c **** 	u8 i = 0;
 3534              		.loc 1 999 0
 3535 0006 0023     		movs	r3, #0
 3536 0008 87F83530 		strb	r3, [r7, #53]
1000:assembly_test.c **** 	u8 buf[DMA_SIZE];
1001:assembly_test.c **** 
1002:assembly_test.c **** 	RXLED_SET;
 3537              		.loc 1 1002 0
 3538 000c 604B     		ldr	r3, .L209
 3539 000e 1022     		movs	r2, #16
 3540 0010 1A60     		str	r2, [r3]
1003:assembly_test.c **** 
1004:assembly_test.c **** 	queue_init();
 3541              		.loc 1 1004 0
 3542 0012 FFF7FEFF 		bl	queue_init
1005:assembly_test.c **** 
1006:assembly_test.c **** #ifdef UBERTOOTH_ONE
1007:assembly_test.c **** 	PAEN_SET;
 3543              		.loc 1 1007 0
 3544 0016 5F4B     		ldr	r3, .L209+4
 3545 0018 8022     		movs	r2, #128
 3546 001a 1A60     		str	r2, [r3]
1008:assembly_test.c **** 	//HGM_SET;
1009:assembly_test.c **** #endif
1010:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 3547              		.loc 1 1010 0
 3548 001c 0D20     		movs	r0, #13
 3549 001e 47F6FF71 		movw	r1, #32767
 3550 0022 FFF7FEFF 		bl	cc2400_set
1011:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 3551              		.loc 1 1011 0
 3552 0026 1220     		movs	r0, #18
 3553 0028 42F62231 		movw	r1, #11042
 3554 002c FFF7FEFF 		bl	cc2400_set
1012:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b); // without PRNG
 3555              		.loc 1 1012 0
 3556 0030 1420     		movs	r0, #20
 3557 0032 41F24B31 		movw	r1, #4939
 3558 0036 FFF7FEFF 		bl	cc2400_set
1013:assembly_test.c **** 	cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 3559              		.loc 1 1013 0
 3560 003a 2020     		movs	r0, #32
 3561 003c 40F20111 		movw	r1, #257
 3562 0040 FFF7FEFF 		bl	cc2400_set
1014:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 3563              		.loc 1 1014 0
 3564 0044 0320     		movs	r0, #3
 3565 0046 2921     		movs	r1, #41
 3566 0048 FFF7FEFF 		bl	cc2400_set
1015:assembly_test.c **** 	//FIXME maybe set RSSI.RSSI_FILT
1016:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 3567              		.loc 1 1016 0
 3568 004c 00BF     		nop
ARM GAS  /tmp/cc74qjbb.s 			page 81


 3569              	.L198:
 3570              		.loc 1 1016 0 is_stmt 0 discriminator 1
 3571 004e FFF7FEFF 		bl	cc2400_status
 3572 0052 0346     		mov	r3, r0
 3573 0054 03F04003 		and	r3, r3, #64
 3574 0058 002B     		cmp	r3, #0
 3575 005a F8D0     		beq	.L198
1017:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 3576              		.loc 1 1017 0 is_stmt 1
 3577 005c 00BF     		nop
 3578              	.L199:
 3579              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3580 005e FFF7FEFF 		bl	cc2400_status
 3581 0062 0346     		mov	r3, r0
 3582 0064 03F00403 		and	r3, r3, #4
 3583 0068 002B     		cmp	r3, #0
 3584 006a F8D1     		bne	.L199
1018:assembly_test.c **** 
1019:assembly_test.c **** 	while (requested_mode == MODE_SPECAN) {
 3585              		.loc 1 1019 0 is_stmt 1
 3586 006c 82E0     		b	.L200
 3587              	.L208:
1020:assembly_test.c **** 		for (f = low_freq; f < high_freq + 1; f++) {
 3588              		.loc 1 1020 0
 3589 006e 4A4B     		ldr	r3, .L209+8
 3590 0070 1B88     		ldrh	r3, [r3]	@ movhi
 3591 0072 FB86     		strh	r3, [r7, #54]	@ movhi
 3592 0074 77E0     		b	.L201
 3593              	.L207:
1021:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 3594              		.loc 1 1021 0
 3595 0076 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 3596 0078 013B     		subs	r3, r3, #1
 3597 007a 9BB2     		uxth	r3, r3
 3598 007c 0220     		movs	r0, #2
 3599 007e 1946     		mov	r1, r3
 3600 0080 FFF7FEFF 		bl	cc2400_set
1022:assembly_test.c **** 			cc2400_strobe(SFSON);
 3601              		.loc 1 1022 0
 3602 0084 6120     		movs	r0, #97
 3603 0086 FFF7FEFF 		bl	cc2400_strobe
1023:assembly_test.c **** 			while (!(cc2400_status() & FS_LOCK));
 3604              		.loc 1 1023 0
 3605 008a 00BF     		nop
 3606              	.L202:
 3607              		.loc 1 1023 0 is_stmt 0 discriminator 1
 3608 008c FFF7FEFF 		bl	cc2400_status
 3609 0090 0346     		mov	r3, r0
 3610 0092 03F00403 		and	r3, r3, #4
 3611 0096 002B     		cmp	r3, #0
 3612 0098 F8D0     		beq	.L202
1024:assembly_test.c **** 			cc2400_strobe(SRX);
 3613              		.loc 1 1024 0 is_stmt 1
 3614 009a 6220     		movs	r0, #98
 3615 009c FFF7FEFF 		bl	cc2400_strobe
1025:assembly_test.c **** 
1026:assembly_test.c **** 			//u32 j = 100; while (--j); //FIXME crude delay
ARM GAS  /tmp/cc74qjbb.s 			page 82


1027:assembly_test.c **** 			buf[3 * i] = (f >> 8) & 0xFF;
 3616              		.loc 1 1027 0
 3617 00a0 97F83520 		ldrb	r2, [r7, #53]	@ zero_extendqisi2
 3618 00a4 1346     		mov	r3, r2
 3619 00a6 5B00     		lsls	r3, r3, #1
 3620 00a8 1344     		add	r3, r3, r2
 3621 00aa FA8E     		ldrh	r2, [r7, #54]
 3622 00ac 120A     		lsrs	r2, r2, #8
 3623 00ae 92B2     		uxth	r2, r2
 3624 00b0 D2B2     		uxtb	r2, r2
 3625 00b2 07F13801 		add	r1, r7, #56
 3626 00b6 0B44     		add	r3, r3, r1
 3627 00b8 03F8382C 		strb	r2, [r3, #-56]
1028:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
 3628              		.loc 1 1028 0
 3629 00bc 97F83520 		ldrb	r2, [r7, #53]	@ zero_extendqisi2
 3630 00c0 1346     		mov	r3, r2
 3631 00c2 5B00     		lsls	r3, r3, #1
 3632 00c4 1344     		add	r3, r3, r2
 3633 00c6 0133     		adds	r3, r3, #1
 3634 00c8 FA8E     		ldrh	r2, [r7, #54]	@ movhi
 3635 00ca D2B2     		uxtb	r2, r2
 3636 00cc 07F13801 		add	r1, r7, #56
 3637 00d0 0B44     		add	r3, r3, r1
 3638 00d2 03F8382C 		strb	r2, [r3, #-56]
1029:assembly_test.c **** 			buf[(3 * i) + 2] = cc2400_get(RSSI) >> 8;
 3639              		.loc 1 1029 0
 3640 00d6 97F83520 		ldrb	r2, [r7, #53]	@ zero_extendqisi2
 3641 00da 1346     		mov	r3, r2
 3642 00dc 5B00     		lsls	r3, r3, #1
 3643 00de 1344     		add	r3, r3, r2
 3644 00e0 9C1C     		adds	r4, r3, #2
 3645 00e2 0620     		movs	r0, #6
 3646 00e4 FFF7FEFF 		bl	cc2400_get
 3647 00e8 0346     		mov	r3, r0
 3648 00ea 1B0A     		lsrs	r3, r3, #8
 3649 00ec 9BB2     		uxth	r3, r3
 3650 00ee DAB2     		uxtb	r2, r3
 3651 00f0 07F13803 		add	r3, r7, #56
 3652 00f4 2344     		add	r3, r3, r4
 3653 00f6 03F8382C 		strb	r2, [r3, #-56]
1030:assembly_test.c **** 			i++;
 3654              		.loc 1 1030 0
 3655 00fa 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 3656 00fe 0133     		adds	r3, r3, #1
 3657 0100 87F83530 		strb	r3, [r7, #53]
1031:assembly_test.c **** 			if (i == 16) {
 3658              		.loc 1 1031 0
 3659 0104 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 3660 0108 102B     		cmp	r3, #16
 3661 010a 1ED1     		bne	.L203
1032:assembly_test.c **** 				//FIXME ought to use different packet type
1033:assembly_test.c **** 				enqueue(buf);
 3662              		.loc 1 1033 0
 3663 010c 3B46     		mov	r3, r7
 3664 010e 1846     		mov	r0, r3
 3665 0110 FFF7FEFF 		bl	enqueue
ARM GAS  /tmp/cc74qjbb.s 			page 83


1034:assembly_test.c **** 				i = 0;
 3666              		.loc 1 1034 0
 3667 0114 0023     		movs	r3, #0
 3668 0116 87F83530 		strb	r3, [r7, #53]
1035:assembly_test.c **** 				/* send via USB */
1036:assembly_test.c **** 				epstat = USBHwEPGetStatus(BULK_IN_EP);
 3669              		.loc 1 1036 0
 3670 011a 8220     		movs	r0, #130
 3671 011c FFF7FEFF 		bl	USBHwEPGetStatus
 3672 0120 0346     		mov	r3, r0
 3673 0122 87F83430 		strb	r3, [r7, #52]
1037:assembly_test.c **** 				if (!(epstat & EPSTAT_B1FULL))
 3674              		.loc 1 1037 0
 3675 0126 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 3676 012a 03F02003 		and	r3, r3, #32
 3677 012e 002B     		cmp	r3, #0
 3678 0130 01D1     		bne	.L204
1038:assembly_test.c **** 					dequeue();
 3679              		.loc 1 1038 0
 3680 0132 FFF7FEFF 		bl	dequeue
 3681              	.L204:
1039:assembly_test.c **** 				if (!(epstat & EPSTAT_B2FULL))
 3682              		.loc 1 1039 0
 3683 0136 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 3684 013a 03F04003 		and	r3, r3, #64
 3685 013e 002B     		cmp	r3, #0
 3686 0140 01D1     		bne	.L205
1040:assembly_test.c **** 					dequeue();
 3687              		.loc 1 1040 0
 3688 0142 FFF7FEFF 		bl	dequeue
 3689              	.L205:
1041:assembly_test.c **** 				USBHwISR();
 3690              		.loc 1 1041 0
 3691 0146 FFF7FEFF 		bl	USBHwISR
 3692              	.L203:
1042:assembly_test.c **** 			}
1043:assembly_test.c **** 
1044:assembly_test.c **** 			cc2400_strobe(SRFOFF);
 3693              		.loc 1 1044 0
 3694 014a 6420     		movs	r0, #100
 3695 014c FFF7FEFF 		bl	cc2400_strobe
1045:assembly_test.c **** 			while ((cc2400_status() & FS_LOCK));
 3696              		.loc 1 1045 0
 3697 0150 00BF     		nop
 3698              	.L206:
 3699              		.loc 1 1045 0 is_stmt 0 discriminator 1
 3700 0152 FFF7FEFF 		bl	cc2400_status
 3701 0156 0346     		mov	r3, r0
 3702 0158 03F00403 		and	r3, r3, #4
 3703 015c 002B     		cmp	r3, #0
 3704 015e F8D1     		bne	.L206
1020:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 3705              		.loc 1 1020 0 is_stmt 1 discriminator 2
 3706 0160 FB8E     		ldrh	r3, [r7, #54]
 3707 0162 0133     		adds	r3, r3, #1
 3708 0164 FB86     		strh	r3, [r7, #54]	@ movhi
 3709              	.L201:
ARM GAS  /tmp/cc74qjbb.s 			page 84


1020:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 3710              		.loc 1 1020 0 is_stmt 0 discriminator 1
 3711 0166 FA8E     		ldrh	r2, [r7, #54]
 3712 0168 0C4B     		ldr	r3, .L209+12
 3713 016a 1B88     		ldrh	r3, [r3]	@ movhi
 3714 016c 9BB2     		uxth	r3, r3
 3715 016e 0133     		adds	r3, r3, #1
 3716 0170 9A42     		cmp	r2, r3
 3717 0172 80DB     		blt	.L207
 3718              	.L200:
1019:assembly_test.c **** 		for (f = low_freq; f < high_freq + 1; f++) {
 3719              		.loc 1 1019 0 is_stmt 1
 3720 0174 0A4B     		ldr	r3, .L209+16
 3721 0176 1B68     		ldr	r3, [r3]
 3722 0178 042B     		cmp	r3, #4
 3723 017a 3FF478AF 		beq	.L208
1046:assembly_test.c **** 		}
1047:assembly_test.c **** 	}
1048:assembly_test.c **** 	mode = MODE_IDLE;
 3724              		.loc 1 1048 0
 3725 017e 094B     		ldr	r3, .L209+20
 3726 0180 0022     		movs	r2, #0
 3727 0182 1A60     		str	r2, [r3]
1049:assembly_test.c **** 	RXLED_CLR;
 3728              		.loc 1 1049 0
 3729 0184 084B     		ldr	r3, .L209+24
 3730 0186 1022     		movs	r2, #16
 3731 0188 1A60     		str	r2, [r3]
1050:assembly_test.c **** }
 3732              		.loc 1 1050 0
 3733 018a 3C37     		adds	r7, r7, #60
 3734              		.cfi_def_cfa_offset 12
 3735 018c BD46     		mov	sp, r7
 3736              		.cfi_def_cfa_register 13
 3737              		@ sp needed
 3738 018e 90BD     		pop	{r4, r7, pc}
 3739              	.L210:
 3740              		.align	2
 3741              	.L209:
 3742 0190 38C00920 		.word	537509944
 3743 0194 58C00920 		.word	537509976
 3744 0198 00000000 		.word	low_freq
 3745 019c 00000000 		.word	high_freq
 3746 01a0 00000000 		.word	requested_mode
 3747 01a4 00000000 		.word	mode
 3748 01a8 3CC00920 		.word	537509948
 3749              		.cfi_endproc
 3750              	.LFE17:
 3752              		.section	.rodata
 3753 00cb 00       		.align	2
 3754              	.LC0:
 3755 00cc 47       		.byte	71
 3756 00cd 5C       		.byte	92
 3757 00ce 58       		.byte	88
 3758 00cf CC       		.byte	-52
 3759 00d0 73       		.byte	115
 3760 00d1 34       		.byte	52
ARM GAS  /tmp/cc74qjbb.s 			page 85


 3761 00d2 5E       		.byte	94
 3762 00d3 8E       		.byte	-114
 3763 00d4 B8       		.byte	-72
 3764 00d5 B1       		.byte	-79
 3765 00d6 98       		.byte	-104
 3766 00d7 E6       		.byte	-26
 3767 00d8 68       		.byte	104
 3768 00d9 BC       		.byte	-68
 3769 00da 11       		.byte	17
 3770 00db D7       		.byte	-41
 3771 00dc 16       		.byte	22
 3772 00dd 33       		.byte	51
 3773 00de 1C       		.byte	28
 3774 00df CD       		.byte	-51
 3775 00e0 17       		.byte	23
 3776 00e1 23       		.byte	35
 3777 00e2 AE       		.byte	-82
 3778 00e3 2C       		.byte	44
 3779 00e4 66       		.byte	102
 3780 00e5 39       		.byte	57
 3781 00e6 9A       		.byte	-102
 3782 00e7 2F       		.byte	47
 3783 00e8 75       		.byte	117
 3784 00e9 C5       		.byte	-59
 3785 00ea 8C       		.byte	-116
 3786 00eb C7       		.byte	-57
 3787 00ec 33       		.byte	51
 3788 00ed 45       		.byte	69
 3789 00ee E7       		.byte	-25
 3790 00ef EB       		.byte	-21
 3791 00f0 8B       		.byte	-117
 3792 00f1 19       		.byte	25
 3793 00f2 8E       		.byte	-114
 3794 00f3 66       		.byte	102
 3795 00f4 8B       		.byte	-117
 3796 00f5 CE       		.byte	-50
 3797 00f6 1D       		.byte	29
 3798 00f7 71       		.byte	113
 3799 00f8 63       		.byte	99
 3800 00f9 31       		.byte	49
 3801 00fa CC       		.byte	-52
 3802 00fb D1       		.byte	-47
 3803 00fc 79       		.byte	121
 3804 00fd 3A       		.byte	58
 3805 00fe E2       		.byte	-30
 3806 00ff C6       		.byte	-58
 3807 0100 63       		.byte	99
 3808 0101 99       		.byte	-103
 3809 0102 A2       		.byte	-94
 3810 0103 F3       		.byte	-13
 3811              		.section	.text.find_giac,"ax",%progbits
 3812              		.align	2
 3813              		.global	find_giac
 3814              		.thumb
 3815              		.thumb_func
 3817              	find_giac:
 3818              	.LFB18:
ARM GAS  /tmp/cc74qjbb.s 			page 86


1051:assembly_test.c **** 
1052:assembly_test.c **** /* an ugly but effective way to identify a GIAC (inquiry packet) */
1053:assembly_test.c **** int find_giac(u8 *buf)
1054:assembly_test.c **** {
 3819              		.loc 1 1054 0
 3820              		.cfi_startproc
 3821              		@ args = 0, pretend = 0, frame = 72
 3822              		@ frame_needed = 1, uses_anonymous_args = 0
 3823 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3824              		.cfi_def_cfa_offset 20
 3825              		.cfi_offset 4, -20
 3826              		.cfi_offset 5, -16
 3827              		.cfi_offset 6, -12
 3828              		.cfi_offset 7, -8
 3829              		.cfi_offset 14, -4
 3830 0002 93B0     		sub	sp, sp, #76
 3831              		.cfi_def_cfa_offset 96
 3832 0004 00AF     		add	r7, sp, #0
 3833              		.cfi_def_cfa_register 7
 3834 0006 7860     		str	r0, [r7, #4]
1055:assembly_test.c **** 	int i, j;
1056:assembly_test.c **** 	const uint8_t giac[8][7] = {
 3835              		.loc 1 1056 0
 3836 0008 4F4B     		ldr	r3, .L220
 3837 000a 1C46     		mov	r4, r3
 3838 000c 07F10806 		add	r6, r7, #8
 3839 0010 04F1300E 		add	lr, r4, #48
 3840              	.L212:
 3841 0014 3546     		mov	r5, r6
 3842 0016 2346     		mov	r3, r4
 3843 0018 1868     		ldr	r0, [r3]	@ unaligned
 3844 001a 5968     		ldr	r1, [r3, #4]	@ unaligned
 3845 001c 9A68     		ldr	r2, [r3, #8]	@ unaligned
 3846 001e DB68     		ldr	r3, [r3, #12]	@ unaligned
 3847 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 3848 0022 1034     		adds	r4, r4, #16
 3849 0024 1036     		adds	r6, r6, #16
 3850 0026 7445     		cmp	r4, lr
 3851 0028 F4D1     		bne	.L212
 3852 002a 3346     		mov	r3, r6
 3853 002c 2246     		mov	r2, r4
 3854 002e 1068     		ldr	r0, [r2]	@ unaligned
 3855 0030 5168     		ldr	r1, [r2, #4]	@ unaligned
 3856 0032 03C3     		stmia	r3!, {r0, r1}
1057:assembly_test.c **** 			{0x47, 0x5c, 0x58, 0xcc, 0x73, 0x34, 0x5e},
1058:assembly_test.c **** 			{0x8e, 0xb8, 0xb1, 0x98, 0xe6, 0x68, 0xbc},
1059:assembly_test.c **** 			{0x11, 0xd7, 0x16, 0x33, 0x1c, 0xcd, 0x17},
1060:assembly_test.c **** 			{0x23, 0xae, 0x2c, 0x66, 0x39, 0x9a, 0x2f},
1061:assembly_test.c **** 			{0x75, 0xc5, 0x8c, 0xc7, 0x33, 0x45, 0xe7},
1062:assembly_test.c **** 			{0xeb, 0x8b, 0x19, 0x8e, 0x66, 0x8b, 0xce},
1063:assembly_test.c **** 			{0x1d, 0x71, 0x63, 0x31, 0xcc, 0xd1, 0x79},
1064:assembly_test.c **** 			{0x3a, 0xe2, 0xc6, 0x63, 0x99, 0xa2, 0xf3}};
1065:assembly_test.c **** 
1066:assembly_test.c ****     for (i = 0; i < (DMA_SIZE - 6); i++)
 3857              		.loc 1 1066 0
 3858 0034 0023     		movs	r3, #0
 3859 0036 7B64     		str	r3, [r7, #68]
ARM GAS  /tmp/cc74qjbb.s 			page 87


 3860 0038 7CE0     		b	.L213
 3861              	.L218:
1067:assembly_test.c **** 			for (j = 0; j < 8; j++)
 3862              		.loc 1 1067 0
 3863 003a 0023     		movs	r3, #0
 3864 003c 3B64     		str	r3, [r7, #64]
 3865 003e 73E0     		b	.L214
 3866              	.L217:
1068:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 3867              		.loc 1 1068 0
 3868 0040 7B6C     		ldr	r3, [r7, #68]
 3869 0042 7A68     		ldr	r2, [r7, #4]
 3870 0044 1344     		add	r3, r3, r2
 3871 0046 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3872 0048 3A6C     		ldr	r2, [r7, #64]
 3873 004a 1346     		mov	r3, r2
 3874 004c DB00     		lsls	r3, r3, #3
 3875 004e 9B1A     		subs	r3, r3, r2
 3876 0050 07F14802 		add	r2, r7, #72
 3877 0054 1344     		add	r3, r3, r2
 3878 0056 403B     		subs	r3, r3, #64
 3879 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3880 005a 9942     		cmp	r1, r3
 3881 005c 61D1     		bne	.L215
1069:assembly_test.c **** 						&& buf[i + 1] == giac[j][1]
 3882              		.loc 1 1069 0
 3883 005e 7B6C     		ldr	r3, [r7, #68]
 3884 0060 0133     		adds	r3, r3, #1
 3885 0062 7A68     		ldr	r2, [r7, #4]
 3886 0064 1344     		add	r3, r3, r2
 3887 0066 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3888 0068 3A6C     		ldr	r2, [r7, #64]
 3889 006a 1346     		mov	r3, r2
 3890 006c DB00     		lsls	r3, r3, #3
 3891 006e 9B1A     		subs	r3, r3, r2
 3892 0070 07F14802 		add	r2, r7, #72
 3893 0074 1344     		add	r3, r3, r2
 3894 0076 3F3B     		subs	r3, r3, #63
 3895 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3896 007a 9942     		cmp	r1, r3
 3897 007c 51D1     		bne	.L215
1070:assembly_test.c **** 						&& buf[i + 2] == giac[j][2]
 3898              		.loc 1 1070 0
 3899 007e 7B6C     		ldr	r3, [r7, #68]
 3900 0080 0233     		adds	r3, r3, #2
 3901 0082 7A68     		ldr	r2, [r7, #4]
 3902 0084 1344     		add	r3, r3, r2
 3903 0086 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3904 0088 3A6C     		ldr	r2, [r7, #64]
 3905 008a 1346     		mov	r3, r2
 3906 008c DB00     		lsls	r3, r3, #3
 3907 008e 9B1A     		subs	r3, r3, r2
 3908 0090 07F14802 		add	r2, r7, #72
 3909 0094 1344     		add	r3, r3, r2
 3910 0096 3E3B     		subs	r3, r3, #62
 3911 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3912 009a 9942     		cmp	r1, r3
ARM GAS  /tmp/cc74qjbb.s 			page 88


 3913 009c 41D1     		bne	.L215
1071:assembly_test.c **** 						&& buf[i + 3] == giac[j][3]
 3914              		.loc 1 1071 0
 3915 009e 7B6C     		ldr	r3, [r7, #68]
 3916 00a0 0333     		adds	r3, r3, #3
 3917 00a2 7A68     		ldr	r2, [r7, #4]
 3918 00a4 1344     		add	r3, r3, r2
 3919 00a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3920 00a8 3A6C     		ldr	r2, [r7, #64]
 3921 00aa 1346     		mov	r3, r2
 3922 00ac DB00     		lsls	r3, r3, #3
 3923 00ae 9B1A     		subs	r3, r3, r2
 3924 00b0 07F14802 		add	r2, r7, #72
 3925 00b4 1344     		add	r3, r3, r2
 3926 00b6 3D3B     		subs	r3, r3, #61
 3927 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3928 00ba 9942     		cmp	r1, r3
 3929 00bc 31D1     		bne	.L215
1072:assembly_test.c **** 						&& buf[i + 4] == giac[j][4]
 3930              		.loc 1 1072 0
 3931 00be 7B6C     		ldr	r3, [r7, #68]
 3932 00c0 0433     		adds	r3, r3, #4
 3933 00c2 7A68     		ldr	r2, [r7, #4]
 3934 00c4 1344     		add	r3, r3, r2
 3935 00c6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3936 00c8 3A6C     		ldr	r2, [r7, #64]
 3937 00ca 1346     		mov	r3, r2
 3938 00cc DB00     		lsls	r3, r3, #3
 3939 00ce 9B1A     		subs	r3, r3, r2
 3940 00d0 07F14802 		add	r2, r7, #72
 3941 00d4 1344     		add	r3, r3, r2
 3942 00d6 3C3B     		subs	r3, r3, #60
 3943 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3944 00da 9942     		cmp	r1, r3
 3945 00dc 21D1     		bne	.L215
1073:assembly_test.c **** 						&& buf[i + 5] == giac[j][5]
 3946              		.loc 1 1073 0
 3947 00de 7B6C     		ldr	r3, [r7, #68]
 3948 00e0 0533     		adds	r3, r3, #5
 3949 00e2 7A68     		ldr	r2, [r7, #4]
 3950 00e4 1344     		add	r3, r3, r2
 3951 00e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3952 00e8 3A6C     		ldr	r2, [r7, #64]
 3953 00ea 1346     		mov	r3, r2
 3954 00ec DB00     		lsls	r3, r3, #3
 3955 00ee 9B1A     		subs	r3, r3, r2
 3956 00f0 07F14802 		add	r2, r7, #72
 3957 00f4 1344     		add	r3, r3, r2
 3958 00f6 3B3B     		subs	r3, r3, #59
 3959 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3960 00fa 9942     		cmp	r1, r3
 3961 00fc 11D1     		bne	.L215
1074:assembly_test.c **** 						&& buf[i + 6] == giac[j][6])
 3962              		.loc 1 1074 0
 3963 00fe 7B6C     		ldr	r3, [r7, #68]
 3964 0100 0633     		adds	r3, r3, #6
 3965 0102 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cc74qjbb.s 			page 89


 3966 0104 1344     		add	r3, r3, r2
 3967 0106 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3968 0108 3A6C     		ldr	r2, [r7, #64]
 3969 010a 1346     		mov	r3, r2
 3970 010c DB00     		lsls	r3, r3, #3
 3971 010e 9B1A     		subs	r3, r3, r2
 3972 0110 07F14802 		add	r2, r7, #72
 3973 0114 1344     		add	r3, r3, r2
 3974 0116 3A3B     		subs	r3, r3, #58
 3975 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3976 011a 9942     		cmp	r1, r3
 3977 011c 01D1     		bne	.L215
1075:assembly_test.c **** 					return 1;
 3978              		.loc 1 1075 0
 3979 011e 0123     		movs	r3, #1
 3980 0120 0DE0     		b	.L219
 3981              	.L215:
1067:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 3982              		.loc 1 1067 0 discriminator 2
 3983 0122 3B6C     		ldr	r3, [r7, #64]
 3984 0124 0133     		adds	r3, r3, #1
 3985 0126 3B64     		str	r3, [r7, #64]
 3986              	.L214:
1067:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 3987              		.loc 1 1067 0 is_stmt 0 discriminator 1
 3988 0128 3B6C     		ldr	r3, [r7, #64]
 3989 012a 072B     		cmp	r3, #7
 3990 012c 88DD     		ble	.L217
1066:assembly_test.c **** 			for (j = 0; j < 8; j++)
 3991              		.loc 1 1066 0 is_stmt 1 discriminator 2
 3992 012e 7B6C     		ldr	r3, [r7, #68]
 3993 0130 0133     		adds	r3, r3, #1
 3994 0132 7B64     		str	r3, [r7, #68]
 3995              	.L213:
1066:assembly_test.c **** 			for (j = 0; j < 8; j++)
 3996              		.loc 1 1066 0 is_stmt 0 discriminator 1
 3997 0134 7B6C     		ldr	r3, [r7, #68]
 3998 0136 2B2B     		cmp	r3, #43
 3999 0138 7FF77FAF 		ble	.L218
1076:assembly_test.c **** 
1077:assembly_test.c **** 	return 0;
 4000              		.loc 1 1077 0 is_stmt 1
 4001 013c 0023     		movs	r3, #0
 4002              	.L219:
1078:assembly_test.c **** }
 4003              		.loc 1 1078 0 discriminator 1
 4004 013e 1846     		mov	r0, r3
 4005 0140 4C37     		adds	r7, r7, #76
 4006              		.cfi_def_cfa_offset 20
 4007 0142 BD46     		mov	sp, r7
 4008              		.cfi_def_cfa_register 13
 4009              		@ sp needed
 4010 0144 F0BD     		pop	{r4, r5, r6, r7, pc}
 4011              	.L221:
 4012 0146 00BF     		.align	2
 4013              	.L220:
 4014 0148 CC000000 		.word	.LC0
ARM GAS  /tmp/cc74qjbb.s 			page 90


 4015              		.cfi_endproc
 4016              	.LFE18:
 4018              		.section	.text.bt_test_rx,"ax",%progbits
 4019              		.align	2
 4020              		.global	bt_test_rx
 4021              		.thumb
 4022              		.thumb_func
 4024              	bt_test_rx:
 4025              	.LFB19:
1079:assembly_test.c **** 
1080:assembly_test.c **** void bt_test_rx()
1081:assembly_test.c **** {
 4026              		.loc 1 1081 0
 4027              		.cfi_startproc
 4028              		@ args = 0, pretend = 0, frame = 16
 4029              		@ frame_needed = 1, uses_anonymous_args = 0
 4030 0000 80B5     		push	{r7, lr}
 4031              		.cfi_def_cfa_offset 8
 4032              		.cfi_offset 7, -8
 4033              		.cfi_offset 14, -4
 4034 0002 84B0     		sub	sp, sp, #16
 4035              		.cfi_def_cfa_offset 24
 4036 0004 00AF     		add	r7, sp, #0
 4037              		.cfi_def_cfa_register 7
1082:assembly_test.c **** 	u8 *tmp = NULL;
 4038              		.loc 1 1082 0
 4039 0006 0023     		movs	r3, #0
 4040 0008 7B60     		str	r3, [r7, #4]
1083:assembly_test.c **** 	int i;
1084:assembly_test.c **** 	int countdown = 0;
 4041              		.loc 1 1084 0
 4042 000a 0023     		movs	r3, #0
 4043 000c FB60     		str	r3, [r7, #12]
1085:assembly_test.c **** 	int num_giacs = 0;
 4044              		.loc 1 1085 0
 4045 000e 0023     		movs	r3, #0
 4046 0010 BB60     		str	r3, [r7, #8]
1086:assembly_test.c **** 
1087:assembly_test.c **** 	dio_ssp_init();
 4047              		.loc 1 1087 0
 4048 0012 FFF7FEFF 		bl	dio_ssp_init
1088:assembly_test.c **** 	dma_init();
 4049              		.loc 1 1088 0
 4050 0016 FFF7FEFF 		bl	dma_init
1089:assembly_test.c **** 	dio_ssp_start();
 4051              		.loc 1 1089 0
 4052 001a FFF7FEFF 		bl	dio_ssp_start
1090:assembly_test.c **** 	cc2400_rx();
 4053              		.loc 1 1090 0
 4054 001e FFF7FEFF 		bl	cc2400_rx
1091:assembly_test.c **** 
1092:assembly_test.c **** 	while (num_giacs < 20) {
 4055              		.loc 1 1092 0
 4056 0022 4EE0     		b	.L223
 4057              	.L232:
1093:assembly_test.c **** 		/* wait for DMA transfer */
1094:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
ARM GAS  /tmp/cc74qjbb.s 			page 91


 4058              		.loc 1 1094 0
 4059 0024 00BF     		nop
 4060              	.L225:
 4061              		.loc 1 1094 0 is_stmt 0 discriminator 2
 4062 0026 2A4B     		ldr	r3, .L233
 4063 0028 1B68     		ldr	r3, [r3]
 4064 002a 002B     		cmp	r3, #0
 4065 002c 03D1     		bne	.L224
 4066              		.loc 1 1094 0 discriminator 1
 4067 002e 294B     		ldr	r3, .L233+4
 4068 0030 1B68     		ldr	r3, [r3]
 4069 0032 002B     		cmp	r3, #0
 4070 0034 F7D0     		beq	.L225
 4071              	.L224:
1095:assembly_test.c **** 		if (rx_tc % 2) {
 4072              		.loc 1 1095 0 is_stmt 1
 4073 0036 264B     		ldr	r3, .L233
 4074 0038 1B68     		ldr	r3, [r3]
 4075 003a 03F00103 		and	r3, r3, #1
 4076 003e 002B     		cmp	r3, #0
 4077 0040 09D0     		beq	.L226
1096:assembly_test.c **** 			/* swap buffers */
1097:assembly_test.c **** 			tmp = active_rxbuf;
 4078              		.loc 1 1097 0
 4079 0042 254B     		ldr	r3, .L233+8
 4080 0044 1B68     		ldr	r3, [r3]
 4081 0046 7B60     		str	r3, [r7, #4]
1098:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 4082              		.loc 1 1098 0
 4083 0048 244B     		ldr	r3, .L233+12
 4084 004a 1B68     		ldr	r3, [r3]
 4085 004c 224A     		ldr	r2, .L233+8
 4086 004e 1360     		str	r3, [r2]
1099:assembly_test.c **** 			idle_rxbuf = tmp;
 4087              		.loc 1 1099 0
 4088 0050 224A     		ldr	r2, .L233+12
 4089 0052 7B68     		ldr	r3, [r7, #4]
 4090 0054 1360     		str	r3, [r2]
 4091              	.L226:
1100:assembly_test.c **** 		}
1101:assembly_test.c **** 		if (rx_err)
 4092              		.loc 1 1101 0
 4093 0056 1F4B     		ldr	r3, .L233+4
 4094 0058 1B68     		ldr	r3, [r3]
 4095 005a 002B     		cmp	r3, #0
 4096 005c 02D0     		beq	.L227
1102:assembly_test.c **** 			RXLED_CLR;
 4097              		.loc 1 1102 0
 4098 005e 204B     		ldr	r3, .L233+16
 4099 0060 1022     		movs	r2, #16
 4100 0062 1A60     		str	r2, [r3]
 4101              	.L227:
1103:assembly_test.c **** 		if (rx_tc) {
 4102              		.loc 1 1103 0
 4103 0064 1A4B     		ldr	r3, .L233
 4104 0066 1B68     		ldr	r3, [r3]
 4105 0068 002B     		cmp	r3, #0
ARM GAS  /tmp/cc74qjbb.s 			page 92


 4106 006a 24D0     		beq	.L228
1104:assembly_test.c **** 			if (rx_tc > 1)
 4107              		.loc 1 1104 0
 4108 006c 184B     		ldr	r3, .L233
 4109 006e 1B68     		ldr	r3, [r3]
 4110 0070 012B     		cmp	r3, #1
 4111 0072 03D9     		bls	.L229
1105:assembly_test.c **** 				TXLED_CLR;
 4112              		.loc 1 1105 0
 4113 0074 1A4B     		ldr	r3, .L233+16
 4114 0076 4FF48072 		mov	r2, #256
 4115 007a 1A60     		str	r2, [r3]
 4116              	.L229:
1106:assembly_test.c **** 			if (find_giac(idle_rxbuf)) {
 4117              		.loc 1 1106 0
 4118 007c 174B     		ldr	r3, .L233+12
 4119 007e 1B68     		ldr	r3, [r3]
 4120 0080 1846     		mov	r0, r3
 4121 0082 FFF7FEFF 		bl	find_giac
 4122 0086 0346     		mov	r3, r0
 4123 0088 002B     		cmp	r3, #0
 4124 008a 08D0     		beq	.L230
1107:assembly_test.c **** 				USRLED_SET;
 4125              		.loc 1 1107 0
 4126 008c 154B     		ldr	r3, .L233+20
 4127 008e 0222     		movs	r2, #2
 4128 0090 1A60     		str	r2, [r3]
1108:assembly_test.c **** 				countdown = 100;
 4129              		.loc 1 1108 0
 4130 0092 6423     		movs	r3, #100
 4131 0094 FB60     		str	r3, [r7, #12]
1109:assembly_test.c **** 				num_giacs++;
 4132              		.loc 1 1109 0
 4133 0096 BB68     		ldr	r3, [r7, #8]
 4134 0098 0133     		adds	r3, r3, #1
 4135 009a BB60     		str	r3, [r7, #8]
 4136 009c 0BE0     		b	.L228
 4137              	.L230:
1110:assembly_test.c **** 			} else {
1111:assembly_test.c **** 				if (countdown == 0) {
 4138              		.loc 1 1111 0
 4139 009e FB68     		ldr	r3, [r7, #12]
 4140 00a0 002B     		cmp	r3, #0
 4141 00a2 05D1     		bne	.L231
1112:assembly_test.c **** 					/* win if more than 32 GIACs seen during this countdown */
1113:assembly_test.c **** 					//if (num_giacs > 32)
1114:assembly_test.c **** 						//break;
1115:assembly_test.c **** 					USRLED_CLR;
 4142              		.loc 1 1115 0
 4143 00a4 0E4B     		ldr	r3, .L233+16
 4144 00a6 0222     		movs	r2, #2
 4145 00a8 1A60     		str	r2, [r3]
1116:assembly_test.c **** 					num_giacs = 0;
 4146              		.loc 1 1116 0
 4147 00aa 0023     		movs	r3, #0
 4148 00ac BB60     		str	r3, [r7, #8]
 4149 00ae 02E0     		b	.L228
ARM GAS  /tmp/cc74qjbb.s 			page 93


 4150              	.L231:
1117:assembly_test.c **** 				} else {
1118:assembly_test.c **** 					--countdown;
 4151              		.loc 1 1118 0
 4152 00b0 FB68     		ldr	r3, [r7, #12]
 4153 00b2 013B     		subs	r3, r3, #1
 4154 00b4 FB60     		str	r3, [r7, #12]
 4155              	.L228:
1119:assembly_test.c **** 				}
1120:assembly_test.c **** 			}
1121:assembly_test.c **** 		}
1122:assembly_test.c **** 
1123:assembly_test.c **** 		rx_tc = 0;
 4156              		.loc 1 1123 0
 4157 00b6 064B     		ldr	r3, .L233
 4158 00b8 0022     		movs	r2, #0
 4159 00ba 1A60     		str	r2, [r3]
1124:assembly_test.c **** 		rx_err = 0;
 4160              		.loc 1 1124 0
 4161 00bc 054B     		ldr	r3, .L233+4
 4162 00be 0022     		movs	r2, #0
 4163 00c0 1A60     		str	r2, [r3]
 4164              	.L223:
1092:assembly_test.c **** 		/* wait for DMA transfer */
 4165              		.loc 1 1092 0
 4166 00c2 BB68     		ldr	r3, [r7, #8]
 4167 00c4 132B     		cmp	r3, #19
 4168 00c6 ADDD     		ble	.L232
1125:assembly_test.c **** 	}
1126:assembly_test.c **** 	//FIXME turn off rx
1127:assembly_test.c **** }
 4169              		.loc 1 1127 0
 4170 00c8 1037     		adds	r7, r7, #16
 4171              		.cfi_def_cfa_offset 8
 4172 00ca BD46     		mov	sp, r7
 4173              		.cfi_def_cfa_register 13
 4174              		@ sp needed
 4175 00cc 80BD     		pop	{r7, pc}
 4176              	.L234:
 4177 00ce 00BF     		.align	2
 4178              	.L233:
 4179 00d0 00000000 		.word	rx_tc
 4180 00d4 00000000 		.word	rx_err
 4181 00d8 00000000 		.word	active_rxbuf
 4182 00dc 00000000 		.word	idle_rxbuf
 4183 00e0 3CC00920 		.word	537509948
 4184 00e4 38C00920 		.word	537509944
 4185              		.cfi_endproc
 4186              	.LFE19:
 4188              		.section	.text.waitms,"ax",%progbits
 4189              		.align	2
 4190              		.global	waitms
 4191              		.thumb
 4192              		.thumb_func
 4194              	waitms:
 4195              	.LFB20:
1128:assembly_test.c **** 
ARM GAS  /tmp/cc74qjbb.s 			page 94


1129:assembly_test.c **** /* delay a number of milliseconds while on internal oscillator (4 MHz) */
1130:assembly_test.c **** void waitms(u8 ms)
1131:assembly_test.c **** {
 4196              		.loc 1 1131 0
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 16
 4199              		@ frame_needed = 1, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201 0000 80B4     		push	{r7}
 4202              		.cfi_def_cfa_offset 4
 4203              		.cfi_offset 7, -4
 4204 0002 85B0     		sub	sp, sp, #20
 4205              		.cfi_def_cfa_offset 24
 4206 0004 00AF     		add	r7, sp, #0
 4207              		.cfi_def_cfa_register 7
 4208 0006 0346     		mov	r3, r0
 4209 0008 FB71     		strb	r3, [r7, #7]
1132:assembly_test.c **** 	u32 i = 400 * ms;
 4210              		.loc 1 1132 0
 4211 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4212 000c 4FF4C872 		mov	r2, #400
 4213 0010 02FB03F3 		mul	r3, r2, r3
 4214 0014 FB60     		str	r3, [r7, #12]
 4215              	.L236:
1133:assembly_test.c **** 	while (--i);
 4216              		.loc 1 1133 0 discriminator 1
 4217 0016 FB68     		ldr	r3, [r7, #12]
 4218 0018 013B     		subs	r3, r3, #1
 4219 001a FB60     		str	r3, [r7, #12]
 4220 001c FB68     		ldr	r3, [r7, #12]
 4221 001e 002B     		cmp	r3, #0
 4222 0020 F9D1     		bne	.L236
1134:assembly_test.c **** }
 4223              		.loc 1 1134 0
 4224 0022 1437     		adds	r7, r7, #20
 4225              		.cfi_def_cfa_offset 4
 4226 0024 BD46     		mov	sp, r7
 4227              		.cfi_def_cfa_register 13
 4228              		@ sp needed
 4229 0026 5DF8047B 		ldr	r7, [sp], #4
 4230              		.cfi_restore 7
 4231              		.cfi_def_cfa_offset 0
 4232 002a 7047     		bx	lr
 4233              		.cfi_endproc
 4234              	.LFE20:
 4236              		.section	.text.main,"ax",%progbits
 4237              		.align	2
 4238              		.global	main
 4239              		.thumb
 4240              		.thumb_func
 4242              	main:
 4243              	.LFB21:
1135:assembly_test.c **** 
1136:assembly_test.c **** int main()
1137:assembly_test.c **** {
 4244              		.loc 1 1137 0
 4245              		.cfi_startproc
ARM GAS  /tmp/cc74qjbb.s 			page 95


 4246              		@ args = 0, pretend = 0, frame = 8
 4247              		@ frame_needed = 1, uses_anonymous_args = 0
 4248 0000 80B5     		push	{r7, lr}
 4249              		.cfi_def_cfa_offset 8
 4250              		.cfi_offset 7, -8
 4251              		.cfi_offset 14, -4
 4252 0002 82B0     		sub	sp, sp, #8
 4253              		.cfi_def_cfa_offset 16
 4254 0004 00AF     		add	r7, sp, #0
 4255              		.cfi_def_cfa_register 7
1138:assembly_test.c **** 	int i;
1139:assembly_test.c **** 
1140:assembly_test.c **** 	gpio_init();
 4256              		.loc 1 1140 0
 4257 0006 FFF7FEFF 		bl	gpio_init
1141:assembly_test.c **** 
1142:assembly_test.c **** 	/* blinky */
1143:assembly_test.c **** 	for (i = 0; i < 2; i++) {
 4258              		.loc 1 1143 0
 4259 000a 0023     		movs	r3, #0
 4260 000c 7B60     		str	r3, [r7, #4]
 4261 000e 1CE0     		b	.L238
 4262              	.L239:
1144:assembly_test.c **** 		TXLED_SET;
 4263              		.loc 1 1144 0 discriminator 3
 4264 0010 534B     		ldr	r3, .L250
 4265 0012 4FF48072 		mov	r2, #256
 4266 0016 1A60     		str	r2, [r3]
1145:assembly_test.c **** 		RXLED_SET;
 4267              		.loc 1 1145 0 discriminator 3
 4268 0018 514B     		ldr	r3, .L250
 4269 001a 1022     		movs	r2, #16
 4270 001c 1A60     		str	r2, [r3]
1146:assembly_test.c **** 		USRLED_SET;
 4271              		.loc 1 1146 0 discriminator 3
 4272 001e 504B     		ldr	r3, .L250
 4273 0020 0222     		movs	r2, #2
 4274 0022 1A60     		str	r2, [r3]
1147:assembly_test.c **** 		waitms(200);
 4275              		.loc 1 1147 0 discriminator 3
 4276 0024 C820     		movs	r0, #200
 4277 0026 FFF7FEFF 		bl	waitms
1148:assembly_test.c **** 		TXLED_CLR;
 4278              		.loc 1 1148 0 discriminator 3
 4279 002a 4E4B     		ldr	r3, .L250+4
 4280 002c 4FF48072 		mov	r2, #256
 4281 0030 1A60     		str	r2, [r3]
1149:assembly_test.c **** 		RXLED_CLR;
 4282              		.loc 1 1149 0 discriminator 3
 4283 0032 4C4B     		ldr	r3, .L250+4
 4284 0034 1022     		movs	r2, #16
 4285 0036 1A60     		str	r2, [r3]
1150:assembly_test.c **** 		USRLED_CLR;
 4286              		.loc 1 1150 0 discriminator 3
 4287 0038 4A4B     		ldr	r3, .L250+4
 4288 003a 0222     		movs	r2, #2
 4289 003c 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc74qjbb.s 			page 96


1151:assembly_test.c **** 		waitms(200);
 4290              		.loc 1 1151 0 discriminator 3
 4291 003e C820     		movs	r0, #200
 4292 0040 FFF7FEFF 		bl	waitms
1143:assembly_test.c **** 		TXLED_SET;
 4293              		.loc 1 1143 0 discriminator 3
 4294 0044 7B68     		ldr	r3, [r7, #4]
 4295 0046 0133     		adds	r3, r3, #1
 4296 0048 7B60     		str	r3, [r7, #4]
 4297              	.L238:
1143:assembly_test.c **** 		TXLED_SET;
 4298              		.loc 1 1143 0 is_stmt 0 discriminator 1
 4299 004a 7B68     		ldr	r3, [r7, #4]
 4300 004c 012B     		cmp	r3, #1
 4301 004e DFDD     		ble	.L239
1152:assembly_test.c **** 	}
1153:assembly_test.c **** 
1154:assembly_test.c **** 	/* cc2400_test */
1155:assembly_test.c **** 	cc2400_init();
 4302              		.loc 1 1155 0 is_stmt 1
 4303 0050 FFF7FEFF 		bl	cc2400_init
1156:assembly_test.c **** 	TXLED_SET;
 4304              		.loc 1 1156 0
 4305 0054 424B     		ldr	r3, .L250
 4306 0056 4FF48072 		mov	r2, #256
 4307 005a 1A60     		str	r2, [r3]
1157:assembly_test.c **** 	waitms(200);
 4308              		.loc 1 1157 0
 4309 005c C820     		movs	r0, #200
 4310 005e FFF7FEFF 		bl	waitms
1158:assembly_test.c **** 	TXLED_CLR;
 4311              		.loc 1 1158 0
 4312 0062 404B     		ldr	r3, .L250+4
 4313 0064 4FF48072 		mov	r2, #256
 4314 0068 1A60     		str	r2, [r3]
1159:assembly_test.c **** 	waitms(200);
 4315              		.loc 1 1159 0
 4316 006a C820     		movs	r0, #200
 4317 006c FFF7FEFF 		bl	waitms
1160:assembly_test.c **** 	cc2400_reset();
 4318              		.loc 1 1160 0
 4319 0070 FFF7FEFF 		bl	cc2400_reset
1161:assembly_test.c **** 	TXLED_SET;
 4320              		.loc 1 1161 0
 4321 0074 3A4B     		ldr	r3, .L250
 4322 0076 4FF48072 		mov	r2, #256
 4323 007a 1A60     		str	r2, [r3]
1162:assembly_test.c **** 	waitms(200);
 4324              		.loc 1 1162 0
 4325 007c C820     		movs	r0, #200
 4326 007e FFF7FEFF 		bl	waitms
1163:assembly_test.c **** 	TXLED_CLR;
 4327              		.loc 1 1163 0
 4328 0082 384B     		ldr	r3, .L250+4
 4329 0084 4FF48072 		mov	r2, #256
 4330 0088 1A60     		str	r2, [r3]
1164:assembly_test.c **** 	waitms(200);
ARM GAS  /tmp/cc74qjbb.s 			page 97


 4331              		.loc 1 1164 0
 4332 008a C820     		movs	r0, #200
 4333 008c FFF7FEFF 		bl	waitms
1165:assembly_test.c **** 	if (cc2400_get(AGCCTRL) != 0xf700)
 4334              		.loc 1 1165 0
 4335 0090 0420     		movs	r0, #4
 4336 0092 FFF7FEFF 		bl	cc2400_get
 4337 0096 0346     		mov	r3, r0
 4338 0098 B3F5774F 		cmp	r3, #63232
 4339 009c 00D0     		beq	.L240
 4340              	.L241:
1166:assembly_test.c **** 		while(1);
 4341              		.loc 1 1166 0 discriminator 1
 4342 009e FEE7     		b	.L241
 4343              	.L240:
1167:assembly_test.c **** 	TXLED_SET;
 4344              		.loc 1 1167 0
 4345 00a0 2F4B     		ldr	r3, .L250
 4346 00a2 4FF48072 		mov	r2, #256
 4347 00a6 1A60     		str	r2, [r3]
1168:assembly_test.c **** 	waitms(200);
 4348              		.loc 1 1168 0
 4349 00a8 C820     		movs	r0, #200
 4350 00aa FFF7FEFF 		bl	waitms
1169:assembly_test.c **** 
1170:assembly_test.c **** 	/* clock_test */
1171:assembly_test.c **** 	clock_start();
 4351              		.loc 1 1171 0
 4352 00ae FFF7FEFF 		bl	clock_start
1172:assembly_test.c **** 	for (i = 0; i < 4; i++) {
 4353              		.loc 1 1172 0
 4354 00b2 0023     		movs	r3, #0
 4355 00b4 7B60     		str	r3, [r7, #4]
 4356 00b6 0EE0     		b	.L242
 4357              	.L243:
1173:assembly_test.c **** 		RXLED_SET;
 4358              		.loc 1 1173 0 discriminator 3
 4359 00b8 294B     		ldr	r3, .L250
 4360 00ba 1022     		movs	r2, #16
 4361 00bc 1A60     		str	r2, [r3]
1174:assembly_test.c **** 		wait(2);
 4362              		.loc 1 1174 0 discriminator 3
 4363 00be 0220     		movs	r0, #2
 4364 00c0 FFF7FEFF 		bl	wait
1175:assembly_test.c **** 		RXLED_CLR;
 4365              		.loc 1 1175 0 discriminator 3
 4366 00c4 274B     		ldr	r3, .L250+4
 4367 00c6 1022     		movs	r2, #16
 4368 00c8 1A60     		str	r2, [r3]
1176:assembly_test.c **** 		wait(2);
 4369              		.loc 1 1176 0 discriminator 3
 4370 00ca 0220     		movs	r0, #2
 4371 00cc FFF7FEFF 		bl	wait
1172:assembly_test.c **** 		RXLED_SET;
 4372              		.loc 1 1172 0 discriminator 3
 4373 00d0 7B68     		ldr	r3, [r7, #4]
 4374 00d2 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc74qjbb.s 			page 98


 4375 00d4 7B60     		str	r3, [r7, #4]
 4376              	.L242:
1172:assembly_test.c **** 		RXLED_SET;
 4377              		.loc 1 1172 0 is_stmt 0 discriminator 1
 4378 00d6 7B68     		ldr	r3, [r7, #4]
 4379 00d8 032B     		cmp	r3, #3
 4380 00da EDDD     		ble	.L243
1177:assembly_test.c **** 	}
1178:assembly_test.c **** 	RXLED_SET;
 4381              		.loc 1 1178 0 is_stmt 1
 4382 00dc 204B     		ldr	r3, .L250
 4383 00de 1022     		movs	r2, #16
 4384 00e0 1A60     		str	r2, [r3]
1179:assembly_test.c **** 
1180:assembly_test.c **** 	clkn_init();
 4385              		.loc 1 1180 0
 4386 00e2 FFF7FEFF 		bl	clkn_init
1181:assembly_test.c **** 	bt_test_rx();
 4387              		.loc 1 1181 0
 4388 00e6 FFF7FEFF 		bl	bt_test_rx
1182:assembly_test.c **** 	USRLED_SET;
 4389              		.loc 1 1182 0
 4390 00ea 1D4B     		ldr	r3, .L250
 4391 00ec 0222     		movs	r2, #2
 4392 00ee 1A60     		str	r2, [r3]
1183:assembly_test.c **** 
1184:assembly_test.c **** 	/*
1185:assembly_test.c **** 	 * Now we function like bluetooth_rxtx so that the USB interface can be
1186:assembly_test.c **** 	 * tested.
1187:assembly_test.c **** 	 */
1188:assembly_test.c **** 	ubertooth_usb_init();
 4393              		.loc 1 1188 0
 4394 00f0 FFF7FEFF 		bl	ubertooth_usb_init
 4395              	.L249:
1189:assembly_test.c **** 
1190:assembly_test.c **** 	while (1) {
1191:assembly_test.c **** 		USBHwISR();
 4396              		.loc 1 1191 0
 4397 00f4 FFF7FEFF 		bl	USBHwISR
1192:assembly_test.c **** 		if (rx_pkts)
 4398              		.loc 1 1192 0
 4399 00f8 1B4B     		ldr	r3, .L250+8
 4400 00fa 1B68     		ldr	r3, [r3]
 4401 00fc 002B     		cmp	r3, #0
 4402 00fe 02D0     		beq	.L244
1193:assembly_test.c **** 			bt_stream_rx();
 4403              		.loc 1 1193 0
 4404 0100 FFF7FEFF 		bl	bt_stream_rx
 4405 0104 2AE0     		b	.L245
 4406              	.L244:
1194:assembly_test.c **** 		else if (requested_mode == MODE_TX_TEST && mode != MODE_TX_TEST)
 4407              		.loc 1 1194 0
 4408 0106 194B     		ldr	r3, .L250+12
 4409 0108 1B68     		ldr	r3, [r3]
 4410 010a 032B     		cmp	r3, #3
 4411 010c 06D1     		bne	.L246
 4412              		.loc 1 1194 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc74qjbb.s 			page 99


 4413 010e 184B     		ldr	r3, .L250+16
 4414 0110 1B68     		ldr	r3, [r3]
 4415 0112 032B     		cmp	r3, #3
 4416 0114 02D0     		beq	.L246
1195:assembly_test.c **** 			cc2400_txtest();
 4417              		.loc 1 1195 0 is_stmt 1
 4418 0116 FFF7FEFF 		bl	cc2400_txtest
 4419 011a 1FE0     		b	.L245
 4420              	.L246:
1196:assembly_test.c **** 		else if (requested_mode == MODE_RANGE_TEST && mode != MODE_RANGE_TEST)
 4421              		.loc 1 1196 0
 4422 011c 134B     		ldr	r3, .L250+12
 4423 011e 1B68     		ldr	r3, [r3]
 4424 0120 052B     		cmp	r3, #5
 4425 0122 06D1     		bne	.L247
 4426              		.loc 1 1196 0 is_stmt 0 discriminator 1
 4427 0124 124B     		ldr	r3, .L250+16
 4428 0126 1B68     		ldr	r3, [r3]
 4429 0128 052B     		cmp	r3, #5
 4430 012a 02D0     		beq	.L247
1197:assembly_test.c **** 			cc2400_rangetest();
 4431              		.loc 1 1197 0 is_stmt 1
 4432 012c FFF7FEFF 		bl	cc2400_rangetest
 4433 0130 14E0     		b	.L245
 4434              	.L247:
1198:assembly_test.c **** 		else if (requested_mode == MODE_REPEATER && mode != MODE_REPEATER)
 4435              		.loc 1 1198 0
 4436 0132 0E4B     		ldr	r3, .L250+12
 4437 0134 1B68     		ldr	r3, [r3]
 4438 0136 062B     		cmp	r3, #6
 4439 0138 06D1     		bne	.L248
 4440              		.loc 1 1198 0 is_stmt 0 discriminator 1
 4441 013a 0D4B     		ldr	r3, .L250+16
 4442 013c 1B68     		ldr	r3, [r3]
 4443 013e 062B     		cmp	r3, #6
 4444 0140 02D0     		beq	.L248
1199:assembly_test.c **** 			cc2400_repeater();
 4445              		.loc 1 1199 0 is_stmt 1
 4446 0142 FFF7FEFF 		bl	cc2400_repeater
 4447 0146 09E0     		b	.L245
 4448              	.L248:
1200:assembly_test.c **** 		else if (requested_mode == MODE_SPECAN && mode != MODE_SPECAN)
 4449              		.loc 1 1200 0
 4450 0148 084B     		ldr	r3, .L250+12
 4451 014a 1B68     		ldr	r3, [r3]
 4452 014c 042B     		cmp	r3, #4
 4453 014e 05D1     		bne	.L245
 4454              		.loc 1 1200 0 is_stmt 0 discriminator 1
 4455 0150 074B     		ldr	r3, .L250+16
 4456 0152 1B68     		ldr	r3, [r3]
 4457 0154 042B     		cmp	r3, #4
 4458 0156 01D0     		beq	.L245
1201:assembly_test.c **** 			specan();
 4459              		.loc 1 1201 0 is_stmt 1
 4460 0158 FFF7FEFF 		bl	specan
 4461              	.L245:
1202:assembly_test.c **** 		//FIXME do other modes like this
ARM GAS  /tmp/cc74qjbb.s 			page 100


1203:assembly_test.c **** 	}
 4462              		.loc 1 1203 0
 4463 015c CAE7     		b	.L249
 4464              	.L251:
 4465 015e 00BF     		.align	2
 4466              	.L250:
 4467 0160 38C00920 		.word	537509944
 4468 0164 3CC00920 		.word	537509948
 4469 0168 00000000 		.word	rx_pkts
 4470 016c 00000000 		.word	requested_mode
 4471 0170 00000000 		.word	mode
 4472              		.cfi_endproc
 4473              	.LFE21:
 4475              		.text
 4476              	.Letext0:
 4477              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdint-gcc.h"
 4478              		.file 3 "../../host/libubertooth/src/ubertooth_interface.h"
 4479              		.file 4 "../common/ubertooth.h"
 4480              		.file 5 "../common/lpcusb/target/type.h"
 4481              		.file 6 "../common/lpcusb/target/usbstruct.h"
ARM GAS  /tmp/cc74qjbb.s 			page 101


DEFINED SYMBOLS
                            *ABS*:0000000000000000 assembly_test.c
     /tmp/cc74qjbb.s:19     .data:0000000000000000 $d
     /tmp/cc74qjbb.s:22     .data:0000000000000000 iap_entry
                            *COM*:0000000000000001 clkn_high
                            *COM*:0000000000000032 rxbuf1
                            *COM*:0000000000000032 rxbuf2
     /tmp/cc74qjbb.s:31     .data:0000000000000004 active_rxbuf
     /tmp/cc74qjbb.s:37     .data:0000000000000008 idle_rxbuf
                            *COM*:0000000000000005 rr
     /tmp/cc74qjbb.s:45     .bss:0000000000000000 mode
     /tmp/cc74qjbb.s:42     .bss:0000000000000000 $d
     /tmp/cc74qjbb.s:51     .bss:0000000000000004 requested_mode
     /tmp/cc74qjbb.s:57     .bss:0000000000000008 modulation
     /tmp/cc74qjbb.s:64     .data:000000000000000c channel
     /tmp/cc74qjbb.s:70     .data:000000000000000e low_freq
     /tmp/cc74qjbb.s:76     .data:0000000000000010 high_freq
                            *COM*:0000000000000010 rx_dma_lli1
                            *COM*:0000000000000010 rx_dma_lli2
                            *COM*:0000000000000004 rx_tc
                            *COM*:0000000000000004 rx_err
     /tmp/cc74qjbb.s:87     .bss:000000000000000c rx_pkts
     /tmp/cc74qjbb.s:92     .bss:0000000000000010 status
                            *COM*:0000000000002000 fifo
     /tmp/cc74qjbb.s:99     .bss:0000000000000014 head
     /tmp/cc74qjbb.s:105    .bss:0000000000000018 tail
     /tmp/cc74qjbb.s:108    .text.queue_init:0000000000000000 $t
     /tmp/cc74qjbb.s:113    .text.queue_init:0000000000000000 queue_init
     /tmp/cc74qjbb.s:145    .text.queue_init:0000000000000018 $d
     /tmp/cc74qjbb.s:151    .text.enqueue:0000000000000000 $t
     /tmp/cc74qjbb.s:156    .text.enqueue:0000000000000000 enqueue
     /tmp/cc74qjbb.s:285    .text.enqueue:00000000000000bc $d
     /tmp/cc74qjbb.s:296    .text.dequeue:0000000000000000 $t
     /tmp/cc74qjbb.s:301    .text.dequeue:0000000000000000 dequeue
     /tmp/cc74qjbb.s:369    .text.dequeue:0000000000000058 $d
     /tmp/cc74qjbb.s:377    .rodata:0000000000000000 $d
     /tmp/cc74qjbb.s:380    .rodata:0000000000000000 abDescriptors
     /tmp/cc74qjbb.s:572    .bss:000000000000001c abVendorReqData
     /tmp/cc74qjbb.s:575    .text.usb_bulk_in_handler:0000000000000000 $t
     /tmp/cc74qjbb.s:579    .text.usb_bulk_in_handler:0000000000000000 usb_bulk_in_handler
     /tmp/cc74qjbb.s:617    .text.usb_bulk_out_handler:0000000000000000 $t
     /tmp/cc74qjbb.s:621    .text.usb_bulk_out_handler:0000000000000000 usb_bulk_out_handler
     /tmp/cc74qjbb.s:658    .text.usb_vendor_request_handler:0000000000000000 $t
     /tmp/cc74qjbb.s:662    .text.usb_vendor_request_handler:0000000000000000 usb_vendor_request_handler
     /tmp/cc74qjbb.s:692    .text.usb_vendor_request_handler:0000000000000024 $d
     /tmp/cc74qjbb.s:726    .text.usb_vendor_request_handler:00000000000000ac $t
     /tmp/cc74qjbb.s:1139   .text.usb_vendor_request_handler:0000000000000334 $d
     /tmp/cc74qjbb.s:1149   .text.usb_vendor_request_handler:0000000000000354 $t
     /tmp/cc74qjbb.s:1513   .text.usb_vendor_request_handler:0000000000000580 $d
     /tmp/cc74qjbb.s:1530   .text.ubertooth_usb_init:0000000000000000 $t
     /tmp/cc74qjbb.s:1535   .text.ubertooth_usb_init:0000000000000000 ubertooth_usb_init
     /tmp/cc74qjbb.s:1568   .text.ubertooth_usb_init:0000000000000024 $d
     /tmp/cc74qjbb.s:1575   .text.clkn_init:0000000000000000 $t
     /tmp/cc74qjbb.s:1579   .text.clkn_init:0000000000000000 clkn_init
     /tmp/cc74qjbb.s:1632   .text.clkn_init:000000000000003c $d
     /tmp/cc74qjbb.s:1643   .text.TIMER0_IRQHandler:0000000000000000 $t
     /tmp/cc74qjbb.s:1648   .text.TIMER0_IRQHandler:0000000000000000 TIMER0_IRQHandler
ARM GAS  /tmp/cc74qjbb.s 			page 102


     /tmp/cc74qjbb.s:1692   .text.TIMER0_IRQHandler:0000000000000038 $d
     /tmp/cc74qjbb.s:1697   .text.dma_init:0000000000000000 $t
     /tmp/cc74qjbb.s:1701   .text.dma_init:0000000000000000 dma_init
     /tmp/cc74qjbb.s:1853   .text.dma_init:00000000000000d8 $d
     /tmp/cc74qjbb.s:1882   .text.DMA_IRQHandler:0000000000000000 $t
     /tmp/cc74qjbb.s:1887   .text.DMA_IRQHandler:0000000000000000 DMA_IRQHandler
     /tmp/cc74qjbb.s:1954   .text.DMA_IRQHandler:000000000000005c $d
     /tmp/cc74qjbb.s:1965   .text.dio_ssp_start:0000000000000000 $t
     /tmp/cc74qjbb.s:1969   .text.dio_ssp_start:0000000000000000 dio_ssp_start
     /tmp/cc74qjbb.s:2024   .text.dio_ssp_start:000000000000004c $d
     /tmp/cc74qjbb.s:2034   .text.cc2400_rx:0000000000000000 $t
     /tmp/cc74qjbb.s:2039   .text.cc2400_rx:0000000000000000 cc2400_rx
     /tmp/cc74qjbb.s:2164   .text.cc2400_rx:00000000000000dc $d
     /tmp/cc74qjbb.s:2171   .text.cc2400_txtest:0000000000000000 $t
     /tmp/cc74qjbb.s:2176   .text.cc2400_txtest:0000000000000000 cc2400_txtest
     /tmp/cc74qjbb.s:2293   .text.cc2400_txtest:00000000000000c4 $d
     /tmp/cc74qjbb.s:2302   .text.cc2400_rangetest:0000000000000000 $t
     /tmp/cc74qjbb.s:2307   .text.cc2400_rangetest:0000000000000000 cc2400_rangetest
     /tmp/cc74qjbb.s:2805   .text.cc2400_rangetest:0000000000000384 $d
     /tmp/cc74qjbb.s:2813   .text.cc2400_rangetest:000000000000039c $t
     /tmp/cc74qjbb.s:2929   .text.cc2400_rangetest:0000000000000450 $d
     /tmp/cc74qjbb.s:2938   .text.cc2400_repeater:0000000000000000 $t
     /tmp/cc74qjbb.s:2943   .text.cc2400_repeater:0000000000000000 cc2400_repeater
     /tmp/cc74qjbb.s:3310   .text.cc2400_repeater:000000000000026c $d
     /tmp/cc74qjbb.s:3320   .text.bt_stream_rx:0000000000000000 $t
     /tmp/cc74qjbb.s:3325   .text.bt_stream_rx:0000000000000000 bt_stream_rx
     /tmp/cc74qjbb.s:3502   .text.bt_stream_rx:0000000000000108 $d
     /tmp/cc74qjbb.s:3514   .text.specan:0000000000000000 $t
     /tmp/cc74qjbb.s:3519   .text.specan:0000000000000000 specan
     /tmp/cc74qjbb.s:3742   .text.specan:0000000000000190 $d
     /tmp/cc74qjbb.s:3812   .text.find_giac:0000000000000000 $t
     /tmp/cc74qjbb.s:3817   .text.find_giac:0000000000000000 find_giac
     /tmp/cc74qjbb.s:4014   .text.find_giac:0000000000000148 $d
     /tmp/cc74qjbb.s:4019   .text.bt_test_rx:0000000000000000 $t
     /tmp/cc74qjbb.s:4024   .text.bt_test_rx:0000000000000000 bt_test_rx
     /tmp/cc74qjbb.s:4179   .text.bt_test_rx:00000000000000d0 $d
     /tmp/cc74qjbb.s:4189   .text.waitms:0000000000000000 $t
     /tmp/cc74qjbb.s:4194   .text.waitms:0000000000000000 waitms
     /tmp/cc74qjbb.s:4237   .text.main:0000000000000000 $t
     /tmp/cc74qjbb.s:4242   .text.main:0000000000000000 main
     /tmp/cc74qjbb.s:4467   .text.main:0000000000000160 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBHwEPWrite
reset
cc2400_get
cc2400_set
strlen
memcpy
bootloader_ctrl
USBInit
USBRegisterDescriptors
USBRegisterRequestHandler
USBHwConnect
cc2400_status
cc2400_strobe
ARM GAS  /tmp/cc74qjbb.s 			page 103


cc2400_set8
cc2400_get8
dio_ssp_init
USBHwEPGetStatus
USBHwISR
gpio_init
cc2400_init
cc2400_reset
clock_start
wait
