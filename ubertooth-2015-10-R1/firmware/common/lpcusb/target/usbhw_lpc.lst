ARM GAS  /tmp/cczMJFp8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbhw_lpc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	_pfnDevIntHandler:
  21 0000 00000000 		.space	4
  22              		.align	2
  23              	_apfnEPIntHandlers:
  24 0004 00000000 		.space	64
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.align	2
  26              	_pfnFrameHandler:
  27 0044 00000000 		.space	4
  28              		.section	.text.Wait4DevInt,"ax",%progbits
  29              		.align	2
  30              		.thumb
  31              		.thumb_func
  33              	Wait4DevInt:
  34              	.LFB0:
  35              		.file 1 "../common/lpcusb/target/usbhw_lpc.c"
   1:../common/lpcusb/target/usbhw_lpc.c **** /*
   2:../common/lpcusb/target/usbhw_lpc.c ****     LPCUSB, an USB device driver for LPC microcontrollers   
   3:../common/lpcusb/target/usbhw_lpc.c ****     Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:../common/lpcusb/target/usbhw_lpc.c **** 
   5:../common/lpcusb/target/usbhw_lpc.c ****     Redistribution and use in source and binary forms, with or without
   6:../common/lpcusb/target/usbhw_lpc.c ****     modification, are permitted provided that the following conditions are met:
   7:../common/lpcusb/target/usbhw_lpc.c **** 
   8:../common/lpcusb/target/usbhw_lpc.c ****     1. Redistributions of source code must retain the above copyright
   9:../common/lpcusb/target/usbhw_lpc.c ****        notice, this list of conditions and the following disclaimer.
  10:../common/lpcusb/target/usbhw_lpc.c ****     2. Redistributions in binary form must reproduce the above copyright
  11:../common/lpcusb/target/usbhw_lpc.c ****        notice, this list of conditions and the following disclaimer in the
  12:../common/lpcusb/target/usbhw_lpc.c ****        documentation and/or other materials provided with the distribution.
  13:../common/lpcusb/target/usbhw_lpc.c ****     3. The name of the author may not be used to endorse or promote products
  14:../common/lpcusb/target/usbhw_lpc.c ****        derived from this software without specific prior written permission.
  15:../common/lpcusb/target/usbhw_lpc.c **** 
  16:../common/lpcusb/target/usbhw_lpc.c ****     THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  17:../common/lpcusb/target/usbhw_lpc.c ****     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  18:../common/lpcusb/target/usbhw_lpc.c ****     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  19:../common/lpcusb/target/usbhw_lpc.c ****     IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
ARM GAS  /tmp/cczMJFp8.s 			page 2


  20:../common/lpcusb/target/usbhw_lpc.c ****     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  21:../common/lpcusb/target/usbhw_lpc.c ****     NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  22:../common/lpcusb/target/usbhw_lpc.c ****     DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  23:../common/lpcusb/target/usbhw_lpc.c ****     THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  24:../common/lpcusb/target/usbhw_lpc.c ****     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  25:../common/lpcusb/target/usbhw_lpc.c ****     THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  26:../common/lpcusb/target/usbhw_lpc.c **** */
  27:../common/lpcusb/target/usbhw_lpc.c **** 
  28:../common/lpcusb/target/usbhw_lpc.c **** 
  29:../common/lpcusb/target/usbhw_lpc.c **** /** @file
  30:../common/lpcusb/target/usbhw_lpc.c ****     USB hardware layer
  31:../common/lpcusb/target/usbhw_lpc.c ****  */
  32:../common/lpcusb/target/usbhw_lpc.c **** 
  33:../common/lpcusb/target/usbhw_lpc.c **** #include "type.h"
  34:../common/lpcusb/target/usbhw_lpc.c **** #include "debug.h"
  35:../common/lpcusb/target/usbhw_lpc.c **** 
  36:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC17xx
  37:../common/lpcusb/target/usbhw_lpc.c **** #include "lpc17.h"
  38:../common/lpcusb/target/usbhw_lpc.c **** #endif
  39:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC214x
  40:../common/lpcusb/target/usbhw_lpc.c **** #include "lpc214x.h"
  41:../common/lpcusb/target/usbhw_lpc.c **** #endif
  42:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC23xx
  43:../common/lpcusb/target/usbhw_lpc.c **** #include "lpc23xx.h"
  44:../common/lpcusb/target/usbhw_lpc.c **** #endif
  45:../common/lpcusb/target/usbhw_lpc.c **** #include "usbhw_lpc.h"
  46:../common/lpcusb/target/usbhw_lpc.c **** #include "usbapi.h"
  47:../common/lpcusb/target/usbhw_lpc.c **** 
  48:../common/lpcusb/target/usbhw_lpc.c **** 
  49:../common/lpcusb/target/usbhw_lpc.c **** #ifdef DEBUG
  50:../common/lpcusb/target/usbhw_lpc.c **** // comment out the following line if you don't want to use debug LEDs
  51:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED
  52:../common/lpcusb/target/usbhw_lpc.c **** #endif
  53:../common/lpcusb/target/usbhw_lpc.c **** 
  54:../common/lpcusb/target/usbhw_lpc.c **** #ifdef DEBUG_LED
  55:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC17xx
  56:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)
  57:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_ON(x)
  58:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)
  59:../common/lpcusb/target/usbhw_lpc.c **** #elif LPC214x
  60:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_ON(x)     IOCLR0 = (1 << x);
  61:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)    IOSET0 = (1 << x);
  62:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)   PINSEL0 &= ~(0x3 << (2*x)); IODIR0 |= (1 << x); DEBUG_LED_OFF(x);
  63:../common/lpcusb/target/usbhw_lpc.c **** #else
  64:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_ON(x)     FIO2SET = (1 << (x-8));
  65:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)    FIO2CLR = (1 << (x-8));
  66:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)   SCS |= 1; PINSEL10 = 0; FIO2DIR |= (1 << (x-8)); DEBUG_LED_OFF(x);
  67:../common/lpcusb/target/usbhw_lpc.c **** #endif
  68:../common/lpcusb/target/usbhw_lpc.c **** #else
  69:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)   /**< LED initialisation macro */
  70:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_ON(x)     /**< turn LED on */
  71:../common/lpcusb/target/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)    /**< turn LED off */
  72:../common/lpcusb/target/usbhw_lpc.c **** #endif
  73:../common/lpcusb/target/usbhw_lpc.c **** 
  74:../common/lpcusb/target/usbhw_lpc.c **** /** Installed device interrupt handler */
  75:../common/lpcusb/target/usbhw_lpc.c **** static TFnDevIntHandler *_pfnDevIntHandler = NULL;
  76:../common/lpcusb/target/usbhw_lpc.c **** /** Installed endpoint interrupt handlers */
ARM GAS  /tmp/cczMJFp8.s 			page 3


  77:../common/lpcusb/target/usbhw_lpc.c **** static TFnEPIntHandler  *_apfnEPIntHandlers[16];
  78:../common/lpcusb/target/usbhw_lpc.c **** /** Installed frame interrupt handlers */
  79:../common/lpcusb/target/usbhw_lpc.c **** static TFnFrameHandler  *_pfnFrameHandler = NULL;
  80:../common/lpcusb/target/usbhw_lpc.c **** 
  81:../common/lpcusb/target/usbhw_lpc.c **** /** convert from endpoint address to endpoint index */
  82:../common/lpcusb/target/usbhw_lpc.c **** #define EP2IDX(bEP) ((((bEP)&0xF)<<1)|(((bEP)&0x80)>>7))
  83:../common/lpcusb/target/usbhw_lpc.c **** /** convert from endpoint index to endpoint address */
  84:../common/lpcusb/target/usbhw_lpc.c **** #define IDX2EP(idx) ((((idx)<<7)&0x80)|(((idx)>>1)&0xF))
  85:../common/lpcusb/target/usbhw_lpc.c **** 
  86:../common/lpcusb/target/usbhw_lpc.c **** 
  87:../common/lpcusb/target/usbhw_lpc.c **** 
  88:../common/lpcusb/target/usbhw_lpc.c **** /**
  89:../common/lpcusb/target/usbhw_lpc.c ****     Local function to wait for a device interrupt (and clear it)
  90:../common/lpcusb/target/usbhw_lpc.c ****         
  91:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] dwIntr      Bitmask of interrupts to wait for   
  92:../common/lpcusb/target/usbhw_lpc.c ****  */
  93:../common/lpcusb/target/usbhw_lpc.c **** static void Wait4DevInt(U32 dwIntr)
  94:../common/lpcusb/target/usbhw_lpc.c **** {
  36              		.loc 1 94 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 8
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 7, -4
  44 0002 83B0     		sub	sp, sp, #12
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
  95:../common/lpcusb/target/usbhw_lpc.c ****     // wait for specific interrupt
  96:../common/lpcusb/target/usbhw_lpc.c ****     while ((USBDevIntSt & dwIntr) != dwIntr);
  49              		.loc 1 96 0
  50 0008 00BF     		nop
  51              	.L2:
  52              		.loc 1 96 0 is_stmt 0 discriminator 1
  53 000a 074B     		ldr	r3, .L3
  54 000c 1A68     		ldr	r2, [r3]
  55 000e 7B68     		ldr	r3, [r7, #4]
  56 0010 1A40     		ands	r2, r2, r3
  57 0012 7B68     		ldr	r3, [r7, #4]
  58 0014 9A42     		cmp	r2, r3
  59 0016 F8D1     		bne	.L2
  97:../common/lpcusb/target/usbhw_lpc.c ****     // clear the interrupt bits
  98:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntClr = dwIntr;
  60              		.loc 1 98 0 is_stmt 1
  61 0018 044A     		ldr	r2, .L3+4
  62 001a 7B68     		ldr	r3, [r7, #4]
  63 001c 1360     		str	r3, [r2]
  99:../common/lpcusb/target/usbhw_lpc.c **** }
  64              		.loc 1 99 0
  65 001e 0C37     		adds	r7, r7, #12
  66              		.cfi_def_cfa_offset 4
  67 0020 BD46     		mov	sp, r7
  68              		.cfi_def_cfa_register 13
  69              		@ sp needed
ARM GAS  /tmp/cczMJFp8.s 			page 4


  70 0022 5DF8047B 		ldr	r7, [sp], #4
  71              		.cfi_restore 7
  72              		.cfi_def_cfa_offset 0
  73 0026 7047     		bx	lr
  74              	.L4:
  75              		.align	2
  76              	.L3:
  77 0028 00C20050 		.word	1342226944
  78 002c 08C20050 		.word	1342226952
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.section	.text.USBHwCmd,"ax",%progbits
  83              		.align	2
  84              		.thumb
  85              		.thumb_func
  87              	USBHwCmd:
  88              	.LFB1:
 100:../common/lpcusb/target/usbhw_lpc.c **** 
 101:../common/lpcusb/target/usbhw_lpc.c **** 
 102:../common/lpcusb/target/usbhw_lpc.c **** /**
 103:../common/lpcusb/target/usbhw_lpc.c ****     Local function to send a command to the USB protocol engine
 104:../common/lpcusb/target/usbhw_lpc.c ****         
 105:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bCmd        Command to send
 106:../common/lpcusb/target/usbhw_lpc.c ****  */
 107:../common/lpcusb/target/usbhw_lpc.c **** static void USBHwCmd(U8 bCmd)
 108:../common/lpcusb/target/usbhw_lpc.c **** {
  89              		.loc 1 108 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 82B0     		sub	sp, sp, #8
  98              		.cfi_def_cfa_offset 16
  99 0004 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 101 0006 0346     		mov	r3, r0
 102 0008 FB71     		strb	r3, [r7, #7]
 109:../common/lpcusb/target/usbhw_lpc.c ****     // clear CDFULL/CCEMTY
 110:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntClr = CDFULL | CCEMTY;
 103              		.loc 1 110 0
 104 000a 074B     		ldr	r3, .L6
 105 000c 3022     		movs	r2, #48
 106 000e 1A60     		str	r2, [r3]
 111:../common/lpcusb/target/usbhw_lpc.c ****     // write command code
 112:../common/lpcusb/target/usbhw_lpc.c ****     USBCmdCode = 0x00000500 | (bCmd << 16);
 107              		.loc 1 112 0
 108 0010 064A     		ldr	r2, .L6+4
 109 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 110 0014 1B04     		lsls	r3, r3, #16
 111 0016 43F4A063 		orr	r3, r3, #1280
 112 001a 1360     		str	r3, [r2]
 113:../common/lpcusb/target/usbhw_lpc.c ****     Wait4DevInt(CCEMTY);
 113              		.loc 1 113 0
 114 001c 1020     		movs	r0, #16
ARM GAS  /tmp/cczMJFp8.s 			page 5


 115 001e FFF7FEFF 		bl	Wait4DevInt
 114:../common/lpcusb/target/usbhw_lpc.c **** }
 116              		.loc 1 114 0
 117 0022 0837     		adds	r7, r7, #8
 118              		.cfi_def_cfa_offset 8
 119 0024 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0026 80BD     		pop	{r7, pc}
 123              	.L7:
 124              		.align	2
 125              	.L6:
 126 0028 08C20050 		.word	1342226952
 127 002c 10C20050 		.word	1342226960
 128              		.cfi_endproc
 129              	.LFE1:
 131              		.section	.text.USBHwCmdWrite,"ax",%progbits
 132              		.align	2
 133              		.thumb
 134              		.thumb_func
 136              	USBHwCmdWrite:
 137              	.LFB2:
 115:../common/lpcusb/target/usbhw_lpc.c **** 
 116:../common/lpcusb/target/usbhw_lpc.c **** 
 117:../common/lpcusb/target/usbhw_lpc.c **** /**
 118:../common/lpcusb/target/usbhw_lpc.c ****     Local function to send a command + data to the USB protocol engine
 119:../common/lpcusb/target/usbhw_lpc.c ****         
 120:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bCmd        Command to send
 121:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bData       Data to send
 122:../common/lpcusb/target/usbhw_lpc.c ****  */
 123:../common/lpcusb/target/usbhw_lpc.c **** static void USBHwCmdWrite(U8 bCmd, U16 bData)
 124:../common/lpcusb/target/usbhw_lpc.c **** {
 138              		.loc 1 124 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 82B0     		sub	sp, sp, #8
 147              		.cfi_def_cfa_offset 16
 148 0004 00AF     		add	r7, sp, #0
 149              		.cfi_def_cfa_register 7
 150 0006 0346     		mov	r3, r0
 151 0008 0A46     		mov	r2, r1
 152 000a FB71     		strb	r3, [r7, #7]
 153 000c 1346     		mov	r3, r2	@ movhi
 154 000e BB80     		strh	r3, [r7, #4]	@ movhi
 125:../common/lpcusb/target/usbhw_lpc.c ****     // write command code
 126:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(bCmd);
 155              		.loc 1 126 0
 156 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 157 0012 1846     		mov	r0, r3
 158 0014 FFF7FEFF 		bl	USBHwCmd
 127:../common/lpcusb/target/usbhw_lpc.c **** 
 128:../common/lpcusb/target/usbhw_lpc.c ****     // write command data
ARM GAS  /tmp/cczMJFp8.s 			page 6


 129:../common/lpcusb/target/usbhw_lpc.c ****     USBCmdCode = 0x00000100 | (bData << 16);
 159              		.loc 1 129 0
 160 0018 054A     		ldr	r2, .L9
 161 001a BB88     		ldrh	r3, [r7, #4]
 162 001c 1B04     		lsls	r3, r3, #16
 163 001e 43F48073 		orr	r3, r3, #256
 164 0022 1360     		str	r3, [r2]
 130:../common/lpcusb/target/usbhw_lpc.c ****     Wait4DevInt(CCEMTY);
 165              		.loc 1 130 0
 166 0024 1020     		movs	r0, #16
 167 0026 FFF7FEFF 		bl	Wait4DevInt
 131:../common/lpcusb/target/usbhw_lpc.c **** }
 168              		.loc 1 131 0
 169 002a 0837     		adds	r7, r7, #8
 170              		.cfi_def_cfa_offset 8
 171 002c BD46     		mov	sp, r7
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 002e 80BD     		pop	{r7, pc}
 175              	.L10:
 176              		.align	2
 177              	.L9:
 178 0030 10C20050 		.word	1342226960
 179              		.cfi_endproc
 180              	.LFE2:
 182              		.section	.text.USBHwCmdRead,"ax",%progbits
 183              		.align	2
 184              		.thumb
 185              		.thumb_func
 187              	USBHwCmdRead:
 188              	.LFB3:
 132:../common/lpcusb/target/usbhw_lpc.c **** 
 133:../common/lpcusb/target/usbhw_lpc.c **** 
 134:../common/lpcusb/target/usbhw_lpc.c **** /**
 135:../common/lpcusb/target/usbhw_lpc.c ****     Local function to send a command to the USB protocol engine and read data
 136:../common/lpcusb/target/usbhw_lpc.c ****         
 137:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bCmd        Command to send
 138:../common/lpcusb/target/usbhw_lpc.c **** 
 139:../common/lpcusb/target/usbhw_lpc.c ****     @return the data
 140:../common/lpcusb/target/usbhw_lpc.c ****  */
 141:../common/lpcusb/target/usbhw_lpc.c **** static U8 USBHwCmdRead(U8 bCmd)
 142:../common/lpcusb/target/usbhw_lpc.c **** {
 189              		.loc 1 142 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 201 0006 0346     		mov	r3, r0
 202 0008 FB71     		strb	r3, [r7, #7]
 143:../common/lpcusb/target/usbhw_lpc.c ****     // write command code
ARM GAS  /tmp/cczMJFp8.s 			page 7


 144:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(bCmd);
 203              		.loc 1 144 0
 204 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 000c 1846     		mov	r0, r3
 206 000e FFF7FEFF 		bl	USBHwCmd
 145:../common/lpcusb/target/usbhw_lpc.c ****     
 146:../common/lpcusb/target/usbhw_lpc.c ****     // get data
 147:../common/lpcusb/target/usbhw_lpc.c ****     USBCmdCode = 0x00000200 | (bCmd << 16);
 207              		.loc 1 147 0
 208 0012 084A     		ldr	r2, .L13
 209 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0016 1B04     		lsls	r3, r3, #16
 211 0018 43F40073 		orr	r3, r3, #512
 212 001c 1360     		str	r3, [r2]
 148:../common/lpcusb/target/usbhw_lpc.c ****     Wait4DevInt(CDFULL);
 213              		.loc 1 148 0
 214 001e 2020     		movs	r0, #32
 215 0020 FFF7FEFF 		bl	Wait4DevInt
 149:../common/lpcusb/target/usbhw_lpc.c ****     return USBCmdData;
 216              		.loc 1 149 0
 217 0024 044B     		ldr	r3, .L13+4
 218 0026 1B68     		ldr	r3, [r3]
 219 0028 DBB2     		uxtb	r3, r3
 150:../common/lpcusb/target/usbhw_lpc.c **** }
 220              		.loc 1 150 0
 221 002a 1846     		mov	r0, r3
 222 002c 0837     		adds	r7, r7, #8
 223              		.cfi_def_cfa_offset 8
 224 002e BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 0030 80BD     		pop	{r7, pc}
 228              	.L14:
 229 0032 00BF     		.align	2
 230              	.L13:
 231 0034 10C20050 		.word	1342226960
 232 0038 14C20050 		.word	1342226964
 233              		.cfi_endproc
 234              	.LFE3:
 236              		.section	.text.USBHwEPRealize,"ax",%progbits
 237              		.align	2
 238              		.thumb
 239              		.thumb_func
 241              	USBHwEPRealize:
 242              	.LFB4:
 151:../common/lpcusb/target/usbhw_lpc.c **** 
 152:../common/lpcusb/target/usbhw_lpc.c **** 
 153:../common/lpcusb/target/usbhw_lpc.c **** /**
 154:../common/lpcusb/target/usbhw_lpc.c ****     'Realizes' an endpoint, meaning that buffer space is reserved for
 155:../common/lpcusb/target/usbhw_lpc.c ****     it. An endpoint needs to be realised before it can be used.
 156:../common/lpcusb/target/usbhw_lpc.c ****         
 157:../common/lpcusb/target/usbhw_lpc.c ****     From experiments, it appears that a USB reset causes USBReEp to
 158:../common/lpcusb/target/usbhw_lpc.c ****     re-initialise to 3 (= just the control endpoints).
 159:../common/lpcusb/target/usbhw_lpc.c ****     However, a USB bus reset does not disturb the USBMaxPSize settings.
 160:../common/lpcusb/target/usbhw_lpc.c ****         
 161:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] idx         Endpoint index
 162:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] wMaxPSize   Maximum packet size for this endpoint
ARM GAS  /tmp/cczMJFp8.s 			page 8


 163:../common/lpcusb/target/usbhw_lpc.c ****  */
 164:../common/lpcusb/target/usbhw_lpc.c **** static void USBHwEPRealize(int idx, U16 wMaxPSize)
 165:../common/lpcusb/target/usbhw_lpc.c **** {
 243              		.loc 1 165 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 82B0     		sub	sp, sp, #8
 252              		.cfi_def_cfa_offset 16
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
 256 0008 0B46     		mov	r3, r1
 257 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 166:../common/lpcusb/target/usbhw_lpc.c ****     USBReEp |= (1 << idx);
 258              		.loc 1 166 0
 259 000c 0A49     		ldr	r1, .L16
 260 000e 0A4B     		ldr	r3, .L16
 261 0010 1B68     		ldr	r3, [r3]
 262 0012 0120     		movs	r0, #1
 263 0014 7A68     		ldr	r2, [r7, #4]
 264 0016 00FA02F2 		lsl	r2, r0, r2
 265 001a 1343     		orrs	r3, r3, r2
 266 001c 0B60     		str	r3, [r1]
 167:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC17xx
 168:../common/lpcusb/target/usbhw_lpc.c ****     USBEpIn = idx;
 267              		.loc 1 168 0
 268 001e 074A     		ldr	r2, .L16+4
 269 0020 7B68     		ldr	r3, [r7, #4]
 270 0022 1360     		str	r3, [r2]
 169:../common/lpcusb/target/usbhw_lpc.c **** #else
 170:../common/lpcusb/target/usbhw_lpc.c ****     USBEpInd = idx;
 171:../common/lpcusb/target/usbhw_lpc.c **** #endif
 172:../common/lpcusb/target/usbhw_lpc.c ****     USBMaxPSize = wMaxPSize;
 271              		.loc 1 172 0
 272 0024 064A     		ldr	r2, .L16+8
 273 0026 7B88     		ldrh	r3, [r7, #2]
 274 0028 1360     		str	r3, [r2]
 173:../common/lpcusb/target/usbhw_lpc.c ****     Wait4DevInt(EP_RLZED);
 275              		.loc 1 173 0
 276 002a 4FF48070 		mov	r0, #256
 277 002e FFF7FEFF 		bl	Wait4DevInt
 174:../common/lpcusb/target/usbhw_lpc.c **** }
 278              		.loc 1 174 0
 279 0032 0837     		adds	r7, r7, #8
 280              		.cfi_def_cfa_offset 8
 281 0034 BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 0036 80BD     		pop	{r7, pc}
 285              	.L17:
 286              		.align	2
 287              	.L16:
ARM GAS  /tmp/cczMJFp8.s 			page 9


 288 0038 44C20050 		.word	1342227012
 289 003c 48C20050 		.word	1342227016
 290 0040 4CC20050 		.word	1342227020
 291              		.cfi_endproc
 292              	.LFE4:
 294              		.section	.text.USBHwEPEnable,"ax",%progbits
 295              		.align	2
 296              		.thumb
 297              		.thumb_func
 299              	USBHwEPEnable:
 300              	.LFB5:
 175:../common/lpcusb/target/usbhw_lpc.c **** 
 176:../common/lpcusb/target/usbhw_lpc.c **** 
 177:../common/lpcusb/target/usbhw_lpc.c **** /**
 178:../common/lpcusb/target/usbhw_lpc.c ****     Enables or disables an endpoint
 179:../common/lpcusb/target/usbhw_lpc.c ****         
 180:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] idx     Endpoint index
 181:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] fEnable TRUE to enable, FALSE to disable
 182:../common/lpcusb/target/usbhw_lpc.c ****  */
 183:../common/lpcusb/target/usbhw_lpc.c **** static void USBHwEPEnable(int idx, BOOL fEnable)
 184:../common/lpcusb/target/usbhw_lpc.c **** {
 301              		.loc 1 184 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 82B0     		sub	sp, sp, #8
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
 314 0008 3960     		str	r1, [r7]
 185:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_EP_SET_STATUS | idx, fEnable ? 0 : EP_DA);
 315              		.loc 1 185 0
 316 000a 7B68     		ldr	r3, [r7, #4]
 317 000c DBB2     		uxtb	r3, r3
 318 000e 43F04003 		orr	r3, r3, #64
 319 0012 DBB2     		uxtb	r3, r3
 320 0014 DAB2     		uxtb	r2, r3
 321 0016 3B68     		ldr	r3, [r7]
 322 0018 002B     		cmp	r3, #0
 323 001a 01D0     		beq	.L19
 324              		.loc 1 185 0 is_stmt 0 discriminator 1
 325 001c 0023     		movs	r3, #0
 326 001e 00E0     		b	.L20
 327              	.L19:
 328              		.loc 1 185 0 discriminator 2
 329 0020 2023     		movs	r3, #32
 330              	.L20:
 331              		.loc 1 185 0 discriminator 4
 332 0022 1046     		mov	r0, r2
 333 0024 1946     		mov	r1, r3
 334 0026 FFF7FEFF 		bl	USBHwCmdWrite
 186:../common/lpcusb/target/usbhw_lpc.c **** }
ARM GAS  /tmp/cczMJFp8.s 			page 10


 335              		.loc 1 186 0 is_stmt 1 discriminator 4
 336 002a 0837     		adds	r7, r7, #8
 337              		.cfi_def_cfa_offset 8
 338 002c BD46     		mov	sp, r7
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 002e 80BD     		pop	{r7, pc}
 342              		.cfi_endproc
 343              	.LFE5:
 345              		.section	.text.USBHwEPConfig,"ax",%progbits
 346              		.align	2
 347              		.global	USBHwEPConfig
 348              		.thumb
 349              		.thumb_func
 351              	USBHwEPConfig:
 352              	.LFB6:
 187:../common/lpcusb/target/usbhw_lpc.c **** 
 188:../common/lpcusb/target/usbhw_lpc.c **** 
 189:../common/lpcusb/target/usbhw_lpc.c **** /**
 190:../common/lpcusb/target/usbhw_lpc.c ****     Configures an endpoint and enables it
 191:../common/lpcusb/target/usbhw_lpc.c ****         
 192:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP             Endpoint number
 193:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] wMaxPacketSize  Maximum packet size for this EP
 194:../common/lpcusb/target/usbhw_lpc.c ****  */
 195:../common/lpcusb/target/usbhw_lpc.c **** void USBHwEPConfig(U8 bEP, U16 wMaxPacketSize)
 196:../common/lpcusb/target/usbhw_lpc.c **** {
 353              		.loc 1 196 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 16
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 7, -8
 360              		.cfi_offset 14, -4
 361 0002 84B0     		sub	sp, sp, #16
 362              		.cfi_def_cfa_offset 24
 363 0004 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 365 0006 0346     		mov	r3, r0
 366 0008 0A46     		mov	r2, r1
 367 000a FB71     		strb	r3, [r7, #7]
 368 000c 1346     		mov	r3, r2	@ movhi
 369 000e BB80     		strh	r3, [r7, #4]	@ movhi
 197:../common/lpcusb/target/usbhw_lpc.c ****     int idx;
 198:../common/lpcusb/target/usbhw_lpc.c ****     
 199:../common/lpcusb/target/usbhw_lpc.c ****     idx = EP2IDX(bEP);
 370              		.loc 1 199 0
 371 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 372 0012 03F00F03 		and	r3, r3, #15
 373 0016 5B00     		lsls	r3, r3, #1
 374 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 375 001a D209     		lsrs	r2, r2, #7
 376 001c D2B2     		uxtb	r2, r2
 377 001e 1343     		orrs	r3, r3, r2
 378 0020 FB60     		str	r3, [r7, #12]
 200:../common/lpcusb/target/usbhw_lpc.c ****     
 201:../common/lpcusb/target/usbhw_lpc.c ****     // realise EP
ARM GAS  /tmp/cczMJFp8.s 			page 11


 202:../common/lpcusb/target/usbhw_lpc.c ****     USBHwEPRealize(idx, wMaxPacketSize);
 379              		.loc 1 202 0
 380 0022 BB88     		ldrh	r3, [r7, #4]
 381 0024 F868     		ldr	r0, [r7, #12]
 382 0026 1946     		mov	r1, r3
 383 0028 FFF7FEFF 		bl	USBHwEPRealize
 203:../common/lpcusb/target/usbhw_lpc.c **** 
 204:../common/lpcusb/target/usbhw_lpc.c ****     // enable EP
 205:../common/lpcusb/target/usbhw_lpc.c ****     USBHwEPEnable(idx, TRUE);
 384              		.loc 1 205 0
 385 002c F868     		ldr	r0, [r7, #12]
 386 002e 0121     		movs	r1, #1
 387 0030 FFF7FEFF 		bl	USBHwEPEnable
 206:../common/lpcusb/target/usbhw_lpc.c **** }
 388              		.loc 1 206 0
 389 0034 1037     		adds	r7, r7, #16
 390              		.cfi_def_cfa_offset 8
 391 0036 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 0038 80BD     		pop	{r7, pc}
 395              		.cfi_endproc
 396              	.LFE6:
 398 003a 00BF     		.section	.text.USBHwRegisterEPIntHandler,"ax",%progbits
 399              		.align	2
 400              		.global	USBHwRegisterEPIntHandler
 401              		.thumb
 402              		.thumb_func
 404              	USBHwRegisterEPIntHandler:
 405              	.LFB7:
 207:../common/lpcusb/target/usbhw_lpc.c **** 
 208:../common/lpcusb/target/usbhw_lpc.c **** 
 209:../common/lpcusb/target/usbhw_lpc.c **** /**
 210:../common/lpcusb/target/usbhw_lpc.c ****     Registers an endpoint event callback
 211:../common/lpcusb/target/usbhw_lpc.c ****         
 212:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP             Endpoint number
 213:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] pfnHandler      Callback function
 214:../common/lpcusb/target/usbhw_lpc.c ****  */
 215:../common/lpcusb/target/usbhw_lpc.c **** void USBHwRegisterEPIntHandler(U8 bEP, TFnEPIntHandler *pfnHandler)
 216:../common/lpcusb/target/usbhw_lpc.c **** {
 406              		.loc 1 216 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 85B0     		sub	sp, sp, #20
 415              		.cfi_def_cfa_offset 24
 416 0004 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 418 0006 0346     		mov	r3, r0
 419 0008 3960     		str	r1, [r7]
 420 000a FB71     		strb	r3, [r7, #7]
 217:../common/lpcusb/target/usbhw_lpc.c ****     int idx;
 218:../common/lpcusb/target/usbhw_lpc.c ****     
ARM GAS  /tmp/cczMJFp8.s 			page 12


 219:../common/lpcusb/target/usbhw_lpc.c ****     idx = EP2IDX(bEP);
 421              		.loc 1 219 0
 422 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 423 000e 03F00F03 		and	r3, r3, #15
 424 0012 5B00     		lsls	r3, r3, #1
 425 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 426 0016 D209     		lsrs	r2, r2, #7
 427 0018 D2B2     		uxtb	r2, r2
 428 001a 1343     		orrs	r3, r3, r2
 429 001c FB60     		str	r3, [r7, #12]
 220:../common/lpcusb/target/usbhw_lpc.c **** 
 221:../common/lpcusb/target/usbhw_lpc.c ****     ASSERT(idx<32);
 222:../common/lpcusb/target/usbhw_lpc.c **** 
 223:../common/lpcusb/target/usbhw_lpc.c ****     /* add handler to list of EP handlers */
 224:../common/lpcusb/target/usbhw_lpc.c ****     _apfnEPIntHandlers[idx / 2] = pfnHandler;
 430              		.loc 1 224 0
 431 001e FB68     		ldr	r3, [r7, #12]
 432 0020 DA0F     		lsrs	r2, r3, #31
 433 0022 1344     		add	r3, r3, r2
 434 0024 5B10     		asrs	r3, r3, #1
 435 0026 1946     		mov	r1, r3
 436 0028 0B4A     		ldr	r2, .L23
 437 002a 3B68     		ldr	r3, [r7]
 438 002c 42F82130 		str	r3, [r2, r1, lsl #2]
 225:../common/lpcusb/target/usbhw_lpc.c ****     
 226:../common/lpcusb/target/usbhw_lpc.c ****     /* enable EP interrupt */
 227:../common/lpcusb/target/usbhw_lpc.c ****     USBEpIntEn |= (1 << idx);
 439              		.loc 1 227 0
 440 0030 0A49     		ldr	r1, .L23+4
 441 0032 0A4B     		ldr	r3, .L23+4
 442 0034 1B68     		ldr	r3, [r3]
 443 0036 0120     		movs	r0, #1
 444 0038 FA68     		ldr	r2, [r7, #12]
 445 003a 00FA02F2 		lsl	r2, r0, r2
 446 003e 1343     		orrs	r3, r3, r2
 447 0040 0B60     		str	r3, [r1]
 228:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntEn |= EP_SLOW;
 448              		.loc 1 228 0
 449 0042 074A     		ldr	r2, .L23+8
 450 0044 064B     		ldr	r3, .L23+8
 451 0046 1B68     		ldr	r3, [r3]
 452 0048 43F00403 		orr	r3, r3, #4
 453 004c 1360     		str	r3, [r2]
 229:../common/lpcusb/target/usbhw_lpc.c ****     
 230:../common/lpcusb/target/usbhw_lpc.c ****     DBG("Registered handler for EP 0x%x\n", bEP);
 231:../common/lpcusb/target/usbhw_lpc.c **** }
 454              		.loc 1 231 0
 455 004e 1437     		adds	r7, r7, #20
 456              		.cfi_def_cfa_offset 4
 457 0050 BD46     		mov	sp, r7
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 0052 5DF8047B 		ldr	r7, [sp], #4
 461              		.cfi_restore 7
 462              		.cfi_def_cfa_offset 0
 463 0056 7047     		bx	lr
 464              	.L24:
ARM GAS  /tmp/cczMJFp8.s 			page 13


 465              		.align	2
 466              	.L23:
 467 0058 04000000 		.word	_apfnEPIntHandlers
 468 005c 34C20050 		.word	1342226996
 469 0060 04C20050 		.word	1342226948
 470              		.cfi_endproc
 471              	.LFE7:
 473              		.section	.text.USBHwRegisterDevIntHandler,"ax",%progbits
 474              		.align	2
 475              		.global	USBHwRegisterDevIntHandler
 476              		.thumb
 477              		.thumb_func
 479              	USBHwRegisterDevIntHandler:
 480              	.LFB8:
 232:../common/lpcusb/target/usbhw_lpc.c **** 
 233:../common/lpcusb/target/usbhw_lpc.c **** 
 234:../common/lpcusb/target/usbhw_lpc.c **** /**
 235:../common/lpcusb/target/usbhw_lpc.c ****     Registers an device status callback
 236:../common/lpcusb/target/usbhw_lpc.c ****         
 237:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] pfnHandler  Callback function
 238:../common/lpcusb/target/usbhw_lpc.c ****  */
 239:../common/lpcusb/target/usbhw_lpc.c **** void USBHwRegisterDevIntHandler(TFnDevIntHandler *pfnHandler)
 240:../common/lpcusb/target/usbhw_lpc.c **** {
 481              		.loc 1 240 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 0002 83B0     		sub	sp, sp, #12
 490              		.cfi_def_cfa_offset 16
 491 0004 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 493 0006 7860     		str	r0, [r7, #4]
 241:../common/lpcusb/target/usbhw_lpc.c ****     _pfnDevIntHandler = pfnHandler;
 494              		.loc 1 241 0
 495 0008 064A     		ldr	r2, .L26
 496 000a 7B68     		ldr	r3, [r7, #4]
 497 000c 1360     		str	r3, [r2]
 242:../common/lpcusb/target/usbhw_lpc.c ****     
 243:../common/lpcusb/target/usbhw_lpc.c ****     // enable device interrupt
 244:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntEn |= DEV_STAT;
 498              		.loc 1 244 0
 499 000e 064A     		ldr	r2, .L26+4
 500 0010 054B     		ldr	r3, .L26+4
 501 0012 1B68     		ldr	r3, [r3]
 502 0014 43F00803 		orr	r3, r3, #8
 503 0018 1360     		str	r3, [r2]
 245:../common/lpcusb/target/usbhw_lpc.c **** 
 246:../common/lpcusb/target/usbhw_lpc.c ****     DBG("Registered handler for device status\n");
 247:../common/lpcusb/target/usbhw_lpc.c **** }
 504              		.loc 1 247 0
 505 001a 0C37     		adds	r7, r7, #12
 506              		.cfi_def_cfa_offset 4
 507 001c BD46     		mov	sp, r7
ARM GAS  /tmp/cczMJFp8.s 			page 14


 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 001e 5DF8047B 		ldr	r7, [sp], #4
 511              		.cfi_restore 7
 512              		.cfi_def_cfa_offset 0
 513 0022 7047     		bx	lr
 514              	.L27:
 515              		.align	2
 516              	.L26:
 517 0024 00000000 		.word	_pfnDevIntHandler
 518 0028 04C20050 		.word	1342226948
 519              		.cfi_endproc
 520              	.LFE8:
 522              		.section	.text.USBHwRegisterFrameHandler,"ax",%progbits
 523              		.align	2
 524              		.global	USBHwRegisterFrameHandler
 525              		.thumb
 526              		.thumb_func
 528              	USBHwRegisterFrameHandler:
 529              	.LFB9:
 248:../common/lpcusb/target/usbhw_lpc.c **** 
 249:../common/lpcusb/target/usbhw_lpc.c **** 
 250:../common/lpcusb/target/usbhw_lpc.c **** /**
 251:../common/lpcusb/target/usbhw_lpc.c ****     Registers the frame callback
 252:../common/lpcusb/target/usbhw_lpc.c ****         
 253:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] pfnHandler  Callback function
 254:../common/lpcusb/target/usbhw_lpc.c ****  */
 255:../common/lpcusb/target/usbhw_lpc.c **** void USBHwRegisterFrameHandler(TFnFrameHandler *pfnHandler)
 256:../common/lpcusb/target/usbhw_lpc.c **** {
 530              		.loc 1 256 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              		.cfi_def_cfa_offset 4
 537              		.cfi_offset 7, -4
 538 0002 83B0     		sub	sp, sp, #12
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 7860     		str	r0, [r7, #4]
 257:../common/lpcusb/target/usbhw_lpc.c ****     _pfnFrameHandler = pfnHandler;
 543              		.loc 1 257 0
 544 0008 064A     		ldr	r2, .L29
 545 000a 7B68     		ldr	r3, [r7, #4]
 546 000c 1360     		str	r3, [r2]
 258:../common/lpcusb/target/usbhw_lpc.c ****     
 259:../common/lpcusb/target/usbhw_lpc.c ****     // enable device interrupt
 260:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntEn |= FRAME;
 547              		.loc 1 260 0
 548 000e 064A     		ldr	r2, .L29+4
 549 0010 054B     		ldr	r3, .L29+4
 550 0012 1B68     		ldr	r3, [r3]
 551 0014 43F00103 		orr	r3, r3, #1
 552 0018 1360     		str	r3, [r2]
 261:../common/lpcusb/target/usbhw_lpc.c **** 
ARM GAS  /tmp/cczMJFp8.s 			page 15


 262:../common/lpcusb/target/usbhw_lpc.c ****     DBG("Registered handler for frame\n");
 263:../common/lpcusb/target/usbhw_lpc.c **** }
 553              		.loc 1 263 0
 554 001a 0C37     		adds	r7, r7, #12
 555              		.cfi_def_cfa_offset 4
 556 001c BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 001e 5DF8047B 		ldr	r7, [sp], #4
 560              		.cfi_restore 7
 561              		.cfi_def_cfa_offset 0
 562 0022 7047     		bx	lr
 563              	.L30:
 564              		.align	2
 565              	.L29:
 566 0024 44000000 		.word	_pfnFrameHandler
 567 0028 04C20050 		.word	1342226948
 568              		.cfi_endproc
 569              	.LFE9:
 571              		.section	.text.USBHwSetAddress,"ax",%progbits
 572              		.align	2
 573              		.global	USBHwSetAddress
 574              		.thumb
 575              		.thumb_func
 577              	USBHwSetAddress:
 578              	.LFB10:
 264:../common/lpcusb/target/usbhw_lpc.c **** 
 265:../common/lpcusb/target/usbhw_lpc.c **** 
 266:../common/lpcusb/target/usbhw_lpc.c **** /**
 267:../common/lpcusb/target/usbhw_lpc.c ****     Sets the USB address.
 268:../common/lpcusb/target/usbhw_lpc.c ****         
 269:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bAddr       Device address to set
 270:../common/lpcusb/target/usbhw_lpc.c ****  */
 271:../common/lpcusb/target/usbhw_lpc.c **** void USBHwSetAddress(U8 bAddr)
 272:../common/lpcusb/target/usbhw_lpc.c **** {
 579              		.loc 1 272 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 8
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583 0000 80B5     		push	{r7, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 0002 82B0     		sub	sp, sp, #8
 588              		.cfi_def_cfa_offset 16
 589 0004 00AF     		add	r7, sp, #0
 590              		.cfi_def_cfa_register 7
 591 0006 0346     		mov	r3, r0
 592 0008 FB71     		strb	r3, [r7, #7]
 273:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_DEV_SET_ADDRESS, DEV_EN | bAddr);
 593              		.loc 1 273 0
 594 000a FB79     		ldrb	r3, [r7, #7]
 595 000c 63F07F03 		orn	r3, r3, #127
 596 0010 DBB2     		uxtb	r3, r3
 597 0012 9BB2     		uxth	r3, r3
 598 0014 D020     		movs	r0, #208
 599 0016 1946     		mov	r1, r3
ARM GAS  /tmp/cczMJFp8.s 			page 16


 600 0018 FFF7FEFF 		bl	USBHwCmdWrite
 274:../common/lpcusb/target/usbhw_lpc.c **** }
 601              		.loc 1 274 0
 602 001c 0837     		adds	r7, r7, #8
 603              		.cfi_def_cfa_offset 8
 604 001e BD46     		mov	sp, r7
 605              		.cfi_def_cfa_register 13
 606              		@ sp needed
 607 0020 80BD     		pop	{r7, pc}
 608              		.cfi_endproc
 609              	.LFE10:
 611 0022 00BF     		.section	.text.USBHwConnect,"ax",%progbits
 612              		.align	2
 613              		.global	USBHwConnect
 614              		.thumb
 615              		.thumb_func
 617              	USBHwConnect:
 618              	.LFB11:
 275:../common/lpcusb/target/usbhw_lpc.c **** 
 276:../common/lpcusb/target/usbhw_lpc.c **** 
 277:../common/lpcusb/target/usbhw_lpc.c **** /**
 278:../common/lpcusb/target/usbhw_lpc.c ****     Connects or disconnects from the USB bus
 279:../common/lpcusb/target/usbhw_lpc.c ****         
 280:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] fConnect    If TRUE, connect, otherwise disconnect
 281:../common/lpcusb/target/usbhw_lpc.c ****  */
 282:../common/lpcusb/target/usbhw_lpc.c **** void USBHwConnect(BOOL fConnect)
 283:../common/lpcusb/target/usbhw_lpc.c **** {
 619              		.loc 1 283 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 82B0     		sub	sp, sp, #8
 628              		.cfi_def_cfa_offset 16
 629 0004 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 284:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC23xx
 285:../common/lpcusb/target/usbhw_lpc.c **** #ifndef LPC2378_PORTB
 286:../common/lpcusb/target/usbhw_lpc.c ****   if(fConnect)
 287:../common/lpcusb/target/usbhw_lpc.c ****     FIO2CLR = (1<<9);
 288:../common/lpcusb/target/usbhw_lpc.c ****   else
 289:../common/lpcusb/target/usbhw_lpc.c ****     FIO2SET = (1<<9);
 290:../common/lpcusb/target/usbhw_lpc.c **** #else
 291:../common/lpcusb/target/usbhw_lpc.c ****   if(fConnect)
 292:../common/lpcusb/target/usbhw_lpc.c ****     FIO0CLR = (1<<14);
 293:../common/lpcusb/target/usbhw_lpc.c ****   else
 294:../common/lpcusb/target/usbhw_lpc.c ****     FIO0SET = (1<<14);
 295:../common/lpcusb/target/usbhw_lpc.c **** #endif
 296:../common/lpcusb/target/usbhw_lpc.c **** #endif
 297:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_DEV_STATUS, fConnect ? CON : 0);
 632              		.loc 1 297 0
 633 0008 7B68     		ldr	r3, [r7, #4]
 634 000a 002B     		cmp	r3, #0
ARM GAS  /tmp/cczMJFp8.s 			page 17


 635 000c 14BF     		ite	ne
 636 000e 0123     		movne	r3, #1
 637 0010 0023     		moveq	r3, #0
 638 0012 DBB2     		uxtb	r3, r3
 639 0014 9BB2     		uxth	r3, r3
 640 0016 FE20     		movs	r0, #254
 641 0018 1946     		mov	r1, r3
 642 001a FFF7FEFF 		bl	USBHwCmdWrite
 298:../common/lpcusb/target/usbhw_lpc.c **** }
 643              		.loc 1 298 0
 644 001e 0837     		adds	r7, r7, #8
 645              		.cfi_def_cfa_offset 8
 646 0020 BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 0022 80BD     		pop	{r7, pc}
 650              		.cfi_endproc
 651              	.LFE11:
 653              		.section	.text.USBHwNakIntEnable,"ax",%progbits
 654              		.align	2
 655              		.global	USBHwNakIntEnable
 656              		.thumb
 657              		.thumb_func
 659              	USBHwNakIntEnable:
 660              	.LFB12:
 299:../common/lpcusb/target/usbhw_lpc.c **** 
 300:../common/lpcusb/target/usbhw_lpc.c **** 
 301:../common/lpcusb/target/usbhw_lpc.c **** /**
 302:../common/lpcusb/target/usbhw_lpc.c ****     Enables interrupt on NAK condition
 303:../common/lpcusb/target/usbhw_lpc.c ****         
 304:../common/lpcusb/target/usbhw_lpc.c ****     For IN endpoints a NAK is generated when the host wants to read data
 305:../common/lpcusb/target/usbhw_lpc.c ****     from the device, but none is available in the endpoint buffer.
 306:../common/lpcusb/target/usbhw_lpc.c ****     For OUT endpoints a NAK is generated when the host wants to write data
 307:../common/lpcusb/target/usbhw_lpc.c ****     to the device, but the endpoint buffer is still full.
 308:../common/lpcusb/target/usbhw_lpc.c ****     
 309:../common/lpcusb/target/usbhw_lpc.c ****     The endpoint interrupt handlers can distinguish regular (ACK) interrupts
 310:../common/lpcusb/target/usbhw_lpc.c ****     from NAK interrupt by checking the bits in their bEPStatus argument.
 311:../common/lpcusb/target/usbhw_lpc.c ****     
 312:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bIntBits    Bitmap indicating which NAK interrupts to enable
 313:../common/lpcusb/target/usbhw_lpc.c ****  */
 314:../common/lpcusb/target/usbhw_lpc.c **** void USBHwNakIntEnable(U8 bIntBits)
 315:../common/lpcusb/target/usbhw_lpc.c **** {
 661              		.loc 1 315 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665 0000 80B5     		push	{r7, lr}
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 82B0     		sub	sp, sp, #8
 670              		.cfi_def_cfa_offset 16
 671 0004 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0006 0346     		mov	r3, r0
 674 0008 FB71     		strb	r3, [r7, #7]
 316:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_DEV_SET_MODE, bIntBits);
ARM GAS  /tmp/cczMJFp8.s 			page 18


 675              		.loc 1 316 0
 676 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 677 000c 9BB2     		uxth	r3, r3
 678 000e F320     		movs	r0, #243
 679 0010 1946     		mov	r1, r3
 680 0012 FFF7FEFF 		bl	USBHwCmdWrite
 317:../common/lpcusb/target/usbhw_lpc.c **** }
 681              		.loc 1 317 0
 682 0016 0837     		adds	r7, r7, #8
 683              		.cfi_def_cfa_offset 8
 684 0018 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 001a 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE12:
 691              		.section	.text.USBHwEPGetStatus,"ax",%progbits
 692              		.align	2
 693              		.global	USBHwEPGetStatus
 694              		.thumb
 695              		.thumb_func
 697              	USBHwEPGetStatus:
 698              	.LFB13:
 318:../common/lpcusb/target/usbhw_lpc.c **** 
 319:../common/lpcusb/target/usbhw_lpc.c **** 
 320:../common/lpcusb/target/usbhw_lpc.c **** /**
 321:../common/lpcusb/target/usbhw_lpc.c ****     Gets the status from a specific endpoint.
 322:../common/lpcusb/target/usbhw_lpc.c ****         
 323:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP     Endpoint number
 324:../common/lpcusb/target/usbhw_lpc.c ****     @return Endpoint status byte (containing EP_STATUS_xxx bits)
 325:../common/lpcusb/target/usbhw_lpc.c ****  */
 326:../common/lpcusb/target/usbhw_lpc.c **** U8  USBHwEPGetStatus(U8 bEP)
 327:../common/lpcusb/target/usbhw_lpc.c **** {
 699              		.loc 1 327 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 16
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 84B0     		sub	sp, sp, #16
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 0346     		mov	r3, r0
 712 0008 FB71     		strb	r3, [r7, #7]
 328:../common/lpcusb/target/usbhw_lpc.c ****     int idx = EP2IDX(bEP);
 713              		.loc 1 328 0
 714 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 715 000c 03F00F03 		and	r3, r3, #15
 716 0010 5B00     		lsls	r3, r3, #1
 717 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 718 0014 D209     		lsrs	r2, r2, #7
 719 0016 D2B2     		uxtb	r2, r2
 720 0018 1343     		orrs	r3, r3, r2
 721 001a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cczMJFp8.s 			page 19


 329:../common/lpcusb/target/usbhw_lpc.c **** 
 330:../common/lpcusb/target/usbhw_lpc.c ****     return USBHwCmdRead(CMD_EP_SELECT | idx);
 722              		.loc 1 330 0
 723 001c FB68     		ldr	r3, [r7, #12]
 724 001e DBB2     		uxtb	r3, r3
 725 0020 1846     		mov	r0, r3
 726 0022 FFF7FEFF 		bl	USBHwCmdRead
 727 0026 0346     		mov	r3, r0
 331:../common/lpcusb/target/usbhw_lpc.c **** }
 728              		.loc 1 331 0
 729 0028 1846     		mov	r0, r3
 730 002a 1037     		adds	r7, r7, #16
 731              		.cfi_def_cfa_offset 8
 732 002c BD46     		mov	sp, r7
 733              		.cfi_def_cfa_register 13
 734              		@ sp needed
 735 002e 80BD     		pop	{r7, pc}
 736              		.cfi_endproc
 737              	.LFE13:
 739              		.section	.text.USBHwEPStall,"ax",%progbits
 740              		.align	2
 741              		.global	USBHwEPStall
 742              		.thumb
 743              		.thumb_func
 745              	USBHwEPStall:
 746              	.LFB14:
 332:../common/lpcusb/target/usbhw_lpc.c **** 
 333:../common/lpcusb/target/usbhw_lpc.c **** 
 334:../common/lpcusb/target/usbhw_lpc.c **** /**
 335:../common/lpcusb/target/usbhw_lpc.c ****     Sets the stalled property of an endpoint
 336:../common/lpcusb/target/usbhw_lpc.c ****         
 337:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP     Endpoint number
 338:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] fStall  TRUE to stall, FALSE to unstall
 339:../common/lpcusb/target/usbhw_lpc.c ****  */
 340:../common/lpcusb/target/usbhw_lpc.c **** void USBHwEPStall(U8 bEP, BOOL fStall)
 341:../common/lpcusb/target/usbhw_lpc.c **** {
 747              		.loc 1 341 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 16
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 84B0     		sub	sp, sp, #16
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 759 0006 0346     		mov	r3, r0
 760 0008 3960     		str	r1, [r7]
 761 000a FB71     		strb	r3, [r7, #7]
 342:../common/lpcusb/target/usbhw_lpc.c ****     int idx = EP2IDX(bEP);
 762              		.loc 1 342 0
 763 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 764 000e 03F00F03 		and	r3, r3, #15
 765 0012 5B00     		lsls	r3, r3, #1
 766 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/cczMJFp8.s 			page 20


 767 0016 D209     		lsrs	r2, r2, #7
 768 0018 D2B2     		uxtb	r2, r2
 769 001a 1343     		orrs	r3, r3, r2
 770 001c FB60     		str	r3, [r7, #12]
 343:../common/lpcusb/target/usbhw_lpc.c **** 
 344:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_EP_SET_STATUS | idx, fStall ? EP_ST : 0);
 771              		.loc 1 344 0
 772 001e FB68     		ldr	r3, [r7, #12]
 773 0020 DBB2     		uxtb	r3, r3
 774 0022 43F04003 		orr	r3, r3, #64
 775 0026 DBB2     		uxtb	r3, r3
 776 0028 DAB2     		uxtb	r2, r3
 777 002a 3B68     		ldr	r3, [r7]
 778 002c 002B     		cmp	r3, #0
 779 002e 14BF     		ite	ne
 780 0030 0123     		movne	r3, #1
 781 0032 0023     		moveq	r3, #0
 782 0034 DBB2     		uxtb	r3, r3
 783 0036 9BB2     		uxth	r3, r3
 784 0038 1046     		mov	r0, r2
 785 003a 1946     		mov	r1, r3
 786 003c FFF7FEFF 		bl	USBHwCmdWrite
 345:../common/lpcusb/target/usbhw_lpc.c **** }
 787              		.loc 1 345 0
 788 0040 1037     		adds	r7, r7, #16
 789              		.cfi_def_cfa_offset 8
 790 0042 BD46     		mov	sp, r7
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 0044 80BD     		pop	{r7, pc}
 794              		.cfi_endproc
 795              	.LFE14:
 797 0046 00BF     		.section	.text.USBHwEPWrite,"ax",%progbits
 798              		.align	2
 799              		.global	USBHwEPWrite
 800              		.thumb
 801              		.thumb_func
 803              	USBHwEPWrite:
 804              	.LFB15:
 346:../common/lpcusb/target/usbhw_lpc.c **** 
 347:../common/lpcusb/target/usbhw_lpc.c **** 
 348:../common/lpcusb/target/usbhw_lpc.c **** /**
 349:../common/lpcusb/target/usbhw_lpc.c ****     Writes data to an endpoint buffer
 350:../common/lpcusb/target/usbhw_lpc.c ****         
 351:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP     Endpoint number
 352:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] pbBuf   Endpoint data
 353:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] iLen    Number of bytes to write
 354:../common/lpcusb/target/usbhw_lpc.c ****             
 355:../common/lpcusb/target/usbhw_lpc.c ****     @return number of bytes written into the endpoint buffer
 356:../common/lpcusb/target/usbhw_lpc.c **** */
 357:../common/lpcusb/target/usbhw_lpc.c **** int USBHwEPWrite(U8 bEP, U8 *pbBuf, U32 iLen)
 358:../common/lpcusb/target/usbhw_lpc.c **** {
 805              		.loc 1 358 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 24
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cczMJFp8.s 			page 21


 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 86B0     		sub	sp, sp, #24
 814              		.cfi_def_cfa_offset 32
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 0346     		mov	r3, r0
 818 0008 B960     		str	r1, [r7, #8]
 819 000a 7A60     		str	r2, [r7, #4]
 820 000c FB73     		strb	r3, [r7, #15]
 359:../common/lpcusb/target/usbhw_lpc.c ****     U32 idx;
 360:../common/lpcusb/target/usbhw_lpc.c ****     
 361:../common/lpcusb/target/usbhw_lpc.c ****     idx = EP2IDX(bEP);
 821              		.loc 1 361 0
 822 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 823 0010 03F00F03 		and	r3, r3, #15
 824 0014 5B00     		lsls	r3, r3, #1
 825 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 826 0018 D209     		lsrs	r2, r2, #7
 827 001a D2B2     		uxtb	r2, r2
 828 001c 1343     		orrs	r3, r3, r2
 829 001e 7B61     		str	r3, [r7, #20]
 362:../common/lpcusb/target/usbhw_lpc.c ****     
 363:../common/lpcusb/target/usbhw_lpc.c ****     // set write enable for specific endpoint
 364:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = WR_EN | ((bEP & 0xF) << 2);
 830              		.loc 1 364 0
 831 0020 1B4A     		ldr	r2, .L41
 832 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 833 0024 03F00F03 		and	r3, r3, #15
 834 0028 9B00     		lsls	r3, r3, #2
 835 002a 43F00203 		orr	r3, r3, #2
 836 002e 1360     		str	r3, [r2]
 365:../common/lpcusb/target/usbhw_lpc.c ****     
 366:../common/lpcusb/target/usbhw_lpc.c ****     // set packet length
 367:../common/lpcusb/target/usbhw_lpc.c ****     USBTxPLen = iLen;
 837              		.loc 1 367 0
 838 0030 184A     		ldr	r2, .L41+4
 839 0032 7B68     		ldr	r3, [r7, #4]
 840 0034 1360     		str	r3, [r2]
 368:../common/lpcusb/target/usbhw_lpc.c ****     
 369:../common/lpcusb/target/usbhw_lpc.c ****     // write data
 370:../common/lpcusb/target/usbhw_lpc.c ****     while (USBCtrl & WR_EN) {
 841              		.loc 1 370 0
 842 0036 15E0     		b	.L38
 843              	.L39:
 371:../common/lpcusb/target/usbhw_lpc.c ****         USBTxData = (pbBuf[3] << 24) | (pbBuf[2] << 16) | (pbBuf[1] << 8) | pbBuf[0];
 844              		.loc 1 371 0
 845 0038 1749     		ldr	r1, .L41+8
 846 003a BB68     		ldr	r3, [r7, #8]
 847 003c 0333     		adds	r3, r3, #3
 848 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 849 0040 1A06     		lsls	r2, r3, #24
 850 0042 BB68     		ldr	r3, [r7, #8]
 851 0044 0233     		adds	r3, r3, #2
 852 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 853 0048 1B04     		lsls	r3, r3, #16
ARM GAS  /tmp/cczMJFp8.s 			page 22


 854 004a 1A43     		orrs	r2, r2, r3
 855 004c BB68     		ldr	r3, [r7, #8]
 856 004e 0133     		adds	r3, r3, #1
 857 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 0052 1B02     		lsls	r3, r3, #8
 859 0054 1343     		orrs	r3, r3, r2
 860 0056 BA68     		ldr	r2, [r7, #8]
 861 0058 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 862 005a 1343     		orrs	r3, r3, r2
 863 005c 0B60     		str	r3, [r1]
 372:../common/lpcusb/target/usbhw_lpc.c ****         pbBuf += 4;
 864              		.loc 1 372 0
 865 005e BB68     		ldr	r3, [r7, #8]
 866 0060 0433     		adds	r3, r3, #4
 867 0062 BB60     		str	r3, [r7, #8]
 868              	.L38:
 370:../common/lpcusb/target/usbhw_lpc.c ****         USBTxData = (pbBuf[3] << 24) | (pbBuf[2] << 16) | (pbBuf[1] << 8) | pbBuf[0];
 869              		.loc 1 370 0
 870 0064 0A4B     		ldr	r3, .L41
 871 0066 1B68     		ldr	r3, [r3]
 872 0068 03F00203 		and	r3, r3, #2
 873 006c 002B     		cmp	r3, #0
 874 006e E3D1     		bne	.L39
 373:../common/lpcusb/target/usbhw_lpc.c ****     }
 374:../common/lpcusb/target/usbhw_lpc.c **** 
 375:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = 0;
 875              		.loc 1 375 0
 876 0070 074B     		ldr	r3, .L41
 877 0072 0022     		movs	r2, #0
 878 0074 1A60     		str	r2, [r3]
 376:../common/lpcusb/target/usbhw_lpc.c **** 
 377:../common/lpcusb/target/usbhw_lpc.c ****     // select endpoint and validate buffer
 378:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_SELECT | idx);
 879              		.loc 1 378 0
 880 0076 7B69     		ldr	r3, [r7, #20]
 881 0078 DBB2     		uxtb	r3, r3
 882 007a 1846     		mov	r0, r3
 883 007c FFF7FEFF 		bl	USBHwCmd
 379:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_VALIDATE_BUFFER);
 884              		.loc 1 379 0
 885 0080 FA20     		movs	r0, #250
 886 0082 FFF7FEFF 		bl	USBHwCmd
 380:../common/lpcusb/target/usbhw_lpc.c ****     
 381:../common/lpcusb/target/usbhw_lpc.c ****     return iLen;
 887              		.loc 1 381 0
 888 0086 7B68     		ldr	r3, [r7, #4]
 382:../common/lpcusb/target/usbhw_lpc.c **** }
 889              		.loc 1 382 0
 890 0088 1846     		mov	r0, r3
 891 008a 1837     		adds	r7, r7, #24
 892              		.cfi_def_cfa_offset 8
 893 008c BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 008e 80BD     		pop	{r7, pc}
 897              	.L42:
 898              		.align	2
ARM GAS  /tmp/cczMJFp8.s 			page 23


 899              	.L41:
 900 0090 28C20050 		.word	1342226984
 901 0094 24C20050 		.word	1342226980
 902 0098 1CC20050 		.word	1342226972
 903              		.cfi_endproc
 904              	.LFE15:
 906              		.section	.text.USBHwEPRead,"ax",%progbits
 907              		.align	2
 908              		.global	USBHwEPRead
 909              		.thumb
 910              		.thumb_func
 912              	USBHwEPRead:
 913              	.LFB16:
 383:../common/lpcusb/target/usbhw_lpc.c **** 
 384:../common/lpcusb/target/usbhw_lpc.c **** 
 385:../common/lpcusb/target/usbhw_lpc.c **** /**
 386:../common/lpcusb/target/usbhw_lpc.c ****     Reads data from an endpoint buffer
 387:../common/lpcusb/target/usbhw_lpc.c ****         
 388:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEP     Endpoint number
 389:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] pbBuf   Endpoint data
 390:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] iMaxLen Maximum number of bytes to read
 391:../common/lpcusb/target/usbhw_lpc.c ****             
 392:../common/lpcusb/target/usbhw_lpc.c ****     @return the number of bytes available in the EP (possibly more than iMaxLen),
 393:../common/lpcusb/target/usbhw_lpc.c ****     or <0 in case of error.
 394:../common/lpcusb/target/usbhw_lpc.c ****  */
 395:../common/lpcusb/target/usbhw_lpc.c **** int USBHwEPRead(U8 bEP, U8 *pbBuf, U32 iMaxLen)
 396:../common/lpcusb/target/usbhw_lpc.c **** {
 914              		.loc 1 396 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 32
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 88B0     		sub	sp, sp, #32
 923              		.cfi_def_cfa_offset 40
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
 926 0006 0346     		mov	r3, r0
 927 0008 B960     		str	r1, [r7, #8]
 928 000a 7A60     		str	r2, [r7, #4]
 929 000c FB73     		strb	r3, [r7, #15]
 397:../common/lpcusb/target/usbhw_lpc.c ****     U32 i, idx;
 398:../common/lpcusb/target/usbhw_lpc.c ****     U32 dwData, dwLen;
 399:../common/lpcusb/target/usbhw_lpc.c ****     
 400:../common/lpcusb/target/usbhw_lpc.c ****     idx = EP2IDX(bEP);
 930              		.loc 1 400 0
 931 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 932 0010 03F00F03 		and	r3, r3, #15
 933 0014 5B00     		lsls	r3, r3, #1
 934 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 935 0018 D209     		lsrs	r2, r2, #7
 936 001a D2B2     		uxtb	r2, r2
 937 001c 1343     		orrs	r3, r3, r2
 938 001e 7B61     		str	r3, [r7, #20]
 401:../common/lpcusb/target/usbhw_lpc.c ****     
ARM GAS  /tmp/cczMJFp8.s 			page 24


 402:../common/lpcusb/target/usbhw_lpc.c ****     // set read enable bit for specific endpoint
 403:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = RD_EN | ((bEP & 0xF) << 2);
 939              		.loc 1 403 0
 940 0020 274A     		ldr	r2, .L51
 941 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 942 0024 03F00F03 		and	r3, r3, #15
 943 0028 9B00     		lsls	r3, r3, #2
 944 002a 43F00103 		orr	r3, r3, #1
 945 002e 1360     		str	r3, [r2]
 946              	.L44:
 404:../common/lpcusb/target/usbhw_lpc.c ****     
 405:../common/lpcusb/target/usbhw_lpc.c ****     // wait for PKT_RDY
 406:../common/lpcusb/target/usbhw_lpc.c ****     do {
 407:../common/lpcusb/target/usbhw_lpc.c ****         dwLen = USBRxPLen;
 947              		.loc 1 407 0 discriminator 1
 948 0030 244B     		ldr	r3, .L51+4
 949 0032 1B68     		ldr	r3, [r3]
 950 0034 3B61     		str	r3, [r7, #16]
 408:../common/lpcusb/target/usbhw_lpc.c ****     } while ((dwLen & PKT_RDY) == 0);
 951              		.loc 1 408 0 discriminator 1
 952 0036 3B69     		ldr	r3, [r7, #16]
 953 0038 03F40063 		and	r3, r3, #2048
 954 003c 002B     		cmp	r3, #0
 955 003e F7D0     		beq	.L44
 409:../common/lpcusb/target/usbhw_lpc.c ****     
 410:../common/lpcusb/target/usbhw_lpc.c ****     // packet valid?
 411:../common/lpcusb/target/usbhw_lpc.c ****     if ((dwLen & DV) == 0) {
 956              		.loc 1 411 0
 957 0040 3B69     		ldr	r3, [r7, #16]
 958 0042 03F48063 		and	r3, r3, #1024
 959 0046 002B     		cmp	r3, #0
 960 0048 02D1     		bne	.L45
 412:../common/lpcusb/target/usbhw_lpc.c ****         return -1;
 961              		.loc 1 412 0
 962 004a 4FF0FF33 		mov	r3, #-1
 963 004e 33E0     		b	.L46
 964              	.L45:
 413:../common/lpcusb/target/usbhw_lpc.c ****     }
 414:../common/lpcusb/target/usbhw_lpc.c ****     
 415:../common/lpcusb/target/usbhw_lpc.c ****     // get length
 416:../common/lpcusb/target/usbhw_lpc.c ****     dwLen &= PKT_LNGTH_MASK;
 965              		.loc 1 416 0
 966 0050 3B69     		ldr	r3, [r7, #16]
 967 0052 C3F30903 		ubfx	r3, r3, #0, #10
 968 0056 3B61     		str	r3, [r7, #16]
 417:../common/lpcusb/target/usbhw_lpc.c ****     
 418:../common/lpcusb/target/usbhw_lpc.c ****     // get data
 419:../common/lpcusb/target/usbhw_lpc.c ****     dwData = 0;
 969              		.loc 1 419 0
 970 0058 0023     		movs	r3, #0
 971 005a BB61     		str	r3, [r7, #24]
 420:../common/lpcusb/target/usbhw_lpc.c ****     for (i = 0; i < dwLen; i++) {
 972              		.loc 1 420 0
 973 005c 0023     		movs	r3, #0
 974 005e FB61     		str	r3, [r7, #28]
 975 0060 1AE0     		b	.L47
 976              	.L50:
ARM GAS  /tmp/cczMJFp8.s 			page 25


 421:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 977              		.loc 1 421 0
 978 0062 FB69     		ldr	r3, [r7, #28]
 979 0064 03F00303 		and	r3, r3, #3
 980 0068 002B     		cmp	r3, #0
 981 006a 02D1     		bne	.L48
 422:../common/lpcusb/target/usbhw_lpc.c ****             dwData = USBRxData;
 982              		.loc 1 422 0
 983 006c 164B     		ldr	r3, .L51+8
 984 006e 1B68     		ldr	r3, [r3]
 985 0070 BB61     		str	r3, [r7, #24]
 986              	.L48:
 423:../common/lpcusb/target/usbhw_lpc.c ****         }
 424:../common/lpcusb/target/usbhw_lpc.c ****         if ((pbBuf != NULL) && (i < iMaxLen)) {
 987              		.loc 1 424 0
 988 0072 BB68     		ldr	r3, [r7, #8]
 989 0074 002B     		cmp	r3, #0
 990 0076 09D0     		beq	.L49
 991              		.loc 1 424 0 is_stmt 0 discriminator 1
 992 0078 FA69     		ldr	r2, [r7, #28]
 993 007a 7B68     		ldr	r3, [r7, #4]
 994 007c 9A42     		cmp	r2, r3
 995 007e 05D2     		bcs	.L49
 425:../common/lpcusb/target/usbhw_lpc.c ****             pbBuf[i] = dwData & 0xFF;
 996              		.loc 1 425 0 is_stmt 1
 997 0080 BA68     		ldr	r2, [r7, #8]
 998 0082 FB69     		ldr	r3, [r7, #28]
 999 0084 1344     		add	r3, r3, r2
 1000 0086 BA69     		ldr	r2, [r7, #24]
 1001 0088 D2B2     		uxtb	r2, r2
 1002 008a 1A70     		strb	r2, [r3]
 1003              	.L49:
 426:../common/lpcusb/target/usbhw_lpc.c ****         }
 427:../common/lpcusb/target/usbhw_lpc.c ****         dwData >>= 8;
 1004              		.loc 1 427 0 discriminator 2
 1005 008c BB69     		ldr	r3, [r7, #24]
 1006 008e 1B0A     		lsrs	r3, r3, #8
 1007 0090 BB61     		str	r3, [r7, #24]
 420:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 1008              		.loc 1 420 0 discriminator 2
 1009 0092 FB69     		ldr	r3, [r7, #28]
 1010 0094 0133     		adds	r3, r3, #1
 1011 0096 FB61     		str	r3, [r7, #28]
 1012              	.L47:
 420:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 1013              		.loc 1 420 0 is_stmt 0 discriminator 1
 1014 0098 FA69     		ldr	r2, [r7, #28]
 1015 009a 3B69     		ldr	r3, [r7, #16]
 1016 009c 9A42     		cmp	r2, r3
 1017 009e E0D3     		bcc	.L50
 428:../common/lpcusb/target/usbhw_lpc.c ****     }
 429:../common/lpcusb/target/usbhw_lpc.c **** 
 430:../common/lpcusb/target/usbhw_lpc.c ****     // make sure RD_EN is clear
 431:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = 0;
 1018              		.loc 1 431 0 is_stmt 1
 1019 00a0 074B     		ldr	r3, .L51
 1020 00a2 0022     		movs	r2, #0
ARM GAS  /tmp/cczMJFp8.s 			page 26


 1021 00a4 1A60     		str	r2, [r3]
 432:../common/lpcusb/target/usbhw_lpc.c **** 
 433:../common/lpcusb/target/usbhw_lpc.c ****     // select endpoint and clear buffer
 434:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_SELECT | idx);
 1022              		.loc 1 434 0
 1023 00a6 7B69     		ldr	r3, [r7, #20]
 1024 00a8 DBB2     		uxtb	r3, r3
 1025 00aa 1846     		mov	r0, r3
 1026 00ac FFF7FEFF 		bl	USBHwCmd
 435:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_CLEAR_BUFFER);
 1027              		.loc 1 435 0
 1028 00b0 F220     		movs	r0, #242
 1029 00b2 FFF7FEFF 		bl	USBHwCmd
 436:../common/lpcusb/target/usbhw_lpc.c ****     
 437:../common/lpcusb/target/usbhw_lpc.c ****     return dwLen;
 1030              		.loc 1 437 0
 1031 00b6 3B69     		ldr	r3, [r7, #16]
 1032              	.L46:
 438:../common/lpcusb/target/usbhw_lpc.c **** }
 1033              		.loc 1 438 0
 1034 00b8 1846     		mov	r0, r3
 1035 00ba 2037     		adds	r7, r7, #32
 1036              		.cfi_def_cfa_offset 8
 1037 00bc BD46     		mov	sp, r7
 1038              		.cfi_def_cfa_register 13
 1039              		@ sp needed
 1040 00be 80BD     		pop	{r7, pc}
 1041              	.L52:
 1042              		.align	2
 1043              	.L51:
 1044 00c0 28C20050 		.word	1342226984
 1045 00c4 20C20050 		.word	1342226976
 1046 00c8 18C20050 		.word	1342226968
 1047              		.cfi_endproc
 1048              	.LFE16:
 1050              		.section	.text.fast_wait,"ax",%progbits
 1051              		.align	2
 1052              		.thumb
 1053              		.thumb_func
 1055              	fast_wait:
 1056              	.LFB17:
 439:../common/lpcusb/target/usbhw_lpc.c **** 
 440:../common/lpcusb/target/usbhw_lpc.c **** static void fast_wait() {
 1057              		.loc 1 440 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0000 80B4     		push	{r7}
 1063              		.cfi_def_cfa_offset 4
 1064              		.cfi_offset 7, -4
 1065 0002 83B0     		sub	sp, sp, #12
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 441:../common/lpcusb/target/usbhw_lpc.c **** #ifdef __GNUC__
 442:../common/lpcusb/target/usbhw_lpc.c ****     asm volatile("nop\n"); 
ARM GAS  /tmp/cczMJFp8.s 			page 27


 1069              		.loc 1 442 0
 1070              	@ 442 "../common/lpcusb/target/usbhw_lpc.c" 1
 1071 0006 00BF     		nop
 1072              	
 1073              	@ 0 "" 2
 443:../common/lpcusb/target/usbhw_lpc.c **** #endif
 444:../common/lpcusb/target/usbhw_lpc.c **** 
 445:../common/lpcusb/target/usbhw_lpc.c **** #ifdef __arm__
 446:../common/lpcusb/target/usbhw_lpc.c ****     volatile uint32_t fast_wait = 1;
 1074              		.loc 1 446 0
 1075              		.thumb
 1076 0008 0123     		movs	r3, #1
 1077 000a 7B60     		str	r3, [r7, #4]
 447:../common/lpcusb/target/usbhw_lpc.c ****     while(--fast_wait);
 1078              		.loc 1 447 0
 1079 000c 00BF     		nop
 1080              	.L54:
 1081              		.loc 1 447 0 is_stmt 0 discriminator 1
 1082 000e 7B68     		ldr	r3, [r7, #4]
 1083 0010 013B     		subs	r3, r3, #1
 1084 0012 7B60     		str	r3, [r7, #4]
 1085 0014 002B     		cmp	r3, #0
 1086 0016 FAD1     		bne	.L54
 448:../common/lpcusb/target/usbhw_lpc.c **** #endif
 449:../common/lpcusb/target/usbhw_lpc.c **** }
 1087              		.loc 1 449 0 is_stmt 1
 1088 0018 0C37     		adds	r7, r7, #12
 1089              		.cfi_def_cfa_offset 4
 1090 001a BD46     		mov	sp, r7
 1091              		.cfi_def_cfa_register 13
 1092              		@ sp needed
 1093 001c 5DF8047B 		ldr	r7, [sp], #4
 1094              		.cfi_restore 7
 1095              		.cfi_def_cfa_offset 0
 1096 0020 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE17:
 1100              		.section	.text.USBHwISOCEPRead,"ax",%progbits
 1101              		.align	2
 1102              		.global	USBHwISOCEPRead
 1103              		.thumb
 1104              		.thumb_func
 1106              	USBHwISOCEPRead:
 1107              	.LFB18:
 450:../common/lpcusb/target/usbhw_lpc.c **** 
 451:../common/lpcusb/target/usbhw_lpc.c **** 
 452:../common/lpcusb/target/usbhw_lpc.c **** int USBHwISOCEPRead(const U8 bEP, U8 *pbBuf, const U32 iMaxLen)
 453:../common/lpcusb/target/usbhw_lpc.c **** {
 1108              		.loc 1 453 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 32
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112 0000 80B5     		push	{r7, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/cczMJFp8.s 			page 28


 1117              		.cfi_def_cfa_offset 40
 1118 0004 00AF     		add	r7, sp, #0
 1119              		.cfi_def_cfa_register 7
 1120 0006 0346     		mov	r3, r0
 1121 0008 B960     		str	r1, [r7, #8]
 1122 000a 7A60     		str	r2, [r7, #4]
 1123 000c FB73     		strb	r3, [r7, #15]
 454:../common/lpcusb/target/usbhw_lpc.c ****     U32 i, idx;
 455:../common/lpcusb/target/usbhw_lpc.c ****     U32 dwData, dwLen;
 456:../common/lpcusb/target/usbhw_lpc.c **** 
 457:../common/lpcusb/target/usbhw_lpc.c ****     idx = EP2IDX(bEP);
 1124              		.loc 1 457 0
 1125 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1126 0010 03F00F03 		and	r3, r3, #15
 1127 0014 5B00     		lsls	r3, r3, #1
 1128 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1129 0018 D209     		lsrs	r2, r2, #7
 1130 001a D2B2     		uxtb	r2, r2
 1131 001c 1343     		orrs	r3, r3, r2
 1132 001e 7B61     		str	r3, [r7, #20]
 458:../common/lpcusb/target/usbhw_lpc.c **** 
 459:../common/lpcusb/target/usbhw_lpc.c ****     // set read enable bit for specific endpoint
 460:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = RD_EN | ((bEP & 0xF) << 2);
 1133              		.loc 1 460 0
 1134 0020 2D4A     		ldr	r2, .L63
 1135 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1136 0024 03F00F03 		and	r3, r3, #15
 1137 0028 9B00     		lsls	r3, r3, #2
 1138 002a 43F00103 		orr	r3, r3, #1
 1139 002e 1360     		str	r3, [r2]
 461:../common/lpcusb/target/usbhw_lpc.c ****     
 462:../common/lpcusb/target/usbhw_lpc.c ****     //Note: for some reason the USB perepherial needs a cycle to set bits in USBRxPLen before 
 463:../common/lpcusb/target/usbhw_lpc.c ****     //reading, if you remove this ISOC wont work. This may be a but in the chip, or due to 
 464:../common/lpcusb/target/usbhw_lpc.c ****     //a mis-understanding of how the perepherial is supposed to work.    
 465:../common/lpcusb/target/usbhw_lpc.c ****     fast_wait();
 1140              		.loc 1 465 0
 1141 0030 FFF7FEFF 		bl	fast_wait
 466:../common/lpcusb/target/usbhw_lpc.c ****     
 467:../common/lpcusb/target/usbhw_lpc.c ****     dwLen = USBRxPLen;
 1142              		.loc 1 467 0
 1143 0034 294B     		ldr	r3, .L63+4
 1144 0036 1B68     		ldr	r3, [r3]
 1145 0038 3B61     		str	r3, [r7, #16]
 468:../common/lpcusb/target/usbhw_lpc.c ****     if( (dwLen & PKT_RDY) == 0 ) {
 1146              		.loc 1 468 0
 1147 003a 3B69     		ldr	r3, [r7, #16]
 1148 003c 03F40063 		and	r3, r3, #2048
 1149 0040 002B     		cmp	r3, #0
 1150 0042 05D1     		bne	.L56
 469:../common/lpcusb/target/usbhw_lpc.c ****         USBCtrl = 0;// make sure RD_EN is clear
 1151              		.loc 1 469 0
 1152 0044 244B     		ldr	r3, .L63
 1153 0046 0022     		movs	r2, #0
 1154 0048 1A60     		str	r2, [r3]
 470:../common/lpcusb/target/usbhw_lpc.c ****         return(-1);
 1155              		.loc 1 470 0
 1156 004a 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cczMJFp8.s 			page 29


 1157 004e 3EE0     		b	.L57
 1158              	.L56:
 471:../common/lpcusb/target/usbhw_lpc.c ****     }
 472:../common/lpcusb/target/usbhw_lpc.c **** 
 473:../common/lpcusb/target/usbhw_lpc.c ****     // packet valid?
 474:../common/lpcusb/target/usbhw_lpc.c ****     if ((dwLen & DV) == 0) {
 1159              		.loc 1 474 0
 1160 0050 3B69     		ldr	r3, [r7, #16]
 1161 0052 03F48063 		and	r3, r3, #1024
 1162 0056 002B     		cmp	r3, #0
 1163 0058 05D1     		bne	.L58
 475:../common/lpcusb/target/usbhw_lpc.c ****         USBCtrl = 0;// make sure RD_EN is clear
 1164              		.loc 1 475 0
 1165 005a 1F4B     		ldr	r3, .L63
 1166 005c 0022     		movs	r2, #0
 1167 005e 1A60     		str	r2, [r3]
 476:../common/lpcusb/target/usbhw_lpc.c ****         return -1;
 1168              		.loc 1 476 0
 1169 0060 4FF0FF33 		mov	r3, #-1
 1170 0064 33E0     		b	.L57
 1171              	.L58:
 477:../common/lpcusb/target/usbhw_lpc.c ****     }
 478:../common/lpcusb/target/usbhw_lpc.c **** 
 479:../common/lpcusb/target/usbhw_lpc.c ****     // get length
 480:../common/lpcusb/target/usbhw_lpc.c ****     dwLen &= PKT_LNGTH_MASK;
 1172              		.loc 1 480 0
 1173 0066 3B69     		ldr	r3, [r7, #16]
 1174 0068 C3F30903 		ubfx	r3, r3, #0, #10
 1175 006c 3B61     		str	r3, [r7, #16]
 481:../common/lpcusb/target/usbhw_lpc.c **** 
 482:../common/lpcusb/target/usbhw_lpc.c ****     // get data
 483:../common/lpcusb/target/usbhw_lpc.c ****     dwData = 0;
 1176              		.loc 1 483 0
 1177 006e 0023     		movs	r3, #0
 1178 0070 BB61     		str	r3, [r7, #24]
 484:../common/lpcusb/target/usbhw_lpc.c ****     for (i = 0; i < dwLen; i++) {
 1179              		.loc 1 484 0
 1180 0072 0023     		movs	r3, #0
 1181 0074 FB61     		str	r3, [r7, #28]
 1182 0076 1AE0     		b	.L59
 1183              	.L62:
 485:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 1184              		.loc 1 485 0
 1185 0078 FB69     		ldr	r3, [r7, #28]
 1186 007a 03F00303 		and	r3, r3, #3
 1187 007e 002B     		cmp	r3, #0
 1188 0080 02D1     		bne	.L60
 486:../common/lpcusb/target/usbhw_lpc.c ****             dwData = USBRxData;
 1189              		.loc 1 486 0
 1190 0082 174B     		ldr	r3, .L63+8
 1191 0084 1B68     		ldr	r3, [r3]
 1192 0086 BB61     		str	r3, [r7, #24]
 1193              	.L60:
 487:../common/lpcusb/target/usbhw_lpc.c ****         }
 488:../common/lpcusb/target/usbhw_lpc.c ****         if ((pbBuf != NULL) && (i < iMaxLen)) {
 1194              		.loc 1 488 0
 1195 0088 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/cczMJFp8.s 			page 30


 1196 008a 002B     		cmp	r3, #0
 1197 008c 09D0     		beq	.L61
 1198              		.loc 1 488 0 is_stmt 0 discriminator 1
 1199 008e FA69     		ldr	r2, [r7, #28]
 1200 0090 7B68     		ldr	r3, [r7, #4]
 1201 0092 9A42     		cmp	r2, r3
 1202 0094 05D2     		bcs	.L61
 489:../common/lpcusb/target/usbhw_lpc.c ****             pbBuf[i] = dwData & 0xFF;
 1203              		.loc 1 489 0 is_stmt 1
 1204 0096 BA68     		ldr	r2, [r7, #8]
 1205 0098 FB69     		ldr	r3, [r7, #28]
 1206 009a 1344     		add	r3, r3, r2
 1207 009c BA69     		ldr	r2, [r7, #24]
 1208 009e D2B2     		uxtb	r2, r2
 1209 00a0 1A70     		strb	r2, [r3]
 1210              	.L61:
 490:../common/lpcusb/target/usbhw_lpc.c ****         }
 491:../common/lpcusb/target/usbhw_lpc.c ****         dwData >>= 8;
 1211              		.loc 1 491 0 discriminator 2
 1212 00a2 BB69     		ldr	r3, [r7, #24]
 1213 00a4 1B0A     		lsrs	r3, r3, #8
 1214 00a6 BB61     		str	r3, [r7, #24]
 484:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 1215              		.loc 1 484 0 discriminator 2
 1216 00a8 FB69     		ldr	r3, [r7, #28]
 1217 00aa 0133     		adds	r3, r3, #1
 1218 00ac FB61     		str	r3, [r7, #28]
 1219              	.L59:
 484:../common/lpcusb/target/usbhw_lpc.c ****         if ((i % 4) == 0) {
 1220              		.loc 1 484 0 is_stmt 0 discriminator 1
 1221 00ae FA69     		ldr	r2, [r7, #28]
 1222 00b0 3B69     		ldr	r3, [r7, #16]
 1223 00b2 9A42     		cmp	r2, r3
 1224 00b4 E0D3     		bcc	.L62
 492:../common/lpcusb/target/usbhw_lpc.c ****     }
 493:../common/lpcusb/target/usbhw_lpc.c **** 
 494:../common/lpcusb/target/usbhw_lpc.c ****     // make sure RD_EN is clear
 495:../common/lpcusb/target/usbhw_lpc.c ****     USBCtrl = 0;
 1225              		.loc 1 495 0 is_stmt 1
 1226 00b6 084B     		ldr	r3, .L63
 1227 00b8 0022     		movs	r2, #0
 1228 00ba 1A60     		str	r2, [r3]
 496:../common/lpcusb/target/usbhw_lpc.c **** 
 497:../common/lpcusb/target/usbhw_lpc.c ****     // select endpoint and clear buffer
 498:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_SELECT | idx);
 1229              		.loc 1 498 0
 1230 00bc 7B69     		ldr	r3, [r7, #20]
 1231 00be DBB2     		uxtb	r3, r3
 1232 00c0 1846     		mov	r0, r3
 1233 00c2 FFF7FEFF 		bl	USBHwCmd
 499:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmd(CMD_EP_CLEAR_BUFFER);
 1234              		.loc 1 499 0
 1235 00c6 F220     		movs	r0, #242
 1236 00c8 FFF7FEFF 		bl	USBHwCmd
 500:../common/lpcusb/target/usbhw_lpc.c **** 
 501:../common/lpcusb/target/usbhw_lpc.c ****     return dwLen;
 1237              		.loc 1 501 0
ARM GAS  /tmp/cczMJFp8.s 			page 31


 1238 00cc 3B69     		ldr	r3, [r7, #16]
 1239              	.L57:
 502:../common/lpcusb/target/usbhw_lpc.c **** }
 1240              		.loc 1 502 0
 1241 00ce 1846     		mov	r0, r3
 1242 00d0 2037     		adds	r7, r7, #32
 1243              		.cfi_def_cfa_offset 8
 1244 00d2 BD46     		mov	sp, r7
 1245              		.cfi_def_cfa_register 13
 1246              		@ sp needed
 1247 00d4 80BD     		pop	{r7, pc}
 1248              	.L64:
 1249 00d6 00BF     		.align	2
 1250              	.L63:
 1251 00d8 28C20050 		.word	1342226984
 1252 00dc 20C20050 		.word	1342226976
 1253 00e0 18C20050 		.word	1342226968
 1254              		.cfi_endproc
 1255              	.LFE18:
 1257              		.section	.text.USBHwConfigDevice,"ax",%progbits
 1258              		.align	2
 1259              		.global	USBHwConfigDevice
 1260              		.thumb
 1261              		.thumb_func
 1263              	USBHwConfigDevice:
 1264              	.LFB19:
 503:../common/lpcusb/target/usbhw_lpc.c **** 
 504:../common/lpcusb/target/usbhw_lpc.c **** 
 505:../common/lpcusb/target/usbhw_lpc.c **** /**
 506:../common/lpcusb/target/usbhw_lpc.c ****     Sets the 'configured' state.
 507:../common/lpcusb/target/usbhw_lpc.c ****         
 508:../common/lpcusb/target/usbhw_lpc.c ****     All registered endpoints are 'realised' and enabled, and the
 509:../common/lpcusb/target/usbhw_lpc.c ****     'configured' bit is set in the device status register.
 510:../common/lpcusb/target/usbhw_lpc.c ****         
 511:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] fConfigured If TRUE, configure device, else unconfigure
 512:../common/lpcusb/target/usbhw_lpc.c ****  */
 513:../common/lpcusb/target/usbhw_lpc.c **** void USBHwConfigDevice(BOOL fConfigured)
 514:../common/lpcusb/target/usbhw_lpc.c **** {
 1265              		.loc 1 514 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 8
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269 0000 80B5     		push	{r7, lr}
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
 1273 0002 82B0     		sub	sp, sp, #8
 1274              		.cfi_def_cfa_offset 16
 1275 0004 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 1277 0006 7860     		str	r0, [r7, #4]
 515:../common/lpcusb/target/usbhw_lpc.c ****     // set configured bit
 516:../common/lpcusb/target/usbhw_lpc.c ****     USBHwCmdWrite(CMD_DEV_CONFIG, fConfigured ? CONF_DEVICE : 0);
 1278              		.loc 1 516 0
 1279 0008 7B68     		ldr	r3, [r7, #4]
 1280 000a 002B     		cmp	r3, #0
 1281 000c 14BF     		ite	ne
ARM GAS  /tmp/cczMJFp8.s 			page 32


 1282 000e 0123     		movne	r3, #1
 1283 0010 0023     		moveq	r3, #0
 1284 0012 DBB2     		uxtb	r3, r3
 1285 0014 9BB2     		uxth	r3, r3
 1286 0016 D820     		movs	r0, #216
 1287 0018 1946     		mov	r1, r3
 1288 001a FFF7FEFF 		bl	USBHwCmdWrite
 517:../common/lpcusb/target/usbhw_lpc.c **** }
 1289              		.loc 1 517 0
 1290 001e 0837     		adds	r7, r7, #8
 1291              		.cfi_def_cfa_offset 8
 1292 0020 BD46     		mov	sp, r7
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 0022 80BD     		pop	{r7, pc}
 1296              		.cfi_endproc
 1297              	.LFE19:
 1299              		.section	.text.USBHwISR,"ax",%progbits
 1300              		.align	2
 1301              		.global	USBHwISR
 1302              		.thumb
 1303              		.thumb_func
 1305              	USBHwISR:
 1306              	.LFB20:
 518:../common/lpcusb/target/usbhw_lpc.c **** 
 519:../common/lpcusb/target/usbhw_lpc.c **** 
 520:../common/lpcusb/target/usbhw_lpc.c **** /**
 521:../common/lpcusb/target/usbhw_lpc.c ****     USB interrupt handler
 522:../common/lpcusb/target/usbhw_lpc.c ****         
 523:../common/lpcusb/target/usbhw_lpc.c ****     @todo Get all 11 bits of frame number instead of just 8
 524:../common/lpcusb/target/usbhw_lpc.c **** 
 525:../common/lpcusb/target/usbhw_lpc.c ****     Endpoint interrupts are mapped to the slow interrupt
 526:../common/lpcusb/target/usbhw_lpc.c ****  */
 527:../common/lpcusb/target/usbhw_lpc.c **** void USBHwISR(void)
 528:../common/lpcusb/target/usbhw_lpc.c **** {
 1307              		.loc 1 528 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 24
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311 0000 80B5     		push	{r7, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 86B0     		sub	sp, sp, #24
 1316              		.cfi_def_cfa_offset 32
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
 529:../common/lpcusb/target/usbhw_lpc.c ****     U32 dwStatus;
 530:../common/lpcusb/target/usbhw_lpc.c ****     U32 dwIntBit;
 531:../common/lpcusb/target/usbhw_lpc.c ****     U8  bEPStat, bDevStat, bStat;
 532:../common/lpcusb/target/usbhw_lpc.c ****     int i;
 533:../common/lpcusb/target/usbhw_lpc.c ****     U16 wFrame;
 534:../common/lpcusb/target/usbhw_lpc.c **** 
 535:../common/lpcusb/target/usbhw_lpc.c **** // LED9 monitors total time in interrupt routine
 536:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_ON(9);
 537:../common/lpcusb/target/usbhw_lpc.c **** 
 538:../common/lpcusb/target/usbhw_lpc.c ****     // handle device interrupts
ARM GAS  /tmp/cczMJFp8.s 			page 33


 539:../common/lpcusb/target/usbhw_lpc.c ****     dwStatus = USBDevIntSt;
 1319              		.loc 1 539 0
 1320 0006 5B4B     		ldr	r3, .L73
 1321 0008 1B68     		ldr	r3, [r3]
 1322 000a 3B61     		str	r3, [r7, #16]
 540:../common/lpcusb/target/usbhw_lpc.c ****     
 541:../common/lpcusb/target/usbhw_lpc.c ****     // frame interrupt
 542:../common/lpcusb/target/usbhw_lpc.c ****     if (dwStatus & FRAME) {
 1323              		.loc 1 542 0
 1324 000c 3B69     		ldr	r3, [r7, #16]
 1325 000e 03F00103 		and	r3, r3, #1
 1326 0012 002B     		cmp	r3, #0
 1327 0014 10D0     		beq	.L67
 543:../common/lpcusb/target/usbhw_lpc.c ****         // clear int
 544:../common/lpcusb/target/usbhw_lpc.c ****         USBDevIntClr = FRAME;
 1328              		.loc 1 544 0
 1329 0016 584B     		ldr	r3, .L73+4
 1330 0018 0122     		movs	r2, #1
 1331 001a 1A60     		str	r2, [r3]
 545:../common/lpcusb/target/usbhw_lpc.c ****         // call handler
 546:../common/lpcusb/target/usbhw_lpc.c ****         if (_pfnFrameHandler != NULL) {
 1332              		.loc 1 546 0
 1333 001c 574B     		ldr	r3, .L73+8
 1334 001e 1B68     		ldr	r3, [r3]
 1335 0020 002B     		cmp	r3, #0
 1336 0022 09D0     		beq	.L67
 547:../common/lpcusb/target/usbhw_lpc.c ****             wFrame = USBHwCmdRead(CMD_DEV_READ_CUR_FRAME_NR);
 1337              		.loc 1 547 0
 1338 0024 F520     		movs	r0, #245
 1339 0026 FFF7FEFF 		bl	USBHwCmdRead
 1340 002a 0346     		mov	r3, r0
 1341 002c FB81     		strh	r3, [r7, #14]	@ movhi
 548:../common/lpcusb/target/usbhw_lpc.c ****             _pfnFrameHandler(wFrame);
 1342              		.loc 1 548 0
 1343 002e 534B     		ldr	r3, .L73+8
 1344 0030 1B68     		ldr	r3, [r3]
 1345 0032 FA89     		ldrh	r2, [r7, #14]
 1346 0034 1046     		mov	r0, r2
 1347 0036 9847     		blx	r3
 1348              	.L67:
 549:../common/lpcusb/target/usbhw_lpc.c ****         }
 550:../common/lpcusb/target/usbhw_lpc.c ****     }
 551:../common/lpcusb/target/usbhw_lpc.c ****     
 552:../common/lpcusb/target/usbhw_lpc.c ****     // device status interrupt
 553:../common/lpcusb/target/usbhw_lpc.c ****     if (dwStatus & DEV_STAT) {
 1349              		.loc 1 553 0
 1350 0038 3B69     		ldr	r3, [r7, #16]
 1351 003a 03F00803 		and	r3, r3, #8
 1352 003e 002B     		cmp	r3, #0
 1353 0040 2BD0     		beq	.L68
 554:../common/lpcusb/target/usbhw_lpc.c ****         /*  Clear DEV_STAT interrupt before reading DEV_STAT register.
 555:../common/lpcusb/target/usbhw_lpc.c ****             This prevents corrupted device status reads, see
 556:../common/lpcusb/target/usbhw_lpc.c ****             LPC2148 User manual revision 2, 25 july 2006.
 557:../common/lpcusb/target/usbhw_lpc.c ****         */
 558:../common/lpcusb/target/usbhw_lpc.c ****         USBDevIntClr = DEV_STAT;
 1354              		.loc 1 558 0
 1355 0042 4D4B     		ldr	r3, .L73+4
ARM GAS  /tmp/cczMJFp8.s 			page 34


 1356 0044 0822     		movs	r2, #8
 1357 0046 1A60     		str	r2, [r3]
 559:../common/lpcusb/target/usbhw_lpc.c ****         bDevStat = USBHwCmdRead(CMD_DEV_STATUS);
 1358              		.loc 1 559 0
 1359 0048 FE20     		movs	r0, #254
 1360 004a FFF7FEFF 		bl	USBHwCmdRead
 1361 004e 0346     		mov	r3, r0
 1362 0050 7B73     		strb	r3, [r7, #13]
 560:../common/lpcusb/target/usbhw_lpc.c ****         if (bDevStat & (CON_CH | SUS_CH | RST)) {
 1363              		.loc 1 560 0
 1364 0052 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1365 0054 03F01A03 		and	r3, r3, #26
 1366 0058 002B     		cmp	r3, #0
 1367 005a 1ED0     		beq	.L68
 561:../common/lpcusb/target/usbhw_lpc.c ****             // convert device status into something HW independent
 562:../common/lpcusb/target/usbhw_lpc.c ****             bStat = ((bDevStat & CON) ? DEV_STATUS_CONNECT : 0) |
 1368              		.loc 1 562 0
 1369 005c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1370 005e 03F00103 		and	r3, r3, #1
 1371 0062 002B     		cmp	r3, #0
 1372 0064 14BF     		ite	ne
 1373 0066 0123     		movne	r3, #1
 1374 0068 0023     		moveq	r3, #0
 1375 006a DBB2     		uxtb	r3, r3
 1376 006c DAB2     		uxtb	r2, r3
 1377 006e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1378 0070 03F00403 		and	r3, r3, #4
 1379 0074 DBB2     		uxtb	r3, r3
 1380 0076 1343     		orrs	r3, r3, r2
 1381 0078 DAB2     		uxtb	r2, r3
 1382 007a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1383 007c 03F01003 		and	r3, r3, #16
 1384 0080 DBB2     		uxtb	r3, r3
 1385 0082 1343     		orrs	r3, r3, r2
 1386 0084 DBB2     		uxtb	r3, r3
 1387 0086 3B73     		strb	r3, [r7, #12]
 563:../common/lpcusb/target/usbhw_lpc.c ****                     ((bDevStat & SUS) ? DEV_STATUS_SUSPEND : 0) |
 564:../common/lpcusb/target/usbhw_lpc.c ****                     ((bDevStat & RST) ? DEV_STATUS_RESET : 0);
 565:../common/lpcusb/target/usbhw_lpc.c ****             // call handler
 566:../common/lpcusb/target/usbhw_lpc.c ****             if (_pfnDevIntHandler != NULL) {
 1388              		.loc 1 566 0
 1389 0088 3D4B     		ldr	r3, .L73+12
 1390 008a 1B68     		ldr	r3, [r3]
 1391 008c 002B     		cmp	r3, #0
 1392 008e 04D0     		beq	.L68
 567:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_ON(8);        
 568:../common/lpcusb/target/usbhw_lpc.c ****                 _pfnDevIntHandler(bStat);
 1393              		.loc 1 568 0
 1394 0090 3B4B     		ldr	r3, .L73+12
 1395 0092 1B68     		ldr	r3, [r3]
 1396 0094 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1397 0096 1046     		mov	r0, r2
 1398 0098 9847     		blx	r3
 1399              	.L68:
 569:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_OFF(8);       
 570:../common/lpcusb/target/usbhw_lpc.c ****             }
 571:../common/lpcusb/target/usbhw_lpc.c ****         }
ARM GAS  /tmp/cczMJFp8.s 			page 35


 572:../common/lpcusb/target/usbhw_lpc.c ****     }
 573:../common/lpcusb/target/usbhw_lpc.c ****     
 574:../common/lpcusb/target/usbhw_lpc.c ****     // endpoint interrupt
 575:../common/lpcusb/target/usbhw_lpc.c ****     if (dwStatus & EP_SLOW) {
 1400              		.loc 1 575 0
 1401 009a 3B69     		ldr	r3, [r7, #16]
 1402 009c 03F00403 		and	r3, r3, #4
 1403 00a0 002B     		cmp	r3, #0
 1404 00a2 63D0     		beq	.L66
 576:../common/lpcusb/target/usbhw_lpc.c ****         // clear EP_SLOW
 577:../common/lpcusb/target/usbhw_lpc.c ****         USBDevIntClr = EP_SLOW;
 1405              		.loc 1 577 0
 1406 00a4 344B     		ldr	r3, .L73+4
 1407 00a6 0422     		movs	r2, #4
 1408 00a8 1A60     		str	r2, [r3]
 578:../common/lpcusb/target/usbhw_lpc.c ****         // check all endpoints
 579:../common/lpcusb/target/usbhw_lpc.c ****         for (i = 0; i < 32; i++) {
 1409              		.loc 1 579 0
 1410 00aa 0023     		movs	r3, #0
 1411 00ac 7B61     		str	r3, [r7, #20]
 1412 00ae 5AE0     		b	.L70
 1413              	.L72:
 580:../common/lpcusb/target/usbhw_lpc.c ****             dwIntBit = (1 << i);
 1414              		.loc 1 580 0
 1415 00b0 0122     		movs	r2, #1
 1416 00b2 7B69     		ldr	r3, [r7, #20]
 1417 00b4 02FA03F3 		lsl	r3, r2, r3
 1418 00b8 BB60     		str	r3, [r7, #8]
 581:../common/lpcusb/target/usbhw_lpc.c ****             if (USBEpIntSt & dwIntBit) {
 1419              		.loc 1 581 0
 1420 00ba 324B     		ldr	r3, .L73+16
 1421 00bc 1A68     		ldr	r2, [r3]
 1422 00be BB68     		ldr	r3, [r7, #8]
 1423 00c0 1340     		ands	r3, r3, r2
 1424 00c2 002B     		cmp	r3, #0
 1425 00c4 4CD0     		beq	.L71
 582:../common/lpcusb/target/usbhw_lpc.c ****                 // clear int (and retrieve status)
 583:../common/lpcusb/target/usbhw_lpc.c ****                 USBEpIntClr = dwIntBit;
 1426              		.loc 1 583 0
 1427 00c6 304A     		ldr	r2, .L73+20
 1428 00c8 BB68     		ldr	r3, [r7, #8]
 1429 00ca 1360     		str	r3, [r2]
 584:../common/lpcusb/target/usbhw_lpc.c ****                 Wait4DevInt(CDFULL);
 1430              		.loc 1 584 0
 1431 00cc 2020     		movs	r0, #32
 1432 00ce FFF7FEFF 		bl	Wait4DevInt
 585:../common/lpcusb/target/usbhw_lpc.c ****                 bEPStat = USBCmdData;
 1433              		.loc 1 585 0
 1434 00d2 2E4B     		ldr	r3, .L73+24
 1435 00d4 1B68     		ldr	r3, [r3]
 1436 00d6 FB71     		strb	r3, [r7, #7]
 586:../common/lpcusb/target/usbhw_lpc.c ****                 // convert EP pipe stat into something HW independent
 587:../common/lpcusb/target/usbhw_lpc.c ****                 bStat = ((bEPStat & EPSTAT_FE) ? EP_STATUS_DATA : 0) |
 1437              		.loc 1 587 0
 1438 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1439 00da 03F00103 		and	r3, r3, #1
 1440 00de 002B     		cmp	r3, #0
ARM GAS  /tmp/cczMJFp8.s 			page 36


 1441 00e0 14BF     		ite	ne
 1442 00e2 0123     		movne	r3, #1
 1443 00e4 0023     		moveq	r3, #0
 1444 00e6 DBB2     		uxtb	r3, r3
 1445 00e8 DAB2     		uxtb	r2, r3
 1446 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1447 00ec 03F00203 		and	r3, r3, #2
 1448 00f0 DBB2     		uxtb	r3, r3
 1449 00f2 1343     		orrs	r3, r3, r2
 1450 00f4 DAB2     		uxtb	r2, r3
 1451 00f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1452 00f8 03F00403 		and	r3, r3, #4
 1453 00fc DBB2     		uxtb	r3, r3
 1454 00fe 1343     		orrs	r3, r3, r2
 1455 0100 DAB2     		uxtb	r2, r3
 1456 0102 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1457 0104 03F01003 		and	r3, r3, #16
 1458 0108 DBB2     		uxtb	r3, r3
 1459 010a 1343     		orrs	r3, r3, r2
 1460 010c DAB2     		uxtb	r2, r3
 1461 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1462 0110 03F00803 		and	r3, r3, #8
 1463 0114 DBB2     		uxtb	r3, r3
 1464 0116 1343     		orrs	r3, r3, r2
 1465 0118 DBB2     		uxtb	r3, r3
 1466 011a 3B73     		strb	r3, [r7, #12]
 588:../common/lpcusb/target/usbhw_lpc.c ****                         ((bEPStat & EPSTAT_ST) ? EP_STATUS_STALLED : 0) |
 589:../common/lpcusb/target/usbhw_lpc.c ****                         ((bEPStat & EPSTAT_STP) ? EP_STATUS_SETUP : 0) |
 590:../common/lpcusb/target/usbhw_lpc.c ****                         ((bEPStat & EPSTAT_EPN) ? EP_STATUS_NACKED : 0) |
 591:../common/lpcusb/target/usbhw_lpc.c ****                         ((bEPStat & EPSTAT_PO) ? EP_STATUS_ERROR : 0);
 592:../common/lpcusb/target/usbhw_lpc.c ****                 // call handler
 593:../common/lpcusb/target/usbhw_lpc.c ****                 if (_apfnEPIntHandlers[i / 2] != NULL) {
 1467              		.loc 1 593 0
 1468 011c 7B69     		ldr	r3, [r7, #20]
 1469 011e DA0F     		lsrs	r2, r3, #31
 1470 0120 1344     		add	r3, r3, r2
 1471 0122 5B10     		asrs	r3, r3, #1
 1472 0124 1A46     		mov	r2, r3
 1473 0126 1A4B     		ldr	r3, .L73+28
 1474 0128 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1475 012c 002B     		cmp	r3, #0
 1476 012e 17D0     		beq	.L71
 594:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_ON(10);       
 595:../common/lpcusb/target/usbhw_lpc.c ****                     _apfnEPIntHandlers[i / 2](IDX2EP(i), bStat);
 1477              		.loc 1 595 0
 1478 0130 7B69     		ldr	r3, [r7, #20]
 1479 0132 DA0F     		lsrs	r2, r3, #31
 1480 0134 1344     		add	r3, r3, r2
 1481 0136 5B10     		asrs	r3, r3, #1
 1482 0138 1A46     		mov	r2, r3
 1483 013a 154B     		ldr	r3, .L73+28
 1484 013c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1485 0140 7A69     		ldr	r2, [r7, #20]
 1486 0142 D201     		lsls	r2, r2, #7
 1487 0144 D1B2     		uxtb	r1, r2
 1488 0146 7A69     		ldr	r2, [r7, #20]
 1489 0148 5210     		asrs	r2, r2, #1
ARM GAS  /tmp/cczMJFp8.s 			page 37


 1490 014a D2B2     		uxtb	r2, r2
 1491 014c 02F00F02 		and	r2, r2, #15
 1492 0150 D2B2     		uxtb	r2, r2
 1493 0152 0A43     		orrs	r2, r2, r1
 1494 0154 D2B2     		uxtb	r2, r2
 1495 0156 D1B2     		uxtb	r1, r2
 1496 0158 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1497 015a 0846     		mov	r0, r1
 1498 015c 1146     		mov	r1, r2
 1499 015e 9847     		blx	r3
 1500              	.L71:
 579:../common/lpcusb/target/usbhw_lpc.c ****             dwIntBit = (1 << i);
 1501              		.loc 1 579 0 discriminator 2
 1502 0160 7B69     		ldr	r3, [r7, #20]
 1503 0162 0133     		adds	r3, r3, #1
 1504 0164 7B61     		str	r3, [r7, #20]
 1505              	.L70:
 579:../common/lpcusb/target/usbhw_lpc.c ****             dwIntBit = (1 << i);
 1506              		.loc 1 579 0 is_stmt 0 discriminator 1
 1507 0166 7B69     		ldr	r3, [r7, #20]
 1508 0168 1F2B     		cmp	r3, #31
 1509 016a A1DD     		ble	.L72
 1510              	.L66:
 596:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_OFF(10);
 597:../common/lpcusb/target/usbhw_lpc.c ****                 }
 598:../common/lpcusb/target/usbhw_lpc.c ****             }
 599:../common/lpcusb/target/usbhw_lpc.c ****         }
 600:../common/lpcusb/target/usbhw_lpc.c ****     }
 601:../common/lpcusb/target/usbhw_lpc.c ****     
 602:../common/lpcusb/target/usbhw_lpc.c **** DEBUG_LED_OFF(9);       
 603:../common/lpcusb/target/usbhw_lpc.c **** }
 1511              		.loc 1 603 0 is_stmt 1
 1512 016c 1837     		adds	r7, r7, #24
 1513              		.cfi_def_cfa_offset 8
 1514 016e BD46     		mov	sp, r7
 1515              		.cfi_def_cfa_register 13
 1516              		@ sp needed
 1517 0170 80BD     		pop	{r7, pc}
 1518              	.L74:
 1519 0172 00BF     		.align	2
 1520              	.L73:
 1521 0174 00C20050 		.word	1342226944
 1522 0178 08C20050 		.word	1342226952
 1523 017c 44000000 		.word	_pfnFrameHandler
 1524 0180 00000000 		.word	_pfnDevIntHandler
 1525 0184 30C20050 		.word	1342226992
 1526 0188 38C20050 		.word	1342227000
 1527 018c 14C20050 		.word	1342226964
 1528 0190 04000000 		.word	_apfnEPIntHandlers
 1529              		.cfi_endproc
 1530              	.LFE20:
 1532              		.section	.text.USBHwInit,"ax",%progbits
 1533              		.align	2
 1534              		.global	USBHwInit
 1535              		.thumb
 1536              		.thumb_func
 1538              	USBHwInit:
ARM GAS  /tmp/cczMJFp8.s 			page 38


 1539              	.LFB21:
 604:../common/lpcusb/target/usbhw_lpc.c **** 
 605:../common/lpcusb/target/usbhw_lpc.c **** 
 606:../common/lpcusb/target/usbhw_lpc.c **** 
 607:../common/lpcusb/target/usbhw_lpc.c **** /**
 608:../common/lpcusb/target/usbhw_lpc.c ****     Initialises the USB hardware
 609:../common/lpcusb/target/usbhw_lpc.c ****         
 610:../common/lpcusb/target/usbhw_lpc.c ****     This function assumes that the hardware is connected as shown in
 611:../common/lpcusb/target/usbhw_lpc.c ****     section 10.1 of the LPC2148 data sheet:
 612:../common/lpcusb/target/usbhw_lpc.c ****     * P0.31 controls a switch to connect a 1.5k pull-up to D+ if low.
 613:../common/lpcusb/target/usbhw_lpc.c ****     * P0.23 is connected to USB VCC.
 614:../common/lpcusb/target/usbhw_lpc.c ****     
 615:../common/lpcusb/target/usbhw_lpc.c ****     Embedded artists board: make sure to disconnect P0.23 LED as it
 616:../common/lpcusb/target/usbhw_lpc.c ****     acts as a pull-up and so prevents detection of USB disconnect.
 617:../common/lpcusb/target/usbhw_lpc.c ****         
 618:../common/lpcusb/target/usbhw_lpc.c ****     @return TRUE if the hardware was successfully initialised
 619:../common/lpcusb/target/usbhw_lpc.c ****  */
 620:../common/lpcusb/target/usbhw_lpc.c **** BOOL USBHwInit(void)
 621:../common/lpcusb/target/usbhw_lpc.c **** {
 1540              		.loc 1 621 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544 0000 80B5     		push	{r7, lr}
 1545              		.cfi_def_cfa_offset 8
 1546              		.cfi_offset 7, -8
 1547              		.cfi_offset 14, -4
 1548 0002 00AF     		add	r7, sp, #0
 1549              		.cfi_def_cfa_register 7
 622:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC17xx
 623:../common/lpcusb/target/usbhw_lpc.c **** 	// P2.9 is USB_CONNECT
 624:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL4 = (PINSEL4 & ~(3 << 18)) | (1 << 18);
 1550              		.loc 1 624 0
 1551 0004 2D4A     		ldr	r2, .L79
 1552 0006 2D4B     		ldr	r3, .L79
 1553 0008 1B68     		ldr	r3, [r3]
 1554 000a 23F44023 		bic	r3, r3, #786432
 1555 000e 43F48023 		orr	r3, r3, #262144
 1556 0012 1360     		str	r3, [r2]
 625:../common/lpcusb/target/usbhw_lpc.c **** 
 626:../common/lpcusb/target/usbhw_lpc.c **** 	// P1.18 is USB_UP_LED
 627:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL3 = (PINSEL3 & ~(3 << 4)) | (1 << 4);
 1557              		.loc 1 627 0
 1558 0014 2A4A     		ldr	r2, .L79+4
 1559 0016 2A4B     		ldr	r3, .L79+4
 1560 0018 1B68     		ldr	r3, [r3]
 1561 001a 23F03003 		bic	r3, r3, #48
 1562 001e 43F01003 		orr	r3, r3, #16
 1563 0022 1360     		str	r3, [r2]
 628:../common/lpcusb/target/usbhw_lpc.c **** 
 629:../common/lpcusb/target/usbhw_lpc.c **** 	// P1.30 is VBUS
 630:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL3 = (PINSEL3 & ~(3 << 28)) | (2 << 28);
 1564              		.loc 1 630 0
 1565 0024 264A     		ldr	r2, .L79+4
 1566 0026 264B     		ldr	r3, .L79+4
 1567 0028 1B68     		ldr	r3, [r3]
 1568 002a 23F04053 		bic	r3, r3, #805306368
ARM GAS  /tmp/cczMJFp8.s 			page 39


 1569 002e 43F00053 		orr	r3, r3, #536870912
 1570 0032 1360     		str	r3, [r2]
 631:../common/lpcusb/target/usbhw_lpc.c **** 
 632:../common/lpcusb/target/usbhw_lpc.c **** 	// P0.29 is USB_D+
 633:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~(3 << 26)) | (1 << 26);
 1571              		.loc 1 633 0
 1572 0034 234A     		ldr	r2, .L79+8
 1573 0036 234B     		ldr	r3, .L79+8
 1574 0038 1B68     		ldr	r3, [r3]
 1575 003a 23F04063 		bic	r3, r3, #201326592
 1576 003e 43F08063 		orr	r3, r3, #67108864
 1577 0042 1360     		str	r3, [r2]
 634:../common/lpcusb/target/usbhw_lpc.c **** 
 635:../common/lpcusb/target/usbhw_lpc.c **** 	// P0.30 is USB_D-
 636:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~(3 << 28)) | (1 << 28);
 1578              		.loc 1 636 0
 1579 0044 1F4A     		ldr	r2, .L79+8
 1580 0046 1F4B     		ldr	r3, .L79+8
 1581 0048 1B68     		ldr	r3, [r3]
 1582 004a 23F04053 		bic	r3, r3, #805306368
 1583 004e 43F08053 		orr	r3, r3, #268435456
 1584 0052 1360     		str	r3, [r2]
 637:../common/lpcusb/target/usbhw_lpc.c **** 
 638:../common/lpcusb/target/usbhw_lpc.c **** 	// enable PUSB
 639:../common/lpcusb/target/usbhw_lpc.c **** 	PCONP |= PCONP_PCUSB;
 1585              		.loc 1 639 0
 1586 0054 1C4A     		ldr	r2, .L79+12
 1587 0056 1C4B     		ldr	r3, .L79+12
 1588 0058 1B68     		ldr	r3, [r3]
 1589 005a 43F00043 		orr	r3, r3, #-2147483648
 1590 005e 1360     		str	r3, [r2]
 640:../common/lpcusb/target/usbhw_lpc.c **** 
 641:../common/lpcusb/target/usbhw_lpc.c **** 	/* enable the USB controller clocks */
 642:../common/lpcusb/target/usbhw_lpc.c ****     USBClkCtrl |= (USBClkCtrl_DEV_CLK_EN | USBClkCtrl_AHB_CLK_EN);
 1591              		.loc 1 642 0
 1592 0060 1A4A     		ldr	r2, .L79+16
 1593 0062 1A4B     		ldr	r3, .L79+16
 1594 0064 1B68     		ldr	r3, [r3]
 1595 0066 43F01203 		orr	r3, r3, #18
 1596 006a 1360     		str	r3, [r2]
 643:../common/lpcusb/target/usbhw_lpc.c ****     while (!(USBClkSt & USBClkSt_DEV_CLK_ON));
 1597              		.loc 1 643 0
 1598 006c 00BF     		nop
 1599              	.L76:
 1600              		.loc 1 643 0 is_stmt 0 discriminator 1
 1601 006e 184B     		ldr	r3, .L79+20
 1602 0070 1B68     		ldr	r3, [r3]
 1603 0072 03F00203 		and	r3, r3, #2
 1604 0076 002B     		cmp	r3, #0
 1605 0078 F9D0     		beq	.L76
 644:../common/lpcusb/target/usbhw_lpc.c ****     while (!(USBClkSt & USBClkSt_AHB_CLK_ON));
 1606              		.loc 1 644 0 is_stmt 1
 1607 007a 00BF     		nop
 1608              	.L77:
 1609              		.loc 1 644 0 is_stmt 0 discriminator 1
 1610 007c 144B     		ldr	r3, .L79+20
 1611 007e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cczMJFp8.s 			page 40


 1612 0080 03F01003 		and	r3, r3, #16
 1613 0084 002B     		cmp	r3, #0
 1614 0086 F9D0     		beq	.L77
 645:../common/lpcusb/target/usbhw_lpc.c **** #endif
 646:../common/lpcusb/target/usbhw_lpc.c **** 
 647:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC214x
 648:../common/lpcusb/target/usbhw_lpc.c ****     
 649:../common/lpcusb/target/usbhw_lpc.c ****     // configure P0.23 for Vbus sense
 650:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~(3 << 14)) | (1 << 14);   // P0.23
 651:../common/lpcusb/target/usbhw_lpc.c ****     // configure P0.31 for CONNECT
 652:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~(3 << 30)) | (2 << 30);   // P0.31
 653:../common/lpcusb/target/usbhw_lpc.c **** 
 654:../common/lpcusb/target/usbhw_lpc.c ****     // enable PUSB
 655:../common/lpcusb/target/usbhw_lpc.c ****     PCONP |= (1 << 31);     
 656:../common/lpcusb/target/usbhw_lpc.c **** 
 657:../common/lpcusb/target/usbhw_lpc.c ****     // initialise PLL
 658:../common/lpcusb/target/usbhw_lpc.c ****     PLL1CON = 1;            // enable PLL
 659:../common/lpcusb/target/usbhw_lpc.c ****     PLL1CFG = (1 << 5) | 3; // P = 2, M = 4
 660:../common/lpcusb/target/usbhw_lpc.c ****     PLL1FEED = 0xAA;
 661:../common/lpcusb/target/usbhw_lpc.c ****     PLL1FEED = 0x55;
 662:../common/lpcusb/target/usbhw_lpc.c ****     while ((PLL1STAT & (1 << 10)) == 0);
 663:../common/lpcusb/target/usbhw_lpc.c **** 
 664:../common/lpcusb/target/usbhw_lpc.c ****     PLL1CON = 3;            // enable and connect
 665:../common/lpcusb/target/usbhw_lpc.c ****     PLL1FEED = 0xAA;
 666:../common/lpcusb/target/usbhw_lpc.c ****     PLL1FEED = 0x55;
 667:../common/lpcusb/target/usbhw_lpc.c **** 
 668:../common/lpcusb/target/usbhw_lpc.c **** #endif
 669:../common/lpcusb/target/usbhw_lpc.c **** 
 670:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC23xx
 671:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC2378_PORTB
 672:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~(3 << 30)) | (1 << 30);
 673:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL3 = (PINSEL3 & ~(3 << 28)) | (2 << 28);
 674:../common/lpcusb/target/usbhw_lpc.c ****     /* Due to a bug in the LPC23xx chips, the connection functionality must be
 675:../common/lpcusb/target/usbhw_lpc.c ****     * simulated using GPIO. Hopefully for production this will be fixed and the
 676:../common/lpcusb/target/usbhw_lpc.c ****     * commented out code will work */
 677:../common/lpcusb/target/usbhw_lpc.c ****     //PINSEL0 = (PINSEL0 & ~((3 << 26) | (3 << 28))) | (1 << 26) | (1 << 28); /* Doesn't work due t
 678:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL0 = (PINSEL0 & ~((3 << 26) | (3 << 28))) | (1 << 26);
 679:../common/lpcusb/target/usbhw_lpc.c ****     FIO0DIR |= (1<<14); /* Set pin to output */
 680:../common/lpcusb/target/usbhw_lpc.c ****     FIO0SET = (1<<14); /* Set output high to disconnect */
 681:../common/lpcusb/target/usbhw_lpc.c ****     
 682:../common/lpcusb/target/usbhw_lpc.c **** #else
 683:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL1 = (PINSEL1 & ~((3 << 26) | (3 << 28))) | (1 << 26) | (1 << 28);
 684:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL3 = (PINSEL3 & ~((3 << 4) | (3 << 28))) | (1 << 4) | (2 << 28);
 685:../common/lpcusb/target/usbhw_lpc.c ****     /* Due to a bug in the LPC23xx chips, the connection functionality must be
 686:../common/lpcusb/target/usbhw_lpc.c ****     * simulated using GPIO. Hopefully for production this will be fixed and the
 687:../common/lpcusb/target/usbhw_lpc.c ****     * commented out code will work */
 688:../common/lpcusb/target/usbhw_lpc.c ****     //PINSEL4 = (PINSEL4 & ~(3 << 18)) | (1 << 18); /* Doesn't work due to bug in chip */
 689:../common/lpcusb/target/usbhw_lpc.c ****     PINSEL4 = (PINSEL4 & ~(3 << 18)); /* Use pin as GPIO */
 690:../common/lpcusb/target/usbhw_lpc.c ****     FIO2DIR |= (1<<9); /* Set pin to output */
 691:../common/lpcusb/target/usbhw_lpc.c ****     FIO2SET = (1<<9); /* Set output high to disconnect */
 692:../common/lpcusb/target/usbhw_lpc.c **** #endif
 693:../common/lpcusb/target/usbhw_lpc.c **** 
 694:../common/lpcusb/target/usbhw_lpc.c ****     // enable PUSB
 695:../common/lpcusb/target/usbhw_lpc.c ****     PCONP |= (1 << 31);     
 696:../common/lpcusb/target/usbhw_lpc.c **** 
 697:../common/lpcusb/target/usbhw_lpc.c ****   /* The LPC23xx uses a single PLL, and has multiple clock dividers for each
 698:../common/lpcusb/target/usbhw_lpc.c ****    * peripheral. These settings assume a PLL frequency of 288 MHz */
ARM GAS  /tmp/cczMJFp8.s 			page 41


 699:../common/lpcusb/target/usbhw_lpc.c **** 
 700:../common/lpcusb/target/usbhw_lpc.c ****     USBCLKCFG = 5; /* 288 MHz / 48 MHz = 6 */
 701:../common/lpcusb/target/usbhw_lpc.c **** 
 702:../common/lpcusb/target/usbhw_lpc.c **** #ifdef LPC2378_PORTB
 703:../common/lpcusb/target/usbhw_lpc.c ****     USBClkCtrl = (1 << 1) | (1 << 3) | (1 << 4); /* Enable the clocks */
 704:../common/lpcusb/target/usbhw_lpc.c ****     while (!(USBClkSt & ((1 << 1) | (1 << 3) | (1 << 4))));
 705:../common/lpcusb/target/usbhw_lpc.c ****     USBPortSel = 0x3; /* Set LPC to use USB Port B pins */
 706:../common/lpcusb/target/usbhw_lpc.c **** #else
 707:../common/lpcusb/target/usbhw_lpc.c ****     USBClkCtrl = (1 << 1) | (1 << 4); /* Enable the clocks */
 708:../common/lpcusb/target/usbhw_lpc.c ****     while (!(USBClkSt & ((1 << 1) | (1 << 4))));
 709:../common/lpcusb/target/usbhw_lpc.c **** #endif
 710:../common/lpcusb/target/usbhw_lpc.c **** 
 711:../common/lpcusb/target/usbhw_lpc.c **** #endif
 712:../common/lpcusb/target/usbhw_lpc.c ****     
 713:../common/lpcusb/target/usbhw_lpc.c ****     // disable/clear all interrupts for now
 714:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntEn = 0;
 1615              		.loc 1 714 0 is_stmt 1
 1616 0088 124B     		ldr	r3, .L79+24
 1617 008a 0022     		movs	r2, #0
 1618 008c 1A60     		str	r2, [r3]
 715:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntClr = 0xFFFFFFFF;
 1619              		.loc 1 715 0
 1620 008e 124B     		ldr	r3, .L79+28
 1621 0090 4FF0FF32 		mov	r2, #-1
 1622 0094 1A60     		str	r2, [r3]
 716:../common/lpcusb/target/usbhw_lpc.c ****     USBDevIntPri = 0;
 1623              		.loc 1 716 0
 1624 0096 114B     		ldr	r3, .L79+32
 1625 0098 0022     		movs	r2, #0
 1626 009a 1A60     		str	r2, [r3]
 717:../common/lpcusb/target/usbhw_lpc.c **** 
 718:../common/lpcusb/target/usbhw_lpc.c ****     USBEpIntEn = 0;
 1627              		.loc 1 718 0
 1628 009c 104B     		ldr	r3, .L79+36
 1629 009e 0022     		movs	r2, #0
 1630 00a0 1A60     		str	r2, [r3]
 719:../common/lpcusb/target/usbhw_lpc.c ****     USBEpIntClr = 0xFFFFFFFF;
 1631              		.loc 1 719 0
 1632 00a2 104B     		ldr	r3, .L79+40
 1633 00a4 4FF0FF32 		mov	r2, #-1
 1634 00a8 1A60     		str	r2, [r3]
 720:../common/lpcusb/target/usbhw_lpc.c ****     USBEpIntPri = 0;
 1635              		.loc 1 720 0
 1636 00aa 0F4B     		ldr	r3, .L79+44
 1637 00ac 0022     		movs	r2, #0
 1638 00ae 1A60     		str	r2, [r3]
 721:../common/lpcusb/target/usbhw_lpc.c **** 
 722:../common/lpcusb/target/usbhw_lpc.c ****     // by default, only ACKs generate interrupts
 723:../common/lpcusb/target/usbhw_lpc.c ****     USBHwNakIntEnable(0);
 1639              		.loc 1 723 0
 1640 00b0 0020     		movs	r0, #0
 1641 00b2 FFF7FEFF 		bl	USBHwNakIntEnable
 724:../common/lpcusb/target/usbhw_lpc.c ****     
 725:../common/lpcusb/target/usbhw_lpc.c ****     // init debug leds
 726:../common/lpcusb/target/usbhw_lpc.c ****     DEBUG_LED_INIT(8);
 727:../common/lpcusb/target/usbhw_lpc.c ****     DEBUG_LED_INIT(9);
 728:../common/lpcusb/target/usbhw_lpc.c ****     DEBUG_LED_INIT(10);
ARM GAS  /tmp/cczMJFp8.s 			page 42


 729:../common/lpcusb/target/usbhw_lpc.c **** 
 730:../common/lpcusb/target/usbhw_lpc.c ****     return TRUE;
 1642              		.loc 1 730 0
 1643 00b6 0123     		movs	r3, #1
 731:../common/lpcusb/target/usbhw_lpc.c **** }
 1644              		.loc 1 731 0
 1645 00b8 1846     		mov	r0, r3
 1646 00ba 80BD     		pop	{r7, pc}
 1647              	.L80:
 1648              		.align	2
 1649              	.L79:
 1650 00bc 10C00240 		.word	1073922064
 1651 00c0 0CC00240 		.word	1073922060
 1652 00c4 04C00240 		.word	1073922052
 1653 00c8 C4C00F40 		.word	1074774212
 1654 00cc F4CF0050 		.word	1342230516
 1655 00d0 F8CF0050 		.word	1342230520
 1656 00d4 04C20050 		.word	1342226948
 1657 00d8 08C20050 		.word	1342226952
 1658 00dc 2CC20050 		.word	1342226988
 1659 00e0 34C20050 		.word	1342226996
 1660 00e4 38C20050 		.word	1342227000
 1661 00e8 40C20050 		.word	1342227008
 1662              		.cfi_endproc
 1663              	.LFE21:
 1665              		.section	.text.USBSetupDMADescriptor,"ax",%progbits
 1666              		.align	2
 1667              		.global	USBSetupDMADescriptor
 1668              		.thumb
 1669              		.thumb_func
 1671              	USBSetupDMADescriptor:
 1672              	.LFB22:
 732:../common/lpcusb/target/usbhw_lpc.c **** 
 733:../common/lpcusb/target/usbhw_lpc.c **** 
 734:../common/lpcusb/target/usbhw_lpc.c **** 
 735:../common/lpcusb/target/usbhw_lpc.c **** 
 736:../common/lpcusb/target/usbhw_lpc.c **** 
 737:../common/lpcusb/target/usbhw_lpc.c **** 
 738:../common/lpcusb/target/usbhw_lpc.c **** //FIXME check all the DMA stuff
 739:../common/lpcusb/target/usbhw_lpc.c **** 
 740:../common/lpcusb/target/usbhw_lpc.c **** /**
 741:../common/lpcusb/target/usbhw_lpc.c ****     This function is used to setup and populated the various elements of a LPC2148 DMA desccriptor 
 742:../common/lpcusb/target/usbhw_lpc.c ****     after calling this function, the DMA descriptor could be used as part of a DMA tranfer.
 743:../common/lpcusb/target/usbhw_lpc.c ****     
 744:../common/lpcusb/target/usbhw_lpc.c ****         
 745:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] dmaDescriptor    A pointer to a 4 or 5 element long array of U32's that the DMA des
 746:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] nextDdPtr        The value to be placed in the "Next_DD_Pointer" value of the DMA d
 747:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] isIsocFlag       Flag to indicate if this DMA descriptor is for an ISOC endpoint (w
 748:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] maxPacketSize    The maximum packet size that can be sent/received for the endpoint
 749:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] dmaLengthIsocNumFrames    For non-ISOC endpoints, the number of bytes in the buffer
 750:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] dmaBufferStartAddress    Start address for the dma transfer (location to store data
 751:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] isocPacketSizeMemoryAddress   If a non-ISOC endpoint, set this to NULL, if an ISOC 
 752:../common/lpcusb/target/usbhw_lpc.c **** 
 753:../common/lpcusb/target/usbhw_lpc.c ****     @return  void
 754:../common/lpcusb/target/usbhw_lpc.c ****  */
 755:../common/lpcusb/target/usbhw_lpc.c **** void USBSetupDMADescriptor(
 756:../common/lpcusb/target/usbhw_lpc.c **** 		volatile U32 dmaDescriptor[], 
ARM GAS  /tmp/cczMJFp8.s 			page 43


 757:../common/lpcusb/target/usbhw_lpc.c **** 		volatile U32 nextDdPtr[],
 758:../common/lpcusb/target/usbhw_lpc.c **** 		const U8 isIsocFlag, 
 759:../common/lpcusb/target/usbhw_lpc.c **** 		const U16 maxPacketSize, 
 760:../common/lpcusb/target/usbhw_lpc.c **** 		const U16 dmaLengthIsocNumFrames,
 761:../common/lpcusb/target/usbhw_lpc.c **** 		void *dmaBufferStartAddress,
 762:../common/lpcusb/target/usbhw_lpc.c **** 		U32 *isocPacketSizeMemoryAddress ) 
 763:../common/lpcusb/target/usbhw_lpc.c **** {
 1673              		.loc 1 763 0
 1674              		.cfi_startproc
 1675              		@ args = 12, pretend = 0, frame = 16
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0000 80B4     		push	{r7}
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 85B0     		sub	sp, sp, #20
 1682              		.cfi_def_cfa_offset 24
 1683 0004 00AF     		add	r7, sp, #0
 1684              		.cfi_def_cfa_register 7
 1685 0006 F860     		str	r0, [r7, #12]
 1686 0008 B960     		str	r1, [r7, #8]
 1687 000a 1146     		mov	r1, r2
 1688 000c 1A46     		mov	r2, r3
 1689 000e 0B46     		mov	r3, r1
 1690 0010 FB71     		strb	r3, [r7, #7]
 1691 0012 1346     		mov	r3, r2	@ movhi
 1692 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 764:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[1] = 0;
 1693              		.loc 1 764 0
 1694 0016 FB68     		ldr	r3, [r7, #12]
 1695 0018 0433     		adds	r3, r3, #4
 1696 001a 0022     		movs	r2, #0
 1697 001c 1A60     		str	r2, [r3]
 765:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[0] = (U32) nextDdPtr;
 1698              		.loc 1 765 0
 1699 001e BA68     		ldr	r2, [r7, #8]
 1700 0020 FB68     		ldr	r3, [r7, #12]
 1701 0022 1A60     		str	r2, [r3]
 766:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[1] |= ((maxPacketSize & 0x3FF) << 5);//Set maxPacketSize
 1702              		.loc 1 766 0
 1703 0024 FB68     		ldr	r3, [r7, #12]
 1704 0026 0433     		adds	r3, r3, #4
 1705 0028 FA68     		ldr	r2, [r7, #12]
 1706 002a 0432     		adds	r2, r2, #4
 1707 002c 1268     		ldr	r2, [r2]
 1708 002e B988     		ldrh	r1, [r7, #4]
 1709 0030 C1F30901 		ubfx	r1, r1, #0, #10
 1710 0034 4901     		lsls	r1, r1, #5
 1711 0036 0A43     		orrs	r2, r2, r1
 1712 0038 1A60     		str	r2, [r3]
 767:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[1] |= (dmaLengthIsocNumFrames << 16);//aka number of ISOC packets if in ISOC mode
 1713              		.loc 1 767 0
 1714 003a FB68     		ldr	r3, [r7, #12]
 1715 003c 0433     		adds	r3, r3, #4
 1716 003e FA68     		ldr	r2, [r7, #12]
 1717 0040 0432     		adds	r2, r2, #4
 1718 0042 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cczMJFp8.s 			page 44


 1719 0044 398B     		ldrh	r1, [r7, #24]
 1720 0046 0904     		lsls	r1, r1, #16
 1721 0048 0A43     		orrs	r2, r2, r1
 1722 004a 1A60     		str	r2, [r3]
 768:../common/lpcusb/target/usbhw_lpc.c **** 	if( isIsocFlag ) {
 1723              		.loc 1 768 0
 1724 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1725 004e 002B     		cmp	r3, #0
 1726 0050 07D0     		beq	.L82
 769:../common/lpcusb/target/usbhw_lpc.c **** 		dmaDescriptor[1] |= (1<<4);//enable isoc type
 1727              		.loc 1 769 0
 1728 0052 FB68     		ldr	r3, [r7, #12]
 1729 0054 0433     		adds	r3, r3, #4
 1730 0056 FA68     		ldr	r2, [r7, #12]
 1731 0058 0432     		adds	r2, r2, #4
 1732 005a 1268     		ldr	r2, [r2]
 1733 005c 42F01002 		orr	r2, r2, #16
 1734 0060 1A60     		str	r2, [r3]
 1735              	.L82:
 770:../common/lpcusb/target/usbhw_lpc.c **** 	}
 771:../common/lpcusb/target/usbhw_lpc.c **** 	if( nextDdPtr != NULL ) {
 1736              		.loc 1 771 0
 1737 0062 BB68     		ldr	r3, [r7, #8]
 1738 0064 002B     		cmp	r3, #0
 1739 0066 07D0     		beq	.L83
 772:../common/lpcusb/target/usbhw_lpc.c **** 		dmaDescriptor[1] |= (1<<2); //mark next DD as valid
 1740              		.loc 1 772 0
 1741 0068 FB68     		ldr	r3, [r7, #12]
 1742 006a 0433     		adds	r3, r3, #4
 1743 006c FA68     		ldr	r2, [r7, #12]
 1744 006e 0432     		adds	r2, r2, #4
 1745 0070 1268     		ldr	r2, [r2]
 1746 0072 42F00402 		orr	r2, r2, #4
 1747 0076 1A60     		str	r2, [r3]
 1748              	.L83:
 773:../common/lpcusb/target/usbhw_lpc.c **** 	}
 774:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[2] = (U32) dmaBufferStartAddress;
 1749              		.loc 1 774 0
 1750 0078 FB68     		ldr	r3, [r7, #12]
 1751 007a 0833     		adds	r3, r3, #8
 1752 007c FA69     		ldr	r2, [r7, #28]
 1753 007e 1A60     		str	r2, [r3]
 775:../common/lpcusb/target/usbhw_lpc.c **** 	
 776:../common/lpcusb/target/usbhw_lpc.c **** 	if( isIsocFlag && isocPacketSizeMemoryAddress != NULL ) {
 1754              		.loc 1 776 0
 1755 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1756 0082 002B     		cmp	r3, #0
 1757 0084 06D0     		beq	.L84
 1758              		.loc 1 776 0 is_stmt 0 discriminator 1
 1759 0086 3B6A     		ldr	r3, [r7, #32]
 1760 0088 002B     		cmp	r3, #0
 1761 008a 03D0     		beq	.L84
 777:../common/lpcusb/target/usbhw_lpc.c **** 		dmaDescriptor[4] = (U32) isocPacketSizeMemoryAddress;
 1762              		.loc 1 777 0 is_stmt 1
 1763 008c FB68     		ldr	r3, [r7, #12]
 1764 008e 1033     		adds	r3, r3, #16
 1765 0090 3A6A     		ldr	r2, [r7, #32]
ARM GAS  /tmp/cczMJFp8.s 			page 45


 1766 0092 1A60     		str	r2, [r3]
 1767              	.L84:
 778:../common/lpcusb/target/usbhw_lpc.c **** 	}
 779:../common/lpcusb/target/usbhw_lpc.c **** 	dmaDescriptor[3] = 0; //mark DD as valid and reset all status bits
 1768              		.loc 1 779 0
 1769 0094 FB68     		ldr	r3, [r7, #12]
 1770 0096 0C33     		adds	r3, r3, #12
 1771 0098 0022     		movs	r2, #0
 1772 009a 1A60     		str	r2, [r3]
 780:../common/lpcusb/target/usbhw_lpc.c **** }
 1773              		.loc 1 780 0
 1774 009c 1437     		adds	r7, r7, #20
 1775              		.cfi_def_cfa_offset 4
 1776 009e BD46     		mov	sp, r7
 1777              		.cfi_def_cfa_register 13
 1778              		@ sp needed
 1779 00a0 5DF8047B 		ldr	r7, [sp], #4
 1780              		.cfi_restore 7
 1781              		.cfi_def_cfa_offset 0
 1782 00a4 7047     		bx	lr
 1783              		.cfi_endproc
 1784              	.LFE22:
 1786 00a6 00BF     		.section	.text.USBDisableDMAForEndpoint,"ax",%progbits
 1787              		.align	2
 1788              		.global	USBDisableDMAForEndpoint
 1789              		.thumb
 1790              		.thumb_func
 1792              	USBDisableDMAForEndpoint:
 1793              	.LFB23:
 781:../common/lpcusb/target/usbhw_lpc.c **** 
 782:../common/lpcusb/target/usbhw_lpc.c **** /**
 783:../common/lpcusb/target/usbhw_lpc.c ****     This function disables DMA for the endpoint indicated by the paramater.
 784:../common/lpcusb/target/usbhw_lpc.c ****         
 785:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEndpointNumber the endpoint number to be disabled.
 786:../common/lpcusb/target/usbhw_lpc.c **** 
 787:../common/lpcusb/target/usbhw_lpc.c ****     @return   void
 788:../common/lpcusb/target/usbhw_lpc.c ****  */
 789:../common/lpcusb/target/usbhw_lpc.c **** void USBDisableDMAForEndpoint(const U8 bEndpointNumber) {
 1794              		.loc 1 789 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 16
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798              		@ link register save eliminated.
 1799 0000 80B4     		push	{r7}
 1800              		.cfi_def_cfa_offset 4
 1801              		.cfi_offset 7, -4
 1802 0002 85B0     		sub	sp, sp, #20
 1803              		.cfi_def_cfa_offset 24
 1804 0004 00AF     		add	r7, sp, #0
 1805              		.cfi_def_cfa_register 7
 1806 0006 0346     		mov	r3, r0
 1807 0008 FB71     		strb	r3, [r7, #7]
 790:../common/lpcusb/target/usbhw_lpc.c **** 	int idx = EP2IDX(bEndpointNumber);
 1808              		.loc 1 790 0
 1809 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1810 000c 03F00F03 		and	r3, r3, #15
 1811 0010 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/cczMJFp8.s 			page 46


 1812 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1813 0014 D209     		lsrs	r2, r2, #7
 1814 0016 D2B2     		uxtb	r2, r2
 1815 0018 1343     		orrs	r3, r3, r2
 1816 001a FB60     		str	r3, [r7, #12]
 791:../common/lpcusb/target/usbhw_lpc.c **** 	USBEpDMADis = (1<<idx);
 1817              		.loc 1 791 0
 1818 001c 054A     		ldr	r2, .L86
 1819 001e 0121     		movs	r1, #1
 1820 0020 FB68     		ldr	r3, [r7, #12]
 1821 0022 01FA03F3 		lsl	r3, r1, r3
 1822 0026 1360     		str	r3, [r2]
 792:../common/lpcusb/target/usbhw_lpc.c **** }
 1823              		.loc 1 792 0
 1824 0028 1437     		adds	r7, r7, #20
 1825              		.cfi_def_cfa_offset 4
 1826 002a BD46     		mov	sp, r7
 1827              		.cfi_def_cfa_register 13
 1828              		@ sp needed
 1829 002c 5DF8047B 		ldr	r7, [sp], #4
 1830              		.cfi_restore 7
 1831              		.cfi_def_cfa_offset 0
 1832 0030 7047     		bx	lr
 1833              	.L87:
 1834 0032 00BF     		.align	2
 1835              	.L86:
 1836 0034 8CC20050 		.word	1342227084
 1837              		.cfi_endproc
 1838              	.LFE23:
 1840              		.section	.text.USBEnableDMAForEndpoint,"ax",%progbits
 1841              		.align	2
 1842              		.global	USBEnableDMAForEndpoint
 1843              		.thumb
 1844              		.thumb_func
 1846              	USBEnableDMAForEndpoint:
 1847              	.LFB24:
 793:../common/lpcusb/target/usbhw_lpc.c **** 
 794:../common/lpcusb/target/usbhw_lpc.c **** /**
 795:../common/lpcusb/target/usbhw_lpc.c ****     Enables DMA for a particular endpoint.
 796:../common/lpcusb/target/usbhw_lpc.c ****         
 797:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEndpontNumber The endpoint to to enable DMA for.
 798:../common/lpcusb/target/usbhw_lpc.c **** 
 799:../common/lpcusb/target/usbhw_lpc.c ****     @return 
 800:../common/lpcusb/target/usbhw_lpc.c ****  */
 801:../common/lpcusb/target/usbhw_lpc.c **** void USBEnableDMAForEndpoint(const U8 bEndpointNumber) {
 1848              		.loc 1 801 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 16
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852              		@ link register save eliminated.
 1853 0000 80B4     		push	{r7}
 1854              		.cfi_def_cfa_offset 4
 1855              		.cfi_offset 7, -4
 1856 0002 85B0     		sub	sp, sp, #20
 1857              		.cfi_def_cfa_offset 24
 1858 0004 00AF     		add	r7, sp, #0
 1859              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cczMJFp8.s 			page 47


 1860 0006 0346     		mov	r3, r0
 1861 0008 FB71     		strb	r3, [r7, #7]
 802:../common/lpcusb/target/usbhw_lpc.c **** 	int idx = EP2IDX(bEndpointNumber);
 1862              		.loc 1 802 0
 1863 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1864 000c 03F00F03 		and	r3, r3, #15
 1865 0010 5B00     		lsls	r3, r3, #1
 1866 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1867 0014 D209     		lsrs	r2, r2, #7
 1868 0016 D2B2     		uxtb	r2, r2
 1869 0018 1343     		orrs	r3, r3, r2
 1870 001a FB60     		str	r3, [r7, #12]
 803:../common/lpcusb/target/usbhw_lpc.c **** 	USBEpDMAEn = (1<<idx);
 1871              		.loc 1 803 0
 1872 001c 054A     		ldr	r2, .L89
 1873 001e 0121     		movs	r1, #1
 1874 0020 FB68     		ldr	r3, [r7, #12]
 1875 0022 01FA03F3 		lsl	r3, r1, r3
 1876 0026 1360     		str	r3, [r2]
 804:../common/lpcusb/target/usbhw_lpc.c **** }
 1877              		.loc 1 804 0
 1878 0028 1437     		adds	r7, r7, #20
 1879              		.cfi_def_cfa_offset 4
 1880 002a BD46     		mov	sp, r7
 1881              		.cfi_def_cfa_register 13
 1882              		@ sp needed
 1883 002c 5DF8047B 		ldr	r7, [sp], #4
 1884              		.cfi_restore 7
 1885              		.cfi_def_cfa_offset 0
 1886 0030 7047     		bx	lr
 1887              	.L90:
 1888 0032 00BF     		.align	2
 1889              	.L89:
 1890 0034 88C20050 		.word	1342227080
 1891              		.cfi_endproc
 1892              	.LFE24:
 1894              		.section	.text.USBInitializeISOCFrameArray,"ax",%progbits
 1895              		.align	2
 1896              		.global	USBInitializeISOCFrameArray
 1897              		.thumb
 1898              		.thumb_func
 1900              	USBInitializeISOCFrameArray:
 1901              	.LFB25:
 805:../common/lpcusb/target/usbhw_lpc.c **** 
 806:../common/lpcusb/target/usbhw_lpc.c **** /**
 807:../common/lpcusb/target/usbhw_lpc.c ****     This function is used to initialized an ISOC frame array
 808:../common/lpcusb/target/usbhw_lpc.c ****         
 809:../common/lpcusb/target/usbhw_lpc.c ****     @param [in|out] isocFrameArr        The array of ISOC frame descriptors to be set, it should po
 810:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] numElements             The number of elements in the isocFrameArr array.
 811:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] startFrameNumber        Number to start at for numbering each frame.
 812:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] defaultFrameLength      The frame length to set all the frame descriptors to.
 813:../common/lpcusb/target/usbhw_lpc.c **** 
 814:../common/lpcusb/target/usbhw_lpc.c ****     @return  void
 815:../common/lpcusb/target/usbhw_lpc.c ****  */
 816:../common/lpcusb/target/usbhw_lpc.c **** void USBInitializeISOCFrameArray(U32 isocFrameArr[], const U32 numElements, const U16 startFrameNum
 1902              		.loc 1 816 0
 1903              		.cfi_startproc
ARM GAS  /tmp/cczMJFp8.s 			page 48


 1904              		@ args = 0, pretend = 0, frame = 24
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907 0000 80B4     		push	{r7}
 1908              		.cfi_def_cfa_offset 4
 1909              		.cfi_offset 7, -4
 1910 0002 87B0     		sub	sp, sp, #28
 1911              		.cfi_def_cfa_offset 32
 1912 0004 00AF     		add	r7, sp, #0
 1913              		.cfi_def_cfa_register 7
 1914 0006 F860     		str	r0, [r7, #12]
 1915 0008 B960     		str	r1, [r7, #8]
 1916 000a 1146     		mov	r1, r2
 1917 000c 1A46     		mov	r2, r3
 1918 000e 0B46     		mov	r3, r1	@ movhi
 1919 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 1920 0012 1346     		mov	r3, r2	@ movhi
 1921 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 817:../common/lpcusb/target/usbhw_lpc.c **** 	U16 i;
 818:../common/lpcusb/target/usbhw_lpc.c **** 	U16 frameNumber = startFrameNumber;
 1922              		.loc 1 818 0
 1923 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1924 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 819:../common/lpcusb/target/usbhw_lpc.c **** 	
 820:../common/lpcusb/target/usbhw_lpc.c **** 	for(i = 0; i < numElements; i++ ) {
 1925              		.loc 1 820 0
 1926 001a 0023     		movs	r3, #0
 1927 001c FB82     		strh	r3, [r7, #22]	@ movhi
 1928 001e 12E0     		b	.L92
 1929              	.L93:
 821:../common/lpcusb/target/usbhw_lpc.c **** 		isocFrameArr[i] = (frameNumber<<16) | (1<<15) | (defaultFrameLength & 0x3FF);
 1930              		.loc 1 821 0 discriminator 3
 1931 0020 FB8A     		ldrh	r3, [r7, #22]
 1932 0022 9B00     		lsls	r3, r3, #2
 1933 0024 FA68     		ldr	r2, [r7, #12]
 1934 0026 1344     		add	r3, r3, r2
 1935 0028 BA8A     		ldrh	r2, [r7, #20]
 1936 002a 1204     		lsls	r2, r2, #16
 1937 002c 42F40041 		orr	r1, r2, #32768
 1938 0030 BA88     		ldrh	r2, [r7, #4]
 1939 0032 C2F30902 		ubfx	r2, r2, #0, #10
 1940 0036 0A43     		orrs	r2, r2, r1
 1941 0038 1A60     		str	r2, [r3]
 822:../common/lpcusb/target/usbhw_lpc.c **** 		frameNumber++;
 1942              		.loc 1 822 0 discriminator 3
 1943 003a BB8A     		ldrh	r3, [r7, #20]
 1944 003c 0133     		adds	r3, r3, #1
 1945 003e BB82     		strh	r3, [r7, #20]	@ movhi
 820:../common/lpcusb/target/usbhw_lpc.c **** 		isocFrameArr[i] = (frameNumber<<16) | (1<<15) | (defaultFrameLength & 0x3FF);
 1946              		.loc 1 820 0 discriminator 3
 1947 0040 FB8A     		ldrh	r3, [r7, #22]
 1948 0042 0133     		adds	r3, r3, #1
 1949 0044 FB82     		strh	r3, [r7, #22]	@ movhi
 1950              	.L92:
 820:../common/lpcusb/target/usbhw_lpc.c **** 		isocFrameArr[i] = (frameNumber<<16) | (1<<15) | (defaultFrameLength & 0x3FF);
 1951              		.loc 1 820 0 is_stmt 0 discriminator 1
 1952 0046 FA8A     		ldrh	r2, [r7, #22]
ARM GAS  /tmp/cczMJFp8.s 			page 49


 1953 0048 BB68     		ldr	r3, [r7, #8]
 1954 004a 9A42     		cmp	r2, r3
 1955 004c E8D3     		bcc	.L93
 823:../common/lpcusb/target/usbhw_lpc.c **** 	}
 824:../common/lpcusb/target/usbhw_lpc.c **** }
 1956              		.loc 1 824 0 is_stmt 1
 1957 004e 1C37     		adds	r7, r7, #28
 1958              		.cfi_def_cfa_offset 4
 1959 0050 BD46     		mov	sp, r7
 1960              		.cfi_def_cfa_register 13
 1961              		@ sp needed
 1962 0052 5DF8047B 		ldr	r7, [sp], #4
 1963              		.cfi_restore 7
 1964              		.cfi_def_cfa_offset 0
 1965 0056 7047     		bx	lr
 1966              		.cfi_endproc
 1967              	.LFE25:
 1969              		.section	.text.USBSetHeadDDForDMA,"ax",%progbits
 1970              		.align	2
 1971              		.global	USBSetHeadDDForDMA
 1972              		.thumb
 1973              		.thumb_func
 1975              	USBSetHeadDDForDMA:
 1976              	.LFB26:
 825:../common/lpcusb/target/usbhw_lpc.c **** 
 826:../common/lpcusb/target/usbhw_lpc.c **** /**
 827:../common/lpcusb/target/usbhw_lpc.c ****     This function is used to set the DMA descriptor head for the linked list of a particular endpoi
 828:../common/lpcusb/target/usbhw_lpc.c ****         
 829:../common/lpcusb/target/usbhw_lpc.c ****     @param [in] bEp                    The endpoint number to set the DMA linked list head for.
 830:../common/lpcusb/target/usbhw_lpc.c ****     @param [in|out] udcaHeadArray      The array of pointers that point to the head DD elements for
 831:../common/lpcusb/target/usbhw_lpc.c ****     @param [in|out] dmaDescriptorPtr   The address of the DMA descriptor that is to be the new head
 832:../common/lpcusb/target/usbhw_lpc.c **** 
 833:../common/lpcusb/target/usbhw_lpc.c ****     @return 
 834:../common/lpcusb/target/usbhw_lpc.c ****  */
 835:../common/lpcusb/target/usbhw_lpc.c **** void USBSetHeadDDForDMA(const U8 bEp, volatile U32* udcaHeadArray[32], volatile U32 *dmaDescriptorP
 1977              		.loc 1 835 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 16
 1980              		@ frame_needed = 1, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982 0000 80B4     		push	{r7}
 1983              		.cfi_def_cfa_offset 4
 1984              		.cfi_offset 7, -4
 1985 0002 85B0     		sub	sp, sp, #20
 1986              		.cfi_def_cfa_offset 24
 1987 0004 00AF     		add	r7, sp, #0
 1988              		.cfi_def_cfa_register 7
 1989 0006 0346     		mov	r3, r0
 1990 0008 B960     		str	r1, [r7, #8]
 1991 000a 7A60     		str	r2, [r7, #4]
 1992 000c FB73     		strb	r3, [r7, #15]
 836:../common/lpcusb/target/usbhw_lpc.c **** 	udcaHeadArray[EP2IDX(bEp)] = dmaDescriptorPtr;
 1993              		.loc 1 836 0
 1994 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1995 0010 03F00F03 		and	r3, r3, #15
 1996 0014 5B00     		lsls	r3, r3, #1
 1997 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/cczMJFp8.s 			page 50


 1998 0018 D209     		lsrs	r2, r2, #7
 1999 001a D2B2     		uxtb	r2, r2
 2000 001c 1343     		orrs	r3, r3, r2
 2001 001e 9B00     		lsls	r3, r3, #2
 2002 0020 BA68     		ldr	r2, [r7, #8]
 2003 0022 1344     		add	r3, r3, r2
 2004 0024 7A68     		ldr	r2, [r7, #4]
 2005 0026 1A60     		str	r2, [r3]
 837:../common/lpcusb/target/usbhw_lpc.c **** }
 2006              		.loc 1 837 0
 2007 0028 1437     		adds	r7, r7, #20
 2008              		.cfi_def_cfa_offset 4
 2009 002a BD46     		mov	sp, r7
 2010              		.cfi_def_cfa_register 13
 2011              		@ sp needed
 2012 002c 5DF8047B 		ldr	r7, [sp], #4
 2013              		.cfi_restore 7
 2014              		.cfi_def_cfa_offset 0
 2015 0030 7047     		bx	lr
 2016              		.cfi_endproc
 2017              	.LFE26:
 2019 0032 00BF     		.section	.text.USBInitializeUSBDMA,"ax",%progbits
 2020              		.align	2
 2021              		.global	USBInitializeUSBDMA
 2022              		.thumb
 2023              		.thumb_func
 2025              	USBInitializeUSBDMA:
 2026              	.LFB27:
 838:../common/lpcusb/target/usbhw_lpc.c **** 
 839:../common/lpcusb/target/usbhw_lpc.c **** /**
 840:../common/lpcusb/target/usbhw_lpc.c ****     This function is used to initialize the USB DMA controller
 841:../common/lpcusb/target/usbhw_lpc.c ****         
 842:../common/lpcusb/target/usbhw_lpc.c ****     @param [in|out] udcaHeadArray   This is a pointer to the array of DMA descriptor linked-list he
 843:../common/lpcusb/target/usbhw_lpc.c **** 
 844:../common/lpcusb/target/usbhw_lpc.c ****     @return 
 845:../common/lpcusb/target/usbhw_lpc.c ****  */
 846:../common/lpcusb/target/usbhw_lpc.c **** void USBInitializeUSBDMA(volatile U32* udcaHeadArray[32]) {
 2027              		.loc 1 846 0
 2028              		.cfi_startproc
 2029              		@ args = 0, pretend = 0, frame = 16
 2030              		@ frame_needed = 1, uses_anonymous_args = 0
 2031              		@ link register save eliminated.
 2032 0000 80B4     		push	{r7}
 2033              		.cfi_def_cfa_offset 4
 2034              		.cfi_offset 7, -4
 2035 0002 85B0     		sub	sp, sp, #20
 2036              		.cfi_def_cfa_offset 24
 2037 0004 00AF     		add	r7, sp, #0
 2038              		.cfi_def_cfa_register 7
 2039 0006 7860     		str	r0, [r7, #4]
 847:../common/lpcusb/target/usbhw_lpc.c **** 	//set following 32 pointers to be null
 848:../common/lpcusb/target/usbhw_lpc.c **** 	int i;
 849:../common/lpcusb/target/usbhw_lpc.c **** 	for(i = 0; i < 32; i++ ) {
 2040              		.loc 1 849 0
 2041 0008 0023     		movs	r3, #0
 2042 000a FB60     		str	r3, [r7, #12]
 2043 000c 08E0     		b	.L96
ARM GAS  /tmp/cczMJFp8.s 			page 51


 2044              	.L97:
 850:../common/lpcusb/target/usbhw_lpc.c **** 		udcaHeadArray[i] = NULL;
 2045              		.loc 1 850 0 discriminator 3
 2046 000e FB68     		ldr	r3, [r7, #12]
 2047 0010 9B00     		lsls	r3, r3, #2
 2048 0012 7A68     		ldr	r2, [r7, #4]
 2049 0014 1344     		add	r3, r3, r2
 2050 0016 0022     		movs	r2, #0
 2051 0018 1A60     		str	r2, [r3]
 849:../common/lpcusb/target/usbhw_lpc.c **** 		udcaHeadArray[i] = NULL;
 2052              		.loc 1 849 0 discriminator 3
 2053 001a FB68     		ldr	r3, [r7, #12]
 2054 001c 0133     		adds	r3, r3, #1
 2055 001e FB60     		str	r3, [r7, #12]
 2056              	.L96:
 849:../common/lpcusb/target/usbhw_lpc.c **** 		udcaHeadArray[i] = NULL;
 2057              		.loc 1 849 0 is_stmt 0 discriminator 1
 2058 0020 FB68     		ldr	r3, [r7, #12]
 2059 0022 1F2B     		cmp	r3, #31
 2060 0024 F3DD     		ble	.L97
 851:../common/lpcusb/target/usbhw_lpc.c **** 	}
 852:../common/lpcusb/target/usbhw_lpc.c **** 	USBUDCAH = (U32) udcaHeadArray;
 2061              		.loc 1 852 0 is_stmt 1
 2062 0026 044A     		ldr	r2, .L98
 2063 0028 7B68     		ldr	r3, [r7, #4]
 2064 002a 1360     		str	r3, [r2]
 853:../common/lpcusb/target/usbhw_lpc.c **** }
 2065              		.loc 1 853 0
 2066 002c 1437     		adds	r7, r7, #20
 2067              		.cfi_def_cfa_offset 4
 2068 002e BD46     		mov	sp, r7
 2069              		.cfi_def_cfa_register 13
 2070              		@ sp needed
 2071 0030 5DF8047B 		ldr	r7, [sp], #4
 2072              		.cfi_restore 7
 2073              		.cfi_def_cfa_offset 0
 2074 0034 7047     		bx	lr
 2075              	.L99:
 2076 0036 00BF     		.align	2
 2077              	.L98:
 2078 0038 80C20050 		.word	1342227072
 2079              		.cfi_endproc
 2080              	.LFE27:
 2082              		.text
 2083              	.Letext0:
 2084              		.file 2 "../common/lpcusb/target/type.h"
 2085              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdint-gcc.h"
 2086              		.file 4 "../common/lpcusb/target/usbapi.h"
ARM GAS  /tmp/cczMJFp8.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbhw_lpc.c
     /tmp/cczMJFp8.s:19     .bss:0000000000000000 $d
     /tmp/cczMJFp8.s:20     .bss:0000000000000000 _pfnDevIntHandler
     /tmp/cczMJFp8.s:23     .bss:0000000000000004 _apfnEPIntHandlers
     /tmp/cczMJFp8.s:26     .bss:0000000000000044 _pfnFrameHandler
     /tmp/cczMJFp8.s:29     .text.Wait4DevInt:0000000000000000 $t
     /tmp/cczMJFp8.s:33     .text.Wait4DevInt:0000000000000000 Wait4DevInt
     /tmp/cczMJFp8.s:77     .text.Wait4DevInt:0000000000000028 $d
     /tmp/cczMJFp8.s:83     .text.USBHwCmd:0000000000000000 $t
     /tmp/cczMJFp8.s:87     .text.USBHwCmd:0000000000000000 USBHwCmd
     /tmp/cczMJFp8.s:126    .text.USBHwCmd:0000000000000028 $d
     /tmp/cczMJFp8.s:132    .text.USBHwCmdWrite:0000000000000000 $t
     /tmp/cczMJFp8.s:136    .text.USBHwCmdWrite:0000000000000000 USBHwCmdWrite
     /tmp/cczMJFp8.s:178    .text.USBHwCmdWrite:0000000000000030 $d
     /tmp/cczMJFp8.s:183    .text.USBHwCmdRead:0000000000000000 $t
     /tmp/cczMJFp8.s:187    .text.USBHwCmdRead:0000000000000000 USBHwCmdRead
     /tmp/cczMJFp8.s:231    .text.USBHwCmdRead:0000000000000034 $d
     /tmp/cczMJFp8.s:237    .text.USBHwEPRealize:0000000000000000 $t
     /tmp/cczMJFp8.s:241    .text.USBHwEPRealize:0000000000000000 USBHwEPRealize
     /tmp/cczMJFp8.s:288    .text.USBHwEPRealize:0000000000000038 $d
     /tmp/cczMJFp8.s:295    .text.USBHwEPEnable:0000000000000000 $t
     /tmp/cczMJFp8.s:299    .text.USBHwEPEnable:0000000000000000 USBHwEPEnable
     /tmp/cczMJFp8.s:346    .text.USBHwEPConfig:0000000000000000 $t
     /tmp/cczMJFp8.s:351    .text.USBHwEPConfig:0000000000000000 USBHwEPConfig
     /tmp/cczMJFp8.s:399    .text.USBHwRegisterEPIntHandler:0000000000000000 $t
     /tmp/cczMJFp8.s:404    .text.USBHwRegisterEPIntHandler:0000000000000000 USBHwRegisterEPIntHandler
     /tmp/cczMJFp8.s:467    .text.USBHwRegisterEPIntHandler:0000000000000058 $d
     /tmp/cczMJFp8.s:474    .text.USBHwRegisterDevIntHandler:0000000000000000 $t
     /tmp/cczMJFp8.s:479    .text.USBHwRegisterDevIntHandler:0000000000000000 USBHwRegisterDevIntHandler
     /tmp/cczMJFp8.s:517    .text.USBHwRegisterDevIntHandler:0000000000000024 $d
     /tmp/cczMJFp8.s:523    .text.USBHwRegisterFrameHandler:0000000000000000 $t
     /tmp/cczMJFp8.s:528    .text.USBHwRegisterFrameHandler:0000000000000000 USBHwRegisterFrameHandler
     /tmp/cczMJFp8.s:566    .text.USBHwRegisterFrameHandler:0000000000000024 $d
     /tmp/cczMJFp8.s:572    .text.USBHwSetAddress:0000000000000000 $t
     /tmp/cczMJFp8.s:577    .text.USBHwSetAddress:0000000000000000 USBHwSetAddress
     /tmp/cczMJFp8.s:612    .text.USBHwConnect:0000000000000000 $t
     /tmp/cczMJFp8.s:617    .text.USBHwConnect:0000000000000000 USBHwConnect
     /tmp/cczMJFp8.s:654    .text.USBHwNakIntEnable:0000000000000000 $t
     /tmp/cczMJFp8.s:659    .text.USBHwNakIntEnable:0000000000000000 USBHwNakIntEnable
     /tmp/cczMJFp8.s:692    .text.USBHwEPGetStatus:0000000000000000 $t
     /tmp/cczMJFp8.s:697    .text.USBHwEPGetStatus:0000000000000000 USBHwEPGetStatus
     /tmp/cczMJFp8.s:740    .text.USBHwEPStall:0000000000000000 $t
     /tmp/cczMJFp8.s:745    .text.USBHwEPStall:0000000000000000 USBHwEPStall
     /tmp/cczMJFp8.s:798    .text.USBHwEPWrite:0000000000000000 $t
     /tmp/cczMJFp8.s:803    .text.USBHwEPWrite:0000000000000000 USBHwEPWrite
     /tmp/cczMJFp8.s:900    .text.USBHwEPWrite:0000000000000090 $d
     /tmp/cczMJFp8.s:907    .text.USBHwEPRead:0000000000000000 $t
     /tmp/cczMJFp8.s:912    .text.USBHwEPRead:0000000000000000 USBHwEPRead
     /tmp/cczMJFp8.s:1044   .text.USBHwEPRead:00000000000000c0 $d
     /tmp/cczMJFp8.s:1051   .text.fast_wait:0000000000000000 $t
     /tmp/cczMJFp8.s:1055   .text.fast_wait:0000000000000000 fast_wait
     /tmp/cczMJFp8.s:1101   .text.USBHwISOCEPRead:0000000000000000 $t
     /tmp/cczMJFp8.s:1106   .text.USBHwISOCEPRead:0000000000000000 USBHwISOCEPRead
     /tmp/cczMJFp8.s:1251   .text.USBHwISOCEPRead:00000000000000d8 $d
     /tmp/cczMJFp8.s:1258   .text.USBHwConfigDevice:0000000000000000 $t
     /tmp/cczMJFp8.s:1263   .text.USBHwConfigDevice:0000000000000000 USBHwConfigDevice
ARM GAS  /tmp/cczMJFp8.s 			page 53


     /tmp/cczMJFp8.s:1300   .text.USBHwISR:0000000000000000 $t
     /tmp/cczMJFp8.s:1305   .text.USBHwISR:0000000000000000 USBHwISR
     /tmp/cczMJFp8.s:1521   .text.USBHwISR:0000000000000174 $d
     /tmp/cczMJFp8.s:1533   .text.USBHwInit:0000000000000000 $t
     /tmp/cczMJFp8.s:1538   .text.USBHwInit:0000000000000000 USBHwInit
     /tmp/cczMJFp8.s:1650   .text.USBHwInit:00000000000000bc $d
     /tmp/cczMJFp8.s:1666   .text.USBSetupDMADescriptor:0000000000000000 $t
     /tmp/cczMJFp8.s:1671   .text.USBSetupDMADescriptor:0000000000000000 USBSetupDMADescriptor
     /tmp/cczMJFp8.s:1787   .text.USBDisableDMAForEndpoint:0000000000000000 $t
     /tmp/cczMJFp8.s:1792   .text.USBDisableDMAForEndpoint:0000000000000000 USBDisableDMAForEndpoint
     /tmp/cczMJFp8.s:1836   .text.USBDisableDMAForEndpoint:0000000000000034 $d
     /tmp/cczMJFp8.s:1841   .text.USBEnableDMAForEndpoint:0000000000000000 $t
     /tmp/cczMJFp8.s:1846   .text.USBEnableDMAForEndpoint:0000000000000000 USBEnableDMAForEndpoint
     /tmp/cczMJFp8.s:1890   .text.USBEnableDMAForEndpoint:0000000000000034 $d
     /tmp/cczMJFp8.s:1895   .text.USBInitializeISOCFrameArray:0000000000000000 $t
     /tmp/cczMJFp8.s:1900   .text.USBInitializeISOCFrameArray:0000000000000000 USBInitializeISOCFrameArray
     /tmp/cczMJFp8.s:1970   .text.USBSetHeadDDForDMA:0000000000000000 $t
     /tmp/cczMJFp8.s:1975   .text.USBSetHeadDDForDMA:0000000000000000 USBSetHeadDDForDMA
     /tmp/cczMJFp8.s:2020   .text.USBInitializeUSBDMA:0000000000000000 $t
     /tmp/cczMJFp8.s:2025   .text.USBInitializeUSBDMA:0000000000000000 USBInitializeUSBDMA
     /tmp/cczMJFp8.s:2078   .text.USBInitializeUSBDMA:0000000000000038 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
